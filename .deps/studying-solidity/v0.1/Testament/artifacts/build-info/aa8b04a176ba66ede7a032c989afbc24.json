{
	"id": "aa8b04a176ba66ede7a032c989afbc24",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/studying-solidity/v0.1/Testament/TestamentCore.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\n\ninterface IProofOfLife {\n    function updateProofOfLife(address testament) external;\n}\n\ninterface ITestamentData {\n    function getTestamentExist(address testator) external view returns (bool);\n}\n\ncontract TestamentCore is\n    Initializable,\n    UUPSUpgradeable,\n    OwnableUpgradeable,\n    PausableUpgradeable,\n    ReentrancyGuardUpgradeable,\n    AccessControlUpgradeable\n{\n    address public contractInheritanceManagement;\n    address public contractProofOfLife;\n\n    function initialize() public initializer {\n        __Ownable_init(msg.sender); //aqui eu defino o owner do contrato\n        __UUPSUpgradeable_init();\n        __Pausable_init();\n        __ReentrancyGuard_init();\n        __AccessControl_init();\n    }\n\n    function _authorizeUpgrade(address newAddress)\n        internal\n        override\n        onlyOwner\n    {}\n\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    //////////Modifiers//////////\n    modifier onlyManager() {\n        require(\n            msg.sender == contractInheritanceManagement,\n            \"Only Manager can be called by Core\"\n        );\n        _;\n    }\n\n    modifier onlyProofOfLife() {\n        require(\n            msg.sender == contractProofOfLife,\n            \"Only ProofOfLife can be called by Core\"\n        );\n        _;\n    }\n\n    //////////Settings contracts//////////\n    function setNewContractInheritanceManagement(\n        address newContractInheritanceManagement\n    ) external onlyOwner {\n        contractInheritanceManagement = newContractInheritanceManagement;\n    }\n\n    function setNewContractProofOfLife(address newContractProofOfLife)\n        external\n        onlyOwner\n    {\n        contractProofOfLife = newContractProofOfLife;\n    }\n\n    ////////// Inheritance Management //////////\n    function createInheritance(\n        address[] calldata _addresses,\n        uint16[] calldata _percentagens\n    ) external payable {\n        //checagens para continuar o contrato\n        require(msg.value != 0, \"createInheritance(), valor invalido\");\n        require(\n            _addresses.length != 0,\n            \"createInheritance(), adicione os herdeiros\"\n        );\n        require(\n            _addresses.length == _percentagens.length,\n            \"createInheritance(), quantidade de enderecos e porcentagens diferentes\"\n        );\n        address testator = msg.sender;\n\n        bool _exist = !ITestamentData(contractInheritanceManagement)\n            .getTestamentExist(testator);\n        require(_exist, \"Testamento ja existe. Use a funcao de edicao.\");\n    }\n\n    function updateProofOfLife(address testament) external {\n        require(testament != address(0), \"Invalid address\");\n        bool _exist = !ITestamentData(contractInheritanceManagement)\n            .getTestamentExist(testament);\n        require(_exist, \"Testamento ja existe. Use a funcao de edicao.\");\n        IProofOfLife(contractProofOfLife).updateProofOfLife(testament);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuardUpgradeable is Initializable {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    function __ReentrancyGuard_init() internal onlyInitializing {\n        __ReentrancyGuard_init_unchained();\n    }\n\n    function __ReentrancyGuard_init_unchained() internal onlyInitializing {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.22;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.22;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.2.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, bytes memory returndata) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            _revert(returndata);\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			".deps/studying-solidity/v0.1/Testament/TestamentCore.sol": {
				"IProofOfLife": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "testament",
									"type": "address"
								}
							],
							"name": "updateProofOfLife",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"updateProofOfLife(address)": "4d1ba077"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"testament\",\"type\":\"address\"}],\"name\":\"updateProofOfLife\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":\"IProofOfLife\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":{\"keccak256\":\"0x9f325d6b37cac216f1da3157f5522a968db694f8eea0d23247829e46653bd908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c065d08ae041789ce6618406176a1f9d3af6eb4fb18619d9983d86c9c8cc989\",\"dweb:/ipfs/QmfKeNDkwXQv2cejQcztxc8ya9mo9fo4Z57qJQYJ9stcqE\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITestamentData": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "testator",
									"type": "address"
								}
							],
							"name": "getTestamentExist",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTestamentExist(address)": "88c650fc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"testator\",\"type\":\"address\"}],\"name\":\"getTestamentExist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":\"ITestamentData\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":{\"keccak256\":\"0x9f325d6b37cac216f1da3157f5522a968db694f8eea0d23247829e46653bd908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c065d08ae041789ce6618406176a1f9d3af6eb4fb18619d9983d86c9c8cc989\",\"dweb:/ipfs/QmfKeNDkwXQv2cejQcztxc8ya9mo9fo4Z57qJQYJ9stcqE\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TestamentCore": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractInheritanceManagement",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "contractProofOfLife",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_addresses",
									"type": "address[]"
								},
								{
									"internalType": "uint16[]",
									"name": "_percentagens",
									"type": "uint16[]"
								}
							],
							"name": "createInheritance",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newContractInheritanceManagement",
									"type": "address"
								}
							],
							"name": "setNewContractInheritanceManagement",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newContractProofOfLife",
									"type": "address"
								}
							],
							"name": "setNewContractProofOfLife",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "testament",
									"type": "address"
								}
							],
							"name": "updateProofOfLife",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":733:3533  contract TestamentCore is... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n    /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":733:3533  contract TestamentCore is... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x8b63fa19f5fde7599f90b4f6c71a3f2786db2ae2f787bc2d57068a883a1892ab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":733:3533  contract TestamentCore is... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x710eef7a\n      gt\n      tag_25\n      jumpi\n      dup1\n      0x91d14854\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe7a84bc3\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x710eef7a\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x75ba6f71\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x8129fc1c\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      jump(tag_1)\n    tag_25:\n      dup1\n      0x4bd39bdc\n      gt\n      tag_27\n      jumpi\n      dup1\n      0x4bd39bdc\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4d1ba077\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6af70684\n      eq\n      tag_12\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1438:1503  function unpause() external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1946:2147  function setNewContractInheritanceManagement(... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3150:3531  function updateProofOfLife(address testament) external {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_9:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":965:999  address public contractProofOfLife */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2153:2320  function setNewContractProofOfLife(address newContractProofOfLife)... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":915:959  address public contractInheritanceManagement */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n      pop\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1006:1254  function initialize() public initializer {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1371:1432  function pause() external onlyOwner {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      tag_102\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_103\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_103:\n      tag_104\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_105\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      pop\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      stop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2375:3144  function createInheritance(... */\n    tag_23:\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_125\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n    tag_124:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3566:3598  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3562  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      tag_129\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3626:3637  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3625  super.supportsInterface */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_129:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_39:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4873  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      tag_132\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4900  _getAccessControlStorage */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4876:4902  _getAccessControlStorage() */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4843:4902  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4920  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4927  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4928:4932  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4912:4943  return $._roles[role].adminRole */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_139\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_140\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_139:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      tag_142\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6473  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6463:6475  _msgSender() */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6459  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_144\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_144:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_145\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_145:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1438:1503  function unpause() external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1486:1496  _unpause() */\n      tag_151\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1486:1494  _unpause */\n      tag_152\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1486:1496  _unpause() */\n      jump\t// in\n    tag_151:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1438:1503  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1946:2147  function setNewContractInheritanceManagement(... */\n    tag_58:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_154\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_154:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2108:2140  newContractInheritanceManagement */\n      dup1\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2076:2105  contractInheritanceManagement */\n      0x64\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2076:2140  contractInheritanceManagement = newContractInheritanceManagement */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1946:2147  function setNewContractInheritanceManagement(... */\n      pop\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3150:3531  function updateProofOfLife(address testament) external {... */\n    tag_62:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3244:3245  0 */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3223:3246  testament != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3223:3232  testament */\n      dup2\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3223:3246  testament != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3215:3266  require(testament != address(0), \"Invalid address\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3276:3287  bool _exist */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3306:3335  contractInheritanceManagement */\n      0x64\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3291:3367  ITestamentData(contractInheritanceManagement)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88c650fc\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3368:3377  testament */\n      dup4\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3291:3378  ITestamentData(contractInheritanceManagement)... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_160\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_160:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_162\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_162:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3290:3378  !ITestamentData(contractInheritanceManagement)... */\n      iszero\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3276:3378  bool _exist = !ITestamentData(contractInheritanceManagement)... */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3396:3402  _exist */\n      dup1\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3388:3452  require(_exist, \"Testamento ja existe. Use a funcao de edicao.\") */\n      tag_165\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_165:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3475:3494  contractProofOfLife */\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3462:3513  IProofOfLife(contractProofOfLife).updateProofOfLife */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4d1ba077\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3514:3523  testament */\n      dup4\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3462:3524  IProofOfLife(contractProofOfLife).updateProofOfLife(testament) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_168:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_169:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_171\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_171:\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3205:3531  {... */\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3150:3531  function updateProofOfLife(address testament) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_66:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      tag_173\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2666  _checkProxy */\n      tag_174\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2655:2668  _checkProxy() */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4294:4311  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4293  _authorizeUpgrade */\n      tag_177\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4276:4312  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4344:4361  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4363:4367  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4343  _upgradeToAndCallUUPS */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4322:4368  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4161:4375  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3777:3784  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2944  _checkNotDelegated */\n      tag_182\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2926:2946  _checkNotDelegated() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3803:3835  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3796:3835  return ERC1967Utils.IMPLEMENTATION_SLOT */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3708:3842  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1942:1956  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":965:999  address public contractProofOfLife */\n    tag_77:\n      0x65\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2153:2320  function setNewContractProofOfLife(address newContractProofOfLife)... */\n    tag_83:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_186:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2291:2313  newContractProofOfLife */\n      dup1\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2269:2288  contractProofOfLife */\n      0x65\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2269:2313  contractProofOfLife = newContractProofOfLife */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2153:2320  function setNewContractProofOfLife(address newContractProofOfLife)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":915:959  address public contractInheritanceManagement */\n    tag_89:\n      0x64\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1006:1254  function initialize() public initializer {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_196\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_196:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_198:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_199\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_200\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_200:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1057:1083  __Ownable_init(msg.sender) */\n      tag_202\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1072:1082  msg.sender */\n      caller\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1057:1071  __Ownable_init */\n      tag_203\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1057:1083  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_202:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1130:1154  __UUPSUpgradeable_init() */\n      tag_204\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1130:1152  __UUPSUpgradeable_init */\n      tag_205\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1130:1154  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_204:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1164:1181  __Pausable_init() */\n      tag_206\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1164:1179  __Pausable_init */\n      tag_207\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1164:1181  __Pausable_init() */\n      jump\t// in\n    tag_206:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1191:1215  __ReentrancyGuard_init() */\n      tag_208\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1191:1213  __ReentrancyGuard_init */\n      tag_209\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1191:1215  __ReentrancyGuard_init() */\n      jump\t// in\n    tag_208:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1225:1247  __AccessControl_init() */\n      tag_210\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1225:1245  __AccessControl_init */\n      tag_211\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1225:1247  __AccessControl_init() */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_213\n      swap2\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1006:1254  function initialize() public initializer {... */\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1371:1432  function pause() external onlyOwner {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_216:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1417:1425  _pause() */\n      tag_218\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1417:1423  _pause */\n      tag_219\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1417:1425  _pause() */\n      jump\t// in\n    tag_218:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1371:1432  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3855  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3882  _getAccessControlStorage */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3858:3884  _getAccessControlStorage() */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3825:3884  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3902  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3909  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3910:3914  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3923  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3924:3931  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3894:3932  return $._roles[role].hasRole[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_112:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x352e302e30000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_39\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_137\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_146\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2375:3144  function createInheritance(... */\n    tag_122:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2582:2583  0 */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2569:2578  msg.value */\n      callvalue\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2569:2583  msg.value != 0 */\n      sub\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2561:2623  require(msg.value != 0, \"createInheritance(), valor invalido\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2675:2676  0 */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2654:2664  _addresses */\n      dup5\n      dup5\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2654:2671  _addresses.length */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2654:2676  _addresses.length != 0 */\n      sub\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2633:2744  require(... */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2796:2809  _percentagens */\n      dup2\n      dup2\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2796:2816  _percentagens.length */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2775:2785  _addresses */\n      dup5\n      dup5\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2775:2792  _addresses.length */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2775:2816  _addresses.length == _percentagens.length */\n      eq\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2754:2912  require(... */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2922:2938  address testator */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2941:2951  msg.sender */\n      caller\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2922:2951  address testator = msg.sender */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2962:2973  bool _exist */\n      0x00\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2992:3021  contractInheritanceManagement */\n      0x64\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2977:3053  ITestamentData(contractInheritanceManagement)... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88c650fc\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3054:3062  testator */\n      dup4\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2977:3063  ITestamentData(contractInheritanceManagement)... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_240:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_242\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_242:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_243\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_243:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2976:3063  !ITestamentData(contractInheritanceManagement)... */\n      iszero\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2962:3063  bool _exist = !ITestamentData(contractInheritanceManagement)... */\n      swap1\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3081:3087  _exist */\n      dup1\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":3073:3137  require(_exist, \"Testamento ja existe. Use a funcao de edicao.\") */\n      tag_244\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap1\n      tag_167\n      jump\t// in\n    tag_245:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_244:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2505:3144  {... */\n      pop\n      pop\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":2375:3144  function createInheritance(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_247\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_247:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_249\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_249:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1111:1115  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1149:1174  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1145  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1134:1174  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1127:1174  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1035:1181  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2845:2875  AccessControlStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2920:2948  AccessControlStorageLocation */\n      0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2910:2948  $.slot := AccessControlStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2787:2964  function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_137:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4241  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4231:4243  _msgSender() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_140:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7393  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7420  _getAccessControlStorage */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7396:7422  _getAccessControlStorage() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7363:7422  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_261\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7476  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7484:7488  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7497  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7498:7505  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7569  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      jump\t// in\n    tag_262:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_258)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_258:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7894:8282  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7972:7976  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7988:8018  AccessControlStorage storage $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8047  _getAccessControlStorage() */\n      tag_266\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8045  _getAccessControlStorage */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8021:8047  _getAccessControlStorage() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7988:8047  AccessControlStorage storage $ = _getAccessControlStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      tag_267\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8069:8073  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8075:8082  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8068  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8061:8083  hasRole(role, account) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8057:8276  if (hasRole(role, account)) {... */\n      iszero\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8133:8138  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8100  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8107  $._roles */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8108:8112  role */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8113  $._roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8121  $._roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8130  $._roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8122:8129  account */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8130  $._roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8099:8138  $._roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8196  _msgSender() */\n      tag_269\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8194  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8184:8196  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8175:8182  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8169:8173  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8157:8197  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8218:8222  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8211:8222  return true */\n      swap2\n      pop\n      pop\n      jump(tag_265)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8057:8276  if (hasRole(role, account)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8260:8265  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8253:8265  return false */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7894:8282  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_265:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_272\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_273\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_275\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_275:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_278\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_279\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2762  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2804  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_282\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n    tag_174:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4667:4673  __self */\n      immutable(\"0x8b63fa19f5fde7599f90b4f6c71a3f2786db2ae2f787bc2d57068a883a1892ab\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4658:4662  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4673  address(this) == __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n      dup1\n      tag_284\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4764:4770  __self */\n      immutable(\"0x8b63fa19f5fde7599f90b4f6c71a3f2786db2ae2f787bc2d57068a883a1892ab\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4758  ERC1967Utils.getImplementation */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4760  ERC1967Utils.getImplementation() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4728:4770  ERC1967Utils.getImplementation() != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4650:4770  address(this) == __self || // Must be called through delegatecall... */\n    tag_284:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n      iszero\n      tag_287\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4844:4873  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4633:4884  if (... */\n    tag_287:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4578:4890  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1260:1365  function _authorizeUpgrade(address newAddress)... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_289\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_289:\n        /* \".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":1260:1365  function _authorizeUpgrade(address newAddress)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6149:6166  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6181  IERC1822Proxiable(newImplementation).proxiableUUID */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6131:6183  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_292\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_293\n      swap2\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      0x01\n    tag_292:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_295\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6535:6552  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6493:6553  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_299\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_299:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6127:6564  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_295:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6233:6265  ERC1967Utils.IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6229  slot */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6225:6265  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6321:6325  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6292:6326  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      0xaa1d49a400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6221:6341  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_303\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6384:6401  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6403:6407  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6383  ERC1967Utils.upgradeToAndCall */\n      tag_304\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6354:6408  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n    tag_303:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6184:6419  returns (bytes32 slot) {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6032:6570  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n    tag_182:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5096  __self */\n      immutable(\"0x8b63fa19f5fde7599f90b4f6c71a3f2786db2ae2f787bc2d57068a883a1892ab\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5081:5085  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5073:5096  address(this) != __self */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n      tag_306\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5174:5203  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      0xe07c8dba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5069:5214  if (address(this) != __self) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5007:5220  function _checkNotDelegated() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_308\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_310\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_311\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_310:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_203:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_313\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_313:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_316\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_317\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_319\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_319:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2970:3037  function __UUPSUpgradeable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_322\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_322:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_324\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_325\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_327\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_327:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      tag_329\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1991  __ReentrancyGuard_init_unchained */\n      tag_330\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1959:1993  __ReentrancyGuard_init_unchained() */\n      jump\t// in\n    tag_329:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1889:2000  function __ReentrancyGuard_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_332\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_335:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2555  _msgSender */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      mload(0x40)\n      tag_339\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_342\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4547:4554  account */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4556:4560  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap3\n      swap2\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_279:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      tag_347\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2281  paused */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2275:2283  paused() */\n      jump\t// in\n    tag_347:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_348\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap1\n      tag_350\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_348:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1493:1500  address */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_352\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1546:1565  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1545  StorageSlot.getAddressSlot */\n      tag_353\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1566  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_352:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1519:1572  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1512:1572  return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1441:1579  function getImplementation() internal view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_304:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      tag_355\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2374:2391  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2373  _setImplementation */\n      tag_356\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2355:2392  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_355:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2425:2442  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2407:2443  IERC1967.Upgraded(newImplementation) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2472:2473  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2462  data */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2469  data.length */\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2458:2473  data.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      tag_358\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2518:2535  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2537:2541  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2517  Address.functionDelegateCall */\n      tag_359\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2489:2542  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n    tag_358:\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n      jump(tag_360)\n    tag_357:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      tag_361\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2589  _checkNonPayable */\n      tag_362\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2573:2591  _checkNonPayable() */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2454:2602  if (data.length > 0) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2264:2608  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_311:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_314:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_366\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_367\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_367:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_317:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_369\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_373\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_325:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_375\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_375:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1267  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n    tag_330:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_314\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":1808:1809  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2093  _status */\n      0x32\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2086:2108  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":2006:2115  function __ReentrancyGuard_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      tag_381\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2107  paused */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2101:2109  paused() */\n      jump\t// in\n    tag_381:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_382\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_383\n      swap1\n      tag_384\n      jump\t// in\n    tag_383:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_382:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n    tag_353:\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1960:1981  AddressSlot storage r */\n      0x00\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2042:2046  slot */\n      dup2\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":2032:2046  r.slot := slot */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1899:2062  function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n    tag_356:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1781:1782  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1765  newImplementation */\n      dup2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1777  newImplementation.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1748:1782  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1834:1851  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1805:1852  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      0x4c9c8ce300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_388\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_388:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1744:1863  if (newImplementation.code.length == 0) {... */\n    tag_387:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1928:1945  newImplementation */\n      dup1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      tag_389\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":811:877  0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc */\n      0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1899:1918  IMPLEMENTATION_SLOT */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1898  StorageSlot.getAddressSlot */\n      tag_353\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1919  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1925  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1872:1945  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1671:1952  function _setImplementation(address newImplementation) private {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3999:4011  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4024:4036  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4038:4061  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4071  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4084  target.delegatecall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4085:4089  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4065:4090  target.delegatecall(data) */\n      mload(0x40)\n      tag_391\n      swap2\n      swap1\n      tag_392\n      jump\t// in\n    tag_391:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_395\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_394)\n    tag_395:\n      0x60\n      swap2\n      pop\n    tag_394:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4023:4090  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      tag_396\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4134:4140  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4142:4149  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4151:4161  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4133  verifyCallResultFromTarget */\n      tag_397\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4107:4162  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4100:4162  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3916:4169  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6175:6176  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6172  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6163:6176  msg.value > 0 */\n      gt\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6199:6218  ERC1967NonPayable() */\n      mload(0x40)\n      0xb398979f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6159:6229  if (msg.value > 0) {... */\n    tag_399:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6113:6235  function _checkNonPayable() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_366:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_401\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_401:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_397:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4581:4593  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4610:4617  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      tag_404\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4641:4651  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4640  _revert */\n      tag_405\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4633:4652  _revert(returndata) */\n      jump\t// in\n    tag_404:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n      jump(tag_406)\n    tag_403:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4878:4879  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4867  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4874  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4879  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_407\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4905:4906  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4889  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4901  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4883:4906  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4857:4906  returndata.length == 0 && target.code.length == 0 */\n    tag_407:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_408\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4950:4956  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4933:4957  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_409\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4853:4972  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_408:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4992:5002  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4985:5002  return returndata */\n      swap1\n      pop\n      jump(tag_402)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4605:5013  if (!success) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4437:5019  function verifyCallResultFromTarget(... */\n    tag_402:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5559:6046  function _revert(bytes memory returndata) private pure {... */\n    tag_405:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5710:5711  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5700  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5707  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5690:5711  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n      iszero\n      tag_411\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5887:5897  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5881:5898  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5943:5958  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5930:5940  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5926:5928  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5922:5941  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5915:5959  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5686:6040  if (returndata.length > 0) {... */\n    tag_411:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6010:6029  Errors.FailedCall() */\n      mload(0x40)\n      0xd6bda27500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:82   */\n    tag_413:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_414:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_415:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_416:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_417:\n        /* \"#utility.yul\":561:584   */\n      tag_479\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_416\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_480\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_480:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_418:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_482\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_417\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_31:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_485\n      tag_414\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":833:952   */\n    tag_484:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_486\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_418\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_419:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_420:\n        /* \"#utility.yul\":1268:1289   */\n      tag_489\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_419\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_34:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_491\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_420\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_421:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_422:\n        /* \"#utility.yul\":1674:1698   */\n      tag_494\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_421\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_495\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      dup1\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_495:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_423:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_497\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_422\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_38:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_500\n      tag_414\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":1950:2069   */\n    tag_499:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_501\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_423\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_424:\n        /* \"#utility.yul\":2296:2320   */\n      tag_503\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_421\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_41:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_505\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_424\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2687   */\n    tag_425:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2638:2680   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2631:2636   */\n      dup3\n        /* \"#utility.yul\":2627:2681   */\n      and\n        /* \"#utility.yul\":2616:2681   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2789   */\n    tag_426:\n        /* \"#utility.yul\":2730:2737   */\n      0x00\n        /* \"#utility.yul\":2759:2783   */\n      tag_508\n        /* \"#utility.yul\":2777:2782   */\n      dup3\n        /* \"#utility.yul\":2759:2783   */\n      tag_425\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":2748:2783   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2789   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2795:2917   */\n    tag_427:\n        /* \"#utility.yul\":2868:2892   */\n      tag_510\n        /* \"#utility.yul\":2886:2891   */\n      dup2\n        /* \"#utility.yul\":2868:2892   */\n      tag_426\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":2861:2866   */\n      dup2\n        /* \"#utility.yul\":2858:2893   */\n      eq\n        /* \"#utility.yul\":2848:2911   */\n      tag_511\n      jumpi\n        /* \"#utility.yul\":2907:2908   */\n      0x00\n        /* \"#utility.yul\":2904:2905   */\n      dup1\n        /* \"#utility.yul\":2897:2909   */\n      revert\n        /* \"#utility.yul\":2848:2911   */\n    tag_511:\n        /* \"#utility.yul\":2795:2917   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2923:3062   */\n    tag_428:\n        /* \"#utility.yul\":2969:2974   */\n      0x00\n        /* \"#utility.yul\":3007:3013   */\n      dup2\n        /* \"#utility.yul\":2994:3014   */\n      calldataload\n        /* \"#utility.yul\":2985:3014   */\n      swap1\n      pop\n        /* \"#utility.yul\":3023:3056   */\n      tag_513\n        /* \"#utility.yul\":3050:3055   */\n      dup2\n        /* \"#utility.yul\":3023:3056   */\n      tag_427\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":2923:3062   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3068:3542   */\n    tag_45:\n        /* \"#utility.yul\":3136:3142   */\n      0x00\n        /* \"#utility.yul\":3144:3150   */\n      dup1\n        /* \"#utility.yul\":3193:3195   */\n      0x40\n        /* \"#utility.yul\":3181:3190   */\n      dup4\n        /* \"#utility.yul\":3172:3179   */\n      dup6\n        /* \"#utility.yul\":3168:3191   */\n      sub\n        /* \"#utility.yul\":3164:3196   */\n      slt\n        /* \"#utility.yul\":3161:3280   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":3199:3278   */\n      tag_516\n      tag_414\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":3161:3280   */\n    tag_515:\n        /* \"#utility.yul\":3319:3320   */\n      0x00\n        /* \"#utility.yul\":3344:3397   */\n      tag_517\n        /* \"#utility.yul\":3389:3396   */\n      dup6\n        /* \"#utility.yul\":3380:3386   */\n      dup3\n        /* \"#utility.yul\":3369:3378   */\n      dup7\n        /* \"#utility.yul\":3365:3387   */\n      add\n        /* \"#utility.yul\":3344:3397   */\n      tag_423\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":3334:3397   */\n      swap3\n      pop\n        /* \"#utility.yul\":3290:3407   */\n      pop\n        /* \"#utility.yul\":3446:3448   */\n      0x20\n        /* \"#utility.yul\":3472:3525   */\n      tag_518\n        /* \"#utility.yul\":3517:3524   */\n      dup6\n        /* \"#utility.yul\":3508:3514   */\n      dup3\n        /* \"#utility.yul\":3497:3506   */\n      dup7\n        /* \"#utility.yul\":3493:3515   */\n      add\n        /* \"#utility.yul\":3472:3525   */\n      tag_428\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":3462:3525   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3535   */\n      pop\n        /* \"#utility.yul\":3068:3542   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3548:3877   */\n    tag_57:\n        /* \"#utility.yul\":3607:3613   */\n      0x00\n        /* \"#utility.yul\":3656:3658   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3635:3642   */\n      dup5\n        /* \"#utility.yul\":3631:3654   */\n      sub\n        /* \"#utility.yul\":3627:3659   */\n      slt\n        /* \"#utility.yul\":3624:3743   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":3662:3741   */\n      tag_521\n      tag_414\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":3624:3743   */\n    tag_520:\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3807:3860   */\n      tag_522\n        /* \"#utility.yul\":3852:3859   */\n      dup5\n        /* \"#utility.yul\":3843:3849   */\n      dup3\n        /* \"#utility.yul\":3832:3841   */\n      dup6\n        /* \"#utility.yul\":3828:3850   */\n      add\n        /* \"#utility.yul\":3807:3860   */\n      tag_428\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":3797:3860   */\n      swap2\n      pop\n        /* \"#utility.yul\":3753:3870   */\n      pop\n        /* \"#utility.yul\":3548:3877   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3883:4000   */\n    tag_429:\n        /* \"#utility.yul\":3992:3993   */\n      0x00\n        /* \"#utility.yul\":3989:3990   */\n      dup1\n        /* \"#utility.yul\":3982:3994   */\n      revert\n        /* \"#utility.yul\":4006:4123   */\n    tag_430:\n        /* \"#utility.yul\":4115:4116   */\n      0x00\n        /* \"#utility.yul\":4112:4113   */\n      dup1\n        /* \"#utility.yul\":4105:4117   */\n      revert\n        /* \"#utility.yul\":4129:4231   */\n    tag_431:\n        /* \"#utility.yul\":4170:4176   */\n      0x00\n        /* \"#utility.yul\":4221:4223   */\n      0x1f\n        /* \"#utility.yul\":4217:4224   */\n      not\n        /* \"#utility.yul\":4212:4214   */\n      0x1f\n        /* \"#utility.yul\":4205:4210   */\n      dup4\n        /* \"#utility.yul\":4201:4215   */\n      add\n        /* \"#utility.yul\":4197:4225   */\n      and\n        /* \"#utility.yul\":4187:4225   */\n      swap1\n      pop\n        /* \"#utility.yul\":4129:4231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4237:4417   */\n    tag_432:\n        /* \"#utility.yul\":4285:4362   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4282:4283   */\n      0x00\n        /* \"#utility.yul\":4275:4363   */\n      mstore\n        /* \"#utility.yul\":4382:4386   */\n      0x41\n        /* \"#utility.yul\":4379:4380   */\n      0x04\n        /* \"#utility.yul\":4372:4387   */\n      mstore\n        /* \"#utility.yul\":4406:4410   */\n      0x24\n        /* \"#utility.yul\":4403:4404   */\n      0x00\n        /* \"#utility.yul\":4396:4411   */\n      revert\n        /* \"#utility.yul\":4423:4704   */\n    tag_433:\n        /* \"#utility.yul\":4506:4533   */\n      tag_528\n        /* \"#utility.yul\":4528:4532   */\n      dup3\n        /* \"#utility.yul\":4506:4533   */\n      tag_431\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":4498:4504   */\n      dup2\n        /* \"#utility.yul\":4494:4534   */\n      add\n        /* \"#utility.yul\":4636:4642   */\n      dup2\n        /* \"#utility.yul\":4624:4634   */\n      dup2\n        /* \"#utility.yul\":4621:4643   */\n      lt\n        /* \"#utility.yul\":4600:4618   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4588:4598   */\n      dup3\n        /* \"#utility.yul\":4585:4619   */\n      gt\n        /* \"#utility.yul\":4582:4644   */\n      or\n        /* \"#utility.yul\":4579:4667   */\n      iszero\n      tag_529\n      jumpi\n        /* \"#utility.yul\":4647:4665   */\n      tag_530\n      tag_432\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":4579:4667   */\n    tag_529:\n        /* \"#utility.yul\":4687:4697   */\n      dup1\n        /* \"#utility.yul\":4683:4685   */\n      0x40\n        /* \"#utility.yul\":4676:4698   */\n      mstore\n        /* \"#utility.yul\":4466:4704   */\n      pop\n        /* \"#utility.yul\":4423:4704   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4710:4839   */\n    tag_434:\n        /* \"#utility.yul\":4744:4750   */\n      0x00\n        /* \"#utility.yul\":4771:4791   */\n      tag_532\n      tag_413\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":4761:4791   */\n      swap1\n      pop\n        /* \"#utility.yul\":4800:4833   */\n      tag_533\n        /* \"#utility.yul\":4828:4832   */\n      dup3\n        /* \"#utility.yul\":4820:4826   */\n      dup3\n        /* \"#utility.yul\":4800:4833   */\n      tag_433\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":4710:4839   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4845:5152   */\n    tag_435:\n        /* \"#utility.yul\":4906:4910   */\n      0x00\n        /* \"#utility.yul\":4996:5014   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4988:4994   */\n      dup3\n        /* \"#utility.yul\":4985:5015   */\n      gt\n        /* \"#utility.yul\":4982:5038   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":5018:5036   */\n      tag_536\n      tag_432\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":4982:5038   */\n    tag_535:\n        /* \"#utility.yul\":5056:5085   */\n      tag_537\n        /* \"#utility.yul\":5078:5084   */\n      dup3\n        /* \"#utility.yul\":5056:5085   */\n      tag_431\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":5048:5085   */\n      swap1\n      pop\n        /* \"#utility.yul\":5140:5144   */\n      0x20\n        /* \"#utility.yul\":5134:5138   */\n      dup2\n        /* \"#utility.yul\":5130:5145   */\n      add\n        /* \"#utility.yul\":5122:5145   */\n      swap1\n      pop\n        /* \"#utility.yul\":4845:5152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5158:5306   */\n    tag_436:\n        /* \"#utility.yul\":5256:5262   */\n      dup3\n        /* \"#utility.yul\":5251:5254   */\n      dup2\n        /* \"#utility.yul\":5246:5249   */\n      dup4\n        /* \"#utility.yul\":5233:5263   */\n      calldatacopy\n        /* \"#utility.yul\":5297:5298   */\n      0x00\n        /* \"#utility.yul\":5288:5294   */\n      dup4\n        /* \"#utility.yul\":5283:5286   */\n      dup4\n        /* \"#utility.yul\":5279:5295   */\n      add\n        /* \"#utility.yul\":5272:5299   */\n      mstore\n        /* \"#utility.yul\":5158:5306   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5312:5735   */\n    tag_437:\n        /* \"#utility.yul\":5389:5394   */\n      0x00\n        /* \"#utility.yul\":5414:5479   */\n      tag_540\n        /* \"#utility.yul\":5430:5478   */\n      tag_541\n        /* \"#utility.yul\":5471:5477   */\n      dup5\n        /* \"#utility.yul\":5430:5478   */\n      tag_435\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":5414:5479   */\n      tag_434\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":5405:5479   */\n      swap1\n      pop\n        /* \"#utility.yul\":5502:5508   */\n      dup3\n        /* \"#utility.yul\":5495:5500   */\n      dup2\n        /* \"#utility.yul\":5488:5509   */\n      mstore\n        /* \"#utility.yul\":5540:5544   */\n      0x20\n        /* \"#utility.yul\":5533:5538   */\n      dup2\n        /* \"#utility.yul\":5529:5545   */\n      add\n        /* \"#utility.yul\":5578:5581   */\n      dup5\n        /* \"#utility.yul\":5569:5575   */\n      dup5\n        /* \"#utility.yul\":5564:5567   */\n      dup5\n        /* \"#utility.yul\":5560:5576   */\n      add\n        /* \"#utility.yul\":5557:5582   */\n      gt\n        /* \"#utility.yul\":5554:5666   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":5585:5664   */\n      tag_543\n      tag_430\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":5554:5666   */\n    tag_542:\n        /* \"#utility.yul\":5675:5729   */\n      tag_544\n        /* \"#utility.yul\":5722:5728   */\n      dup5\n        /* \"#utility.yul\":5717:5720   */\n      dup3\n        /* \"#utility.yul\":5712:5715   */\n      dup6\n        /* \"#utility.yul\":5675:5729   */\n      tag_436\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":5395:5735   */\n      pop\n        /* \"#utility.yul\":5312:5735   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5754:6092   */\n    tag_438:\n        /* \"#utility.yul\":5809:5814   */\n      0x00\n        /* \"#utility.yul\":5858:5861   */\n      dup3\n        /* \"#utility.yul\":5851:5855   */\n      0x1f\n        /* \"#utility.yul\":5843:5849   */\n      dup4\n        /* \"#utility.yul\":5839:5856   */\n      add\n        /* \"#utility.yul\":5835:5862   */\n      slt\n        /* \"#utility.yul\":5825:5947   */\n      tag_546\n      jumpi\n        /* \"#utility.yul\":5866:5945   */\n      tag_547\n      tag_429\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":5825:5947   */\n    tag_546:\n        /* \"#utility.yul\":5983:5989   */\n      dup2\n        /* \"#utility.yul\":5970:5990   */\n      calldataload\n        /* \"#utility.yul\":6008:6086   */\n      tag_548\n        /* \"#utility.yul\":6082:6085   */\n      dup5\n        /* \"#utility.yul\":6074:6080   */\n      dup3\n        /* \"#utility.yul\":6067:6071   */\n      0x20\n        /* \"#utility.yul\":6059:6065   */\n      dup7\n        /* \"#utility.yul\":6055:6072   */\n      add\n        /* \"#utility.yul\":6008:6086   */\n      tag_437\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":5999:6086   */\n      swap2\n      pop\n        /* \"#utility.yul\":5815:6092   */\n      pop\n        /* \"#utility.yul\":5754:6092   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6098:6750   */\n    tag_65:\n        /* \"#utility.yul\":6175:6181   */\n      0x00\n        /* \"#utility.yul\":6183:6189   */\n      dup1\n        /* \"#utility.yul\":6232:6234   */\n      0x40\n        /* \"#utility.yul\":6220:6229   */\n      dup4\n        /* \"#utility.yul\":6211:6218   */\n      dup6\n        /* \"#utility.yul\":6207:6230   */\n      sub\n        /* \"#utility.yul\":6203:6235   */\n      slt\n        /* \"#utility.yul\":6200:6319   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":6238:6317   */\n      tag_551\n      tag_414\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":6200:6319   */\n    tag_550:\n        /* \"#utility.yul\":6358:6359   */\n      0x00\n        /* \"#utility.yul\":6383:6436   */\n      tag_552\n        /* \"#utility.yul\":6428:6435   */\n      dup6\n        /* \"#utility.yul\":6419:6425   */\n      dup3\n        /* \"#utility.yul\":6408:6417   */\n      dup7\n        /* \"#utility.yul\":6404:6426   */\n      add\n        /* \"#utility.yul\":6383:6436   */\n      tag_428\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":6373:6436   */\n      swap3\n      pop\n        /* \"#utility.yul\":6329:6446   */\n      pop\n        /* \"#utility.yul\":6513:6515   */\n      0x20\n        /* \"#utility.yul\":6502:6511   */\n      dup4\n        /* \"#utility.yul\":6498:6516   */\n      add\n        /* \"#utility.yul\":6485:6517   */\n      calldataload\n        /* \"#utility.yul\":6544:6562   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6536:6542   */\n      dup2\n        /* \"#utility.yul\":6533:6563   */\n      gt\n        /* \"#utility.yul\":6530:6647   */\n      iszero\n      tag_553\n      jumpi\n        /* \"#utility.yul\":6566:6645   */\n      tag_554\n      tag_415\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":6530:6647   */\n    tag_553:\n        /* \"#utility.yul\":6671:6733   */\n      tag_555\n        /* \"#utility.yul\":6725:6732   */\n      dup6\n        /* \"#utility.yul\":6716:6722   */\n      dup3\n        /* \"#utility.yul\":6705:6714   */\n      dup7\n        /* \"#utility.yul\":6701:6723   */\n      add\n        /* \"#utility.yul\":6671:6733   */\n      tag_438\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":6661:6733   */\n      swap2\n      pop\n        /* \"#utility.yul\":6456:6743   */\n      pop\n        /* \"#utility.yul\":6098:6750   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6756:6874   */\n    tag_439:\n        /* \"#utility.yul\":6843:6867   */\n      tag_557\n        /* \"#utility.yul\":6861:6866   */\n      dup2\n        /* \"#utility.yul\":6843:6867   */\n      tag_426\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":6838:6841   */\n      dup3\n        /* \"#utility.yul\":6831:6868   */\n      mstore\n        /* \"#utility.yul\":6756:6874   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6880:7102   */\n    tag_79:\n        /* \"#utility.yul\":6973:6977   */\n      0x00\n        /* \"#utility.yul\":7011:7013   */\n      0x20\n        /* \"#utility.yul\":7000:7009   */\n      dup3\n        /* \"#utility.yul\":6996:7014   */\n      add\n        /* \"#utility.yul\":6988:7014   */\n      swap1\n      pop\n        /* \"#utility.yul\":7024:7095   */\n      tag_559\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7081:7090   */\n      dup4\n        /* \"#utility.yul\":7077:7094   */\n      add\n        /* \"#utility.yul\":7068:7074   */\n      dup5\n        /* \"#utility.yul\":7024:7095   */\n      tag_439\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":6880:7102   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7108:7207   */\n    tag_440:\n        /* \"#utility.yul\":7160:7166   */\n      0x00\n        /* \"#utility.yul\":7194:7199   */\n      dup2\n        /* \"#utility.yul\":7188:7200   */\n      mload\n        /* \"#utility.yul\":7178:7200   */\n      swap1\n      pop\n        /* \"#utility.yul\":7108:7207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7213:7382   */\n    tag_441:\n        /* \"#utility.yul\":7297:7308   */\n      0x00\n        /* \"#utility.yul\":7331:7337   */\n      dup3\n        /* \"#utility.yul\":7326:7329   */\n      dup3\n        /* \"#utility.yul\":7319:7338   */\n      mstore\n        /* \"#utility.yul\":7371:7375   */\n      0x20\n        /* \"#utility.yul\":7366:7369   */\n      dup3\n        /* \"#utility.yul\":7362:7376   */\n      add\n        /* \"#utility.yul\":7347:7376   */\n      swap1\n      pop\n        /* \"#utility.yul\":7213:7382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7388:7527   */\n    tag_442:\n        /* \"#utility.yul\":7477:7483   */\n      dup3\n        /* \"#utility.yul\":7472:7475   */\n      dup2\n        /* \"#utility.yul\":7467:7470   */\n      dup4\n        /* \"#utility.yul\":7461:7484   */\n      mcopy\n        /* \"#utility.yul\":7518:7519   */\n      0x00\n        /* \"#utility.yul\":7509:7515   */\n      dup4\n        /* \"#utility.yul\":7504:7507   */\n      dup4\n        /* \"#utility.yul\":7500:7516   */\n      add\n        /* \"#utility.yul\":7493:7520   */\n      mstore\n        /* \"#utility.yul\":7388:7527   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7533:7910   */\n    tag_443:\n        /* \"#utility.yul\":7621:7624   */\n      0x00\n        /* \"#utility.yul\":7649:7688   */\n      tag_564\n        /* \"#utility.yul\":7682:7687   */\n      dup3\n        /* \"#utility.yul\":7649:7688   */\n      tag_440\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":7704:7775   */\n      tag_565\n        /* \"#utility.yul\":7768:7774   */\n      dup2\n        /* \"#utility.yul\":7763:7766   */\n      dup6\n        /* \"#utility.yul\":7704:7775   */\n      tag_441\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":7697:7775   */\n      swap4\n      pop\n        /* \"#utility.yul\":7784:7849   */\n      tag_566\n        /* \"#utility.yul\":7842:7848   */\n      dup2\n        /* \"#utility.yul\":7837:7840   */\n      dup6\n        /* \"#utility.yul\":7830:7834   */\n      0x20\n        /* \"#utility.yul\":7823:7828   */\n      dup7\n        /* \"#utility.yul\":7819:7835   */\n      add\n        /* \"#utility.yul\":7784:7849   */\n      tag_442\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":7874:7903   */\n      tag_567\n        /* \"#utility.yul\":7896:7902   */\n      dup2\n        /* \"#utility.yul\":7874:7903   */\n      tag_431\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":7869:7872   */\n      dup5\n        /* \"#utility.yul\":7865:7904   */\n      add\n        /* \"#utility.yul\":7858:7904   */\n      swap2\n      pop\n        /* \"#utility.yul\":7625:7910   */\n      pop\n        /* \"#utility.yul\":7533:7910   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7916:8229   */\n    tag_114:\n        /* \"#utility.yul\":8029:8033   */\n      0x00\n        /* \"#utility.yul\":8067:8069   */\n      0x20\n        /* \"#utility.yul\":8056:8065   */\n      dup3\n        /* \"#utility.yul\":8052:8070   */\n      add\n        /* \"#utility.yul\":8044:8070   */\n      swap1\n      pop\n        /* \"#utility.yul\":8116:8125   */\n      dup2\n        /* \"#utility.yul\":8110:8114   */\n      dup2\n        /* \"#utility.yul\":8106:8126   */\n      sub\n        /* \"#utility.yul\":8102:8103   */\n      0x00\n        /* \"#utility.yul\":8091:8100   */\n      dup4\n        /* \"#utility.yul\":8087:8104   */\n      add\n        /* \"#utility.yul\":8080:8127   */\n      mstore\n        /* \"#utility.yul\":8144:8222   */\n      tag_569\n        /* \"#utility.yul\":8217:8221   */\n      dup2\n        /* \"#utility.yul\":8208:8214   */\n      dup5\n        /* \"#utility.yul\":8144:8222   */\n      tag_443\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":8136:8222   */\n      swap1\n      pop\n        /* \"#utility.yul\":7916:8229   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8235:8352   */\n    tag_444:\n        /* \"#utility.yul\":8344:8345   */\n      0x00\n        /* \"#utility.yul\":8341:8342   */\n      dup1\n        /* \"#utility.yul\":8334:8346   */\n      revert\n        /* \"#utility.yul\":8358:8475   */\n    tag_445:\n        /* \"#utility.yul\":8467:8468   */\n      0x00\n        /* \"#utility.yul\":8464:8465   */\n      dup1\n        /* \"#utility.yul\":8457:8469   */\n      revert\n        /* \"#utility.yul\":8498:9066   */\n    tag_446:\n        /* \"#utility.yul\":8571:8579   */\n      0x00\n        /* \"#utility.yul\":8581:8587   */\n      dup1\n        /* \"#utility.yul\":8631:8634   */\n      dup4\n        /* \"#utility.yul\":8624:8628   */\n      0x1f\n        /* \"#utility.yul\":8616:8622   */\n      dup5\n        /* \"#utility.yul\":8612:8629   */\n      add\n        /* \"#utility.yul\":8608:8635   */\n      slt\n        /* \"#utility.yul\":8598:8720   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":8639:8718   */\n      tag_574\n      tag_429\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":8598:8720   */\n    tag_573:\n        /* \"#utility.yul\":8752:8758   */\n      dup3\n        /* \"#utility.yul\":8739:8759   */\n      calldataload\n        /* \"#utility.yul\":8729:8759   */\n      swap1\n      pop\n        /* \"#utility.yul\":8782:8800   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8774:8780   */\n      dup2\n        /* \"#utility.yul\":8771:8801   */\n      gt\n        /* \"#utility.yul\":8768:8885   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":8804:8883   */\n      tag_576\n      tag_444\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8768:8885   */\n    tag_575:\n        /* \"#utility.yul\":8918:8922   */\n      0x20\n        /* \"#utility.yul\":8910:8916   */\n      dup4\n        /* \"#utility.yul\":8906:8923   */\n      add\n        /* \"#utility.yul\":8894:8923   */\n      swap2\n      pop\n        /* \"#utility.yul\":8972:8975   */\n      dup4\n        /* \"#utility.yul\":8964:8968   */\n      0x20\n        /* \"#utility.yul\":8956:8962   */\n      dup3\n        /* \"#utility.yul\":8952:8969   */\n      mul\n        /* \"#utility.yul\":8942:8950   */\n      dup4\n        /* \"#utility.yul\":8938:8970   */\n      add\n        /* \"#utility.yul\":8935:8976   */\n      gt\n        /* \"#utility.yul\":8932:9060   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":8979:9058   */\n      tag_578\n      tag_445\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":8932:9060   */\n    tag_577:\n        /* \"#utility.yul\":8498:9066   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9088:9655   */\n    tag_447:\n        /* \"#utility.yul\":9160:9168   */\n      0x00\n        /* \"#utility.yul\":9170:9176   */\n      dup1\n        /* \"#utility.yul\":9220:9223   */\n      dup4\n        /* \"#utility.yul\":9213:9217   */\n      0x1f\n        /* \"#utility.yul\":9205:9211   */\n      dup5\n        /* \"#utility.yul\":9201:9218   */\n      add\n        /* \"#utility.yul\":9197:9224   */\n      slt\n        /* \"#utility.yul\":9187:9309   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":9228:9307   */\n      tag_581\n      tag_429\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":9187:9309   */\n    tag_580:\n        /* \"#utility.yul\":9341:9347   */\n      dup3\n        /* \"#utility.yul\":9328:9348   */\n      calldataload\n        /* \"#utility.yul\":9318:9348   */\n      swap1\n      pop\n        /* \"#utility.yul\":9371:9389   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9363:9369   */\n      dup2\n        /* \"#utility.yul\":9360:9390   */\n      gt\n        /* \"#utility.yul\":9357:9474   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":9393:9472   */\n      tag_583\n      tag_444\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":9357:9474   */\n    tag_582:\n        /* \"#utility.yul\":9507:9511   */\n      0x20\n        /* \"#utility.yul\":9499:9505   */\n      dup4\n        /* \"#utility.yul\":9495:9512   */\n      add\n        /* \"#utility.yul\":9483:9512   */\n      swap2\n      pop\n        /* \"#utility.yul\":9561:9564   */\n      dup4\n        /* \"#utility.yul\":9553:9557   */\n      0x20\n        /* \"#utility.yul\":9545:9551   */\n      dup3\n        /* \"#utility.yul\":9541:9558   */\n      mul\n        /* \"#utility.yul\":9531:9539   */\n      dup4\n        /* \"#utility.yul\":9527:9559   */\n      add\n        /* \"#utility.yul\":9524:9565   */\n      gt\n        /* \"#utility.yul\":9521:9649   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":9568:9647   */\n      tag_585\n      tag_445\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9521:9649   */\n    tag_584:\n        /* \"#utility.yul\":9088:9655   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9661:10593   */\n    tag_121:\n        /* \"#utility.yul\":9782:9788   */\n      0x00\n        /* \"#utility.yul\":9790:9796   */\n      dup1\n        /* \"#utility.yul\":9798:9804   */\n      0x00\n        /* \"#utility.yul\":9806:9812   */\n      dup1\n        /* \"#utility.yul\":9855:9857   */\n      0x40\n        /* \"#utility.yul\":9843:9852   */\n      dup6\n        /* \"#utility.yul\":9834:9841   */\n      dup8\n        /* \"#utility.yul\":9830:9853   */\n      sub\n        /* \"#utility.yul\":9826:9858   */\n      slt\n        /* \"#utility.yul\":9823:9942   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":9861:9940   */\n      tag_588\n      tag_414\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":9823:9942   */\n    tag_587:\n        /* \"#utility.yul\":10009:10010   */\n      0x00\n        /* \"#utility.yul\":9998:10007   */\n      dup6\n        /* \"#utility.yul\":9994:10011   */\n      add\n        /* \"#utility.yul\":9981:10012   */\n      calldataload\n        /* \"#utility.yul\":10039:10057   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10031:10037   */\n      dup2\n        /* \"#utility.yul\":10028:10058   */\n      gt\n        /* \"#utility.yul\":10025:10142   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":10061:10140   */\n      tag_590\n      tag_415\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":10025:10142   */\n    tag_589:\n        /* \"#utility.yul\":10174:10254   */\n      tag_591\n        /* \"#utility.yul\":10246:10253   */\n      dup8\n        /* \"#utility.yul\":10237:10243   */\n      dup3\n        /* \"#utility.yul\":10226:10235   */\n      dup9\n        /* \"#utility.yul\":10222:10244   */\n      add\n        /* \"#utility.yul\":10174:10254   */\n      tag_446\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":10156:10254   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":9952:10264   */\n      pop\n        /* \"#utility.yul\":10331:10333   */\n      0x20\n        /* \"#utility.yul\":10320:10329   */\n      dup6\n        /* \"#utility.yul\":10316:10334   */\n      add\n        /* \"#utility.yul\":10303:10335   */\n      calldataload\n        /* \"#utility.yul\":10362:10380   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10354:10360   */\n      dup2\n        /* \"#utility.yul\":10351:10381   */\n      gt\n        /* \"#utility.yul\":10348:10465   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":10384:10463   */\n      tag_593\n      tag_415\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":10348:10465   */\n    tag_592:\n        /* \"#utility.yul\":10497:10576   */\n      tag_594\n        /* \"#utility.yul\":10568:10575   */\n      dup8\n        /* \"#utility.yul\":10559:10565   */\n      dup3\n        /* \"#utility.yul\":10548:10557   */\n      dup9\n        /* \"#utility.yul\":10544:10566   */\n      add\n        /* \"#utility.yul\":10497:10576   */\n      tag_447\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":10479:10576   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":10274:10586   */\n      pop\n        /* \"#utility.yul\":9661:10593   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10599:10764   */\n    tag_448:\n        /* \"#utility.yul\":10739:10756   */\n      0x496e76616c696420616464726573730000000000000000000000000000000000\n        /* \"#utility.yul\":10735:10736   */\n      0x00\n        /* \"#utility.yul\":10727:10733   */\n      dup3\n        /* \"#utility.yul\":10723:10737   */\n      add\n        /* \"#utility.yul\":10716:10757   */\n      mstore\n        /* \"#utility.yul\":10599:10764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10770:11136   */\n    tag_449:\n        /* \"#utility.yul\":10912:10915   */\n      0x00\n        /* \"#utility.yul\":10933:11000   */\n      tag_597\n        /* \"#utility.yul\":10997:10999   */\n      0x0f\n        /* \"#utility.yul\":10992:10995   */\n      dup4\n        /* \"#utility.yul\":10933:11000   */\n      tag_441\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":10926:11000   */\n      swap2\n      pop\n        /* \"#utility.yul\":11009:11102   */\n      tag_598\n        /* \"#utility.yul\":11098:11101   */\n      dup3\n        /* \"#utility.yul\":11009:11102   */\n      tag_448\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":11127:11129   */\n      0x20\n        /* \"#utility.yul\":11122:11125   */\n      dup3\n        /* \"#utility.yul\":11118:11130   */\n      add\n        /* \"#utility.yul\":11111:11130   */\n      swap1\n      pop\n        /* \"#utility.yul\":10770:11136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11142:11561   */\n    tag_159:\n        /* \"#utility.yul\":11308:11312   */\n      0x00\n        /* \"#utility.yul\":11346:11348   */\n      0x20\n        /* \"#utility.yul\":11335:11344   */\n      dup3\n        /* \"#utility.yul\":11331:11349   */\n      add\n        /* \"#utility.yul\":11323:11349   */\n      swap1\n      pop\n        /* \"#utility.yul\":11395:11404   */\n      dup2\n        /* \"#utility.yul\":11389:11393   */\n      dup2\n        /* \"#utility.yul\":11385:11405   */\n      sub\n        /* \"#utility.yul\":11381:11382   */\n      0x00\n        /* \"#utility.yul\":11370:11379   */\n      dup4\n        /* \"#utility.yul\":11366:11383   */\n      add\n        /* \"#utility.yul\":11359:11406   */\n      mstore\n        /* \"#utility.yul\":11423:11554   */\n      tag_600\n        /* \"#utility.yul\":11549:11553   */\n      dup2\n        /* \"#utility.yul\":11423:11554   */\n      tag_449\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":11415:11554   */\n      swap1\n      pop\n        /* \"#utility.yul\":11142:11561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11567:11683   */\n    tag_450:\n        /* \"#utility.yul\":11637:11658   */\n      tag_602\n        /* \"#utility.yul\":11652:11657   */\n      dup2\n        /* \"#utility.yul\":11637:11658   */\n      tag_419\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":11630:11635   */\n      dup2\n        /* \"#utility.yul\":11627:11659   */\n      eq\n        /* \"#utility.yul\":11617:11677   */\n      tag_603\n      jumpi\n        /* \"#utility.yul\":11673:11674   */\n      0x00\n        /* \"#utility.yul\":11670:11671   */\n      dup1\n        /* \"#utility.yul\":11663:11675   */\n      revert\n        /* \"#utility.yul\":11617:11677   */\n    tag_603:\n        /* \"#utility.yul\":11567:11683   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11689:11826   */\n    tag_451:\n        /* \"#utility.yul\":11743:11748   */\n      0x00\n        /* \"#utility.yul\":11774:11780   */\n      dup2\n        /* \"#utility.yul\":11768:11781   */\n      mload\n        /* \"#utility.yul\":11759:11781   */\n      swap1\n      pop\n        /* \"#utility.yul\":11790:11820   */\n      tag_605\n        /* \"#utility.yul\":11814:11819   */\n      dup2\n        /* \"#utility.yul\":11790:11820   */\n      tag_450\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":11689:11826   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11832:12177   */\n    tag_164:\n        /* \"#utility.yul\":11899:11905   */\n      0x00\n        /* \"#utility.yul\":11948:11950   */\n      0x20\n        /* \"#utility.yul\":11936:11945   */\n      dup3\n        /* \"#utility.yul\":11927:11934   */\n      dup5\n        /* \"#utility.yul\":11923:11946   */\n      sub\n        /* \"#utility.yul\":11919:11951   */\n      slt\n        /* \"#utility.yul\":11916:12035   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":11954:12033   */\n      tag_608\n      tag_414\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11916:12035   */\n    tag_607:\n        /* \"#utility.yul\":12074:12075   */\n      0x00\n        /* \"#utility.yul\":12099:12160   */\n      tag_609\n        /* \"#utility.yul\":12152:12159   */\n      dup5\n        /* \"#utility.yul\":12143:12149   */\n      dup3\n        /* \"#utility.yul\":12132:12141   */\n      dup6\n        /* \"#utility.yul\":12128:12150   */\n      add\n        /* \"#utility.yul\":12099:12160   */\n      tag_451\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":12089:12160   */\n      swap2\n      pop\n        /* \"#utility.yul\":12045:12170   */\n      pop\n        /* \"#utility.yul\":11832:12177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12183:12415   */\n    tag_452:\n        /* \"#utility.yul\":12323:12357   */\n      0x54657374616d656e746f206a61206578697374652e2055736520612066756e63\n        /* \"#utility.yul\":12319:12320   */\n      0x00\n        /* \"#utility.yul\":12311:12317   */\n      dup3\n        /* \"#utility.yul\":12307:12321   */\n      add\n        /* \"#utility.yul\":12300:12358   */\n      mstore\n        /* \"#utility.yul\":12392:12407   */\n      0x616f2064652065646963616f2e00000000000000000000000000000000000000\n        /* \"#utility.yul\":12387:12389   */\n      0x20\n        /* \"#utility.yul\":12379:12385   */\n      dup3\n        /* \"#utility.yul\":12375:12390   */\n      add\n        /* \"#utility.yul\":12368:12408   */\n      mstore\n        /* \"#utility.yul\":12183:12415   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12421:12787   */\n    tag_453:\n        /* \"#utility.yul\":12563:12566   */\n      0x00\n        /* \"#utility.yul\":12584:12651   */\n      tag_612\n        /* \"#utility.yul\":12648:12650   */\n      0x2d\n        /* \"#utility.yul\":12643:12646   */\n      dup4\n        /* \"#utility.yul\":12584:12651   */\n      tag_441\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":12577:12651   */\n      swap2\n      pop\n        /* \"#utility.yul\":12660:12753   */\n      tag_613\n        /* \"#utility.yul\":12749:12752   */\n      dup3\n        /* \"#utility.yul\":12660:12753   */\n      tag_452\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":12778:12780   */\n      0x40\n        /* \"#utility.yul\":12773:12776   */\n      dup3\n        /* \"#utility.yul\":12769:12781   */\n      add\n        /* \"#utility.yul\":12762:12781   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12787   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12793:13212   */\n    tag_167:\n        /* \"#utility.yul\":12959:12963   */\n      0x00\n        /* \"#utility.yul\":12997:12999   */\n      0x20\n        /* \"#utility.yul\":12986:12995   */\n      dup3\n        /* \"#utility.yul\":12982:13000   */\n      add\n        /* \"#utility.yul\":12974:13000   */\n      swap1\n      pop\n        /* \"#utility.yul\":13046:13055   */\n      dup2\n        /* \"#utility.yul\":13040:13044   */\n      dup2\n        /* \"#utility.yul\":13036:13056   */\n      sub\n        /* \"#utility.yul\":13032:13033   */\n      0x00\n        /* \"#utility.yul\":13021:13030   */\n      dup4\n        /* \"#utility.yul\":13017:13034   */\n      add\n        /* \"#utility.yul\":13010:13057   */\n      mstore\n        /* \"#utility.yul\":13074:13205   */\n      tag_615\n        /* \"#utility.yul\":13200:13204   */\n      dup2\n        /* \"#utility.yul\":13074:13205   */\n      tag_453\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":13066:13205   */\n      swap1\n      pop\n        /* \"#utility.yul\":12793:13212   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13218:13303   */\n    tag_454:\n        /* \"#utility.yul\":13263:13270   */\n      0x00\n        /* \"#utility.yul\":13292:13297   */\n      dup2\n        /* \"#utility.yul\":13281:13297   */\n      swap1\n      pop\n        /* \"#utility.yul\":13218:13303   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13309:13410   */\n    tag_455:\n        /* \"#utility.yul\":13345:13352   */\n      0x00\n        /* \"#utility.yul\":13385:13403   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13378:13383   */\n      dup3\n        /* \"#utility.yul\":13374:13404   */\n      and\n        /* \"#utility.yul\":13363:13404   */\n      swap1\n      pop\n        /* \"#utility.yul\":13309:13410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13416:13476   */\n    tag_456:\n        /* \"#utility.yul\":13444:13447   */\n      0x00\n        /* \"#utility.yul\":13465:13470   */\n      dup2\n        /* \"#utility.yul\":13458:13470   */\n      swap1\n      pop\n        /* \"#utility.yul\":13416:13476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13482:13638   */\n    tag_457:\n        /* \"#utility.yul\":13539:13548   */\n      0x00\n        /* \"#utility.yul\":13572:13632   */\n      tag_620\n        /* \"#utility.yul\":13589:13631   */\n      tag_621\n        /* \"#utility.yul\":13598:13630   */\n      tag_622\n        /* \"#utility.yul\":13624:13629   */\n      dup5\n        /* \"#utility.yul\":13598:13630   */\n      tag_454\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":13589:13631   */\n      tag_456\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13572:13632   */\n      tag_455\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":13559:13632   */\n      swap1\n      pop\n        /* \"#utility.yul\":13482:13638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13644:13789   */\n    tag_458:\n        /* \"#utility.yul\":13738:13782   */\n      tag_624\n        /* \"#utility.yul\":13776:13781   */\n      dup2\n        /* \"#utility.yul\":13738:13782   */\n      tag_457\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13733:13736   */\n      dup3\n        /* \"#utility.yul\":13726:13783   */\n      mstore\n        /* \"#utility.yul\":13644:13789   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13795:14031   */\n    tag_214:\n        /* \"#utility.yul\":13895:13899   */\n      0x00\n        /* \"#utility.yul\":13933:13935   */\n      0x20\n        /* \"#utility.yul\":13922:13931   */\n      dup3\n        /* \"#utility.yul\":13918:13936   */\n      add\n        /* \"#utility.yul\":13910:13936   */\n      swap1\n      pop\n        /* \"#utility.yul\":13946:14024   */\n      tag_626\n        /* \"#utility.yul\":14021:14022   */\n      0x00\n        /* \"#utility.yul\":14010:14019   */\n      dup4\n        /* \"#utility.yul\":14006:14023   */\n      add\n        /* \"#utility.yul\":13997:14003   */\n      dup5\n        /* \"#utility.yul\":13946:14024   */\n      tag_458\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":13795:14031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14037:14259   */\n    tag_459:\n        /* \"#utility.yul\":14177:14211   */\n      0x637265617465496e6865726974616e636528292c2076616c6f7220696e76616c\n        /* \"#utility.yul\":14173:14174   */\n      0x00\n        /* \"#utility.yul\":14165:14171   */\n      dup3\n        /* \"#utility.yul\":14161:14175   */\n      add\n        /* \"#utility.yul\":14154:14212   */\n      mstore\n        /* \"#utility.yul\":14246:14251   */\n      0x69646f0000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14241:14243   */\n      0x20\n        /* \"#utility.yul\":14233:14239   */\n      dup3\n        /* \"#utility.yul\":14229:14244   */\n      add\n        /* \"#utility.yul\":14222:14252   */\n      mstore\n        /* \"#utility.yul\":14037:14259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14265:14631   */\n    tag_460:\n        /* \"#utility.yul\":14407:14410   */\n      0x00\n        /* \"#utility.yul\":14428:14495   */\n      tag_629\n        /* \"#utility.yul\":14492:14494   */\n      0x23\n        /* \"#utility.yul\":14487:14490   */\n      dup4\n        /* \"#utility.yul\":14428:14495   */\n      tag_441\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":14421:14495   */\n      swap2\n      pop\n        /* \"#utility.yul\":14504:14597   */\n      tag_630\n        /* \"#utility.yul\":14593:14596   */\n      dup3\n        /* \"#utility.yul\":14504:14597   */\n      tag_459\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14622:14624   */\n      0x40\n        /* \"#utility.yul\":14617:14620   */\n      dup3\n        /* \"#utility.yul\":14613:14625   */\n      add\n        /* \"#utility.yul\":14606:14625   */\n      swap1\n      pop\n        /* \"#utility.yul\":14265:14631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14637:15056   */\n    tag_233:\n        /* \"#utility.yul\":14803:14807   */\n      0x00\n        /* \"#utility.yul\":14841:14843   */\n      0x20\n        /* \"#utility.yul\":14830:14839   */\n      dup3\n        /* \"#utility.yul\":14826:14844   */\n      add\n        /* \"#utility.yul\":14818:14844   */\n      swap1\n      pop\n        /* \"#utility.yul\":14890:14899   */\n      dup2\n        /* \"#utility.yul\":14884:14888   */\n      dup2\n        /* \"#utility.yul\":14880:14900   */\n      sub\n        /* \"#utility.yul\":14876:14877   */\n      0x00\n        /* \"#utility.yul\":14865:14874   */\n      dup4\n        /* \"#utility.yul\":14861:14878   */\n      add\n        /* \"#utility.yul\":14854:14901   */\n      mstore\n        /* \"#utility.yul\":14918:15049   */\n      tag_632\n        /* \"#utility.yul\":15044:15048   */\n      dup2\n        /* \"#utility.yul\":14918:15049   */\n      tag_460\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":14910:15049   */\n      swap1\n      pop\n        /* \"#utility.yul\":14637:15056   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15062:15291   */\n    tag_461:\n        /* \"#utility.yul\":15202:15236   */\n      0x637265617465496e6865726974616e636528292c2061646963696f6e65206f73\n        /* \"#utility.yul\":15198:15199   */\n      0x00\n        /* \"#utility.yul\":15190:15196   */\n      dup3\n        /* \"#utility.yul\":15186:15200   */\n      add\n        /* \"#utility.yul\":15179:15237   */\n      mstore\n        /* \"#utility.yul\":15271:15283   */\n      0x20686572646569726f7300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15266:15268   */\n      0x20\n        /* \"#utility.yul\":15258:15264   */\n      dup3\n        /* \"#utility.yul\":15254:15269   */\n      add\n        /* \"#utility.yul\":15247:15284   */\n      mstore\n        /* \"#utility.yul\":15062:15291   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15297:15663   */\n    tag_462:\n        /* \"#utility.yul\":15439:15442   */\n      0x00\n        /* \"#utility.yul\":15460:15527   */\n      tag_635\n        /* \"#utility.yul\":15524:15526   */\n      0x2a\n        /* \"#utility.yul\":15519:15522   */\n      dup4\n        /* \"#utility.yul\":15460:15527   */\n      tag_441\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":15453:15527   */\n      swap2\n      pop\n        /* \"#utility.yul\":15536:15629   */\n      tag_636\n        /* \"#utility.yul\":15625:15628   */\n      dup3\n        /* \"#utility.yul\":15536:15629   */\n      tag_461\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15654:15656   */\n      0x40\n        /* \"#utility.yul\":15649:15652   */\n      dup3\n        /* \"#utility.yul\":15645:15657   */\n      add\n        /* \"#utility.yul\":15638:15657   */\n      swap1\n      pop\n        /* \"#utility.yul\":15297:15663   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15669:16088   */\n    tag_236:\n        /* \"#utility.yul\":15835:15839   */\n      0x00\n        /* \"#utility.yul\":15873:15875   */\n      0x20\n        /* \"#utility.yul\":15862:15871   */\n      dup3\n        /* \"#utility.yul\":15858:15876   */\n      add\n        /* \"#utility.yul\":15850:15876   */\n      swap1\n      pop\n        /* \"#utility.yul\":15922:15931   */\n      dup2\n        /* \"#utility.yul\":15916:15920   */\n      dup2\n        /* \"#utility.yul\":15912:15932   */\n      sub\n        /* \"#utility.yul\":15908:15909   */\n      0x00\n        /* \"#utility.yul\":15897:15906   */\n      dup4\n        /* \"#utility.yul\":15893:15910   */\n      add\n        /* \"#utility.yul\":15886:15933   */\n      mstore\n        /* \"#utility.yul\":15950:16081   */\n      tag_638\n        /* \"#utility.yul\":16076:16080   */\n      dup2\n        /* \"#utility.yul\":15950:16081   */\n      tag_462\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":15942:16081   */\n      swap1\n      pop\n        /* \"#utility.yul\":15669:16088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16094:16388   */\n    tag_463:\n        /* \"#utility.yul\":16234:16268   */\n      0x637265617465496e6865726974616e636528292c207175616e74696461646520\n        /* \"#utility.yul\":16230:16231   */\n      0x00\n        /* \"#utility.yul\":16222:16228   */\n      dup3\n        /* \"#utility.yul\":16218:16232   */\n      add\n        /* \"#utility.yul\":16211:16269   */\n      mstore\n        /* \"#utility.yul\":16303:16337   */\n      0x646520656e64657265636f73206520706f7263656e746167656e732064696665\n        /* \"#utility.yul\":16298:16300   */\n      0x20\n        /* \"#utility.yul\":16290:16296   */\n      dup3\n        /* \"#utility.yul\":16286:16301   */\n      add\n        /* \"#utility.yul\":16279:16338   */\n      mstore\n        /* \"#utility.yul\":16372:16380   */\n      0x72656e7465730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16367:16369   */\n      0x40\n        /* \"#utility.yul\":16359:16365   */\n      dup3\n        /* \"#utility.yul\":16355:16370   */\n      add\n        /* \"#utility.yul\":16348:16381   */\n      mstore\n        /* \"#utility.yul\":16094:16388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16394:16760   */\n    tag_464:\n        /* \"#utility.yul\":16536:16539   */\n      0x00\n        /* \"#utility.yul\":16557:16624   */\n      tag_641\n        /* \"#utility.yul\":16621:16623   */\n      0x46\n        /* \"#utility.yul\":16616:16619   */\n      dup4\n        /* \"#utility.yul\":16557:16624   */\n      tag_441\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16550:16624   */\n      swap2\n      pop\n        /* \"#utility.yul\":16633:16726   */\n      tag_642\n        /* \"#utility.yul\":16722:16725   */\n      dup3\n        /* \"#utility.yul\":16633:16726   */\n      tag_463\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":16751:16753   */\n      0x60\n        /* \"#utility.yul\":16746:16749   */\n      dup3\n        /* \"#utility.yul\":16742:16754   */\n      add\n        /* \"#utility.yul\":16735:16754   */\n      swap1\n      pop\n        /* \"#utility.yul\":16394:16760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16766:17185   */\n    tag_239:\n        /* \"#utility.yul\":16932:16936   */\n      0x00\n        /* \"#utility.yul\":16970:16972   */\n      0x20\n        /* \"#utility.yul\":16959:16968   */\n      dup3\n        /* \"#utility.yul\":16955:16973   */\n      add\n        /* \"#utility.yul\":16947:16973   */\n      swap1\n      pop\n        /* \"#utility.yul\":17019:17028   */\n      dup2\n        /* \"#utility.yul\":17013:17017   */\n      dup2\n        /* \"#utility.yul\":17009:17029   */\n      sub\n        /* \"#utility.yul\":17005:17006   */\n      0x00\n        /* \"#utility.yul\":16994:17003   */\n      dup4\n        /* \"#utility.yul\":16990:17007   */\n      add\n        /* \"#utility.yul\":16983:17030   */\n      mstore\n        /* \"#utility.yul\":17047:17178   */\n      tag_644\n        /* \"#utility.yul\":17173:17177   */\n      dup2\n        /* \"#utility.yul\":17047:17178   */\n      tag_464\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":17039:17178   */\n      swap1\n      pop\n        /* \"#utility.yul\":16766:17185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17191:17334   */\n    tag_465:\n        /* \"#utility.yul\":17248:17253   */\n      0x00\n        /* \"#utility.yul\":17279:17285   */\n      dup2\n        /* \"#utility.yul\":17273:17286   */\n      mload\n        /* \"#utility.yul\":17264:17286   */\n      swap1\n      pop\n        /* \"#utility.yul\":17295:17328   */\n      tag_646\n        /* \"#utility.yul\":17322:17327   */\n      dup2\n        /* \"#utility.yul\":17295:17328   */\n      tag_422\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":17191:17334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17340:17691   */\n    tag_294:\n        /* \"#utility.yul\":17410:17416   */\n      0x00\n        /* \"#utility.yul\":17459:17461   */\n      0x20\n        /* \"#utility.yul\":17447:17456   */\n      dup3\n        /* \"#utility.yul\":17438:17445   */\n      dup5\n        /* \"#utility.yul\":17434:17457   */\n      sub\n        /* \"#utility.yul\":17430:17462   */\n      slt\n        /* \"#utility.yul\":17427:17546   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":17465:17544   */\n      tag_649\n      tag_414\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":17427:17546   */\n    tag_648:\n        /* \"#utility.yul\":17585:17586   */\n      0x00\n        /* \"#utility.yul\":17610:17674   */\n      tag_650\n        /* \"#utility.yul\":17666:17673   */\n      dup5\n        /* \"#utility.yul\":17657:17663   */\n      dup3\n        /* \"#utility.yul\":17646:17655   */\n      dup6\n        /* \"#utility.yul\":17642:17664   */\n      add\n        /* \"#utility.yul\":17610:17674   */\n      tag_465\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17600:17674   */\n      swap2\n      pop\n        /* \"#utility.yul\":17556:17684   */\n      pop\n        /* \"#utility.yul\":17340:17691   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17697:18029   */\n    tag_345:\n        /* \"#utility.yul\":17818:17822   */\n      0x00\n        /* \"#utility.yul\":17856:17858   */\n      0x40\n        /* \"#utility.yul\":17845:17854   */\n      dup3\n        /* \"#utility.yul\":17841:17859   */\n      add\n        /* \"#utility.yul\":17833:17859   */\n      swap1\n      pop\n        /* \"#utility.yul\":17869:17940   */\n      tag_652\n        /* \"#utility.yul\":17937:17938   */\n      0x00\n        /* \"#utility.yul\":17926:17935   */\n      dup4\n        /* \"#utility.yul\":17922:17939   */\n      add\n        /* \"#utility.yul\":17913:17919   */\n      dup6\n        /* \"#utility.yul\":17869:17940   */\n      tag_439\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":17950:18022   */\n      tag_653\n        /* \"#utility.yul\":18018:18020   */\n      0x20\n        /* \"#utility.yul\":18007:18016   */\n      dup4\n        /* \"#utility.yul\":18003:18021   */\n      add\n        /* \"#utility.yul\":17994:18000   */\n      dup5\n        /* \"#utility.yul\":17950:18022   */\n      tag_424\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":17697:18029   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18035:18205   */\n    tag_466:\n        /* \"#utility.yul\":18175:18197   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":18171:18172   */\n      0x00\n        /* \"#utility.yul\":18163:18169   */\n      dup3\n        /* \"#utility.yul\":18159:18173   */\n      add\n        /* \"#utility.yul\":18152:18198   */\n      mstore\n        /* \"#utility.yul\":18035:18205   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18211:18577   */\n    tag_467:\n        /* \"#utility.yul\":18353:18356   */\n      0x00\n        /* \"#utility.yul\":18374:18441   */\n      tag_656\n        /* \"#utility.yul\":18438:18440   */\n      0x14\n        /* \"#utility.yul\":18433:18436   */\n      dup4\n        /* \"#utility.yul\":18374:18441   */\n      tag_441\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":18367:18441   */\n      swap2\n      pop\n        /* \"#utility.yul\":18450:18543   */\n      tag_657\n        /* \"#utility.yul\":18539:18542   */\n      dup3\n        /* \"#utility.yul\":18450:18543   */\n      tag_466\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":18568:18570   */\n      0x20\n        /* \"#utility.yul\":18563:18566   */\n      dup3\n        /* \"#utility.yul\":18559:18571   */\n      add\n        /* \"#utility.yul\":18552:18571   */\n      swap1\n      pop\n        /* \"#utility.yul\":18211:18577   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18583:19002   */\n    tag_350:\n        /* \"#utility.yul\":18749:18753   */\n      0x00\n        /* \"#utility.yul\":18787:18789   */\n      0x20\n        /* \"#utility.yul\":18776:18785   */\n      dup3\n        /* \"#utility.yul\":18772:18790   */\n      add\n        /* \"#utility.yul\":18764:18790   */\n      swap1\n      pop\n        /* \"#utility.yul\":18836:18845   */\n      dup2\n        /* \"#utility.yul\":18830:18834   */\n      dup2\n        /* \"#utility.yul\":18826:18846   */\n      sub\n        /* \"#utility.yul\":18822:18823   */\n      0x00\n        /* \"#utility.yul\":18811:18820   */\n      dup4\n        /* \"#utility.yul\":18807:18824   */\n      add\n        /* \"#utility.yul\":18800:18847   */\n      mstore\n        /* \"#utility.yul\":18864:18995   */\n      tag_659\n        /* \"#utility.yul\":18990:18994   */\n      dup2\n        /* \"#utility.yul\":18864:18995   */\n      tag_467\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":18856:18995   */\n      swap1\n      pop\n        /* \"#utility.yul\":18583:19002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19008:19174   */\n    tag_468:\n        /* \"#utility.yul\":19148:19166   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":19144:19145   */\n      0x00\n        /* \"#utility.yul\":19136:19142   */\n      dup3\n        /* \"#utility.yul\":19132:19146   */\n      add\n        /* \"#utility.yul\":19125:19167   */\n      mstore\n        /* \"#utility.yul\":19008:19174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19180:19546   */\n    tag_469:\n        /* \"#utility.yul\":19322:19325   */\n      0x00\n        /* \"#utility.yul\":19343:19410   */\n      tag_662\n        /* \"#utility.yul\":19407:19409   */\n      0x10\n        /* \"#utility.yul\":19402:19405   */\n      dup4\n        /* \"#utility.yul\":19343:19410   */\n      tag_441\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":19336:19410   */\n      swap2\n      pop\n        /* \"#utility.yul\":19419:19512   */\n      tag_663\n        /* \"#utility.yul\":19508:19511   */\n      dup3\n        /* \"#utility.yul\":19419:19512   */\n      tag_468\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":19537:19539   */\n      0x20\n        /* \"#utility.yul\":19532:19535   */\n      dup3\n        /* \"#utility.yul\":19528:19540   */\n      add\n        /* \"#utility.yul\":19521:19540   */\n      swap1\n      pop\n        /* \"#utility.yul\":19180:19546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19552:19971   */\n    tag_384:\n        /* \"#utility.yul\":19718:19722   */\n      0x00\n        /* \"#utility.yul\":19756:19758   */\n      0x20\n        /* \"#utility.yul\":19745:19754   */\n      dup3\n        /* \"#utility.yul\":19741:19759   */\n      add\n        /* \"#utility.yul\":19733:19759   */\n      swap1\n      pop\n        /* \"#utility.yul\":19805:19814   */\n      dup2\n        /* \"#utility.yul\":19799:19803   */\n      dup2\n        /* \"#utility.yul\":19795:19815   */\n      sub\n        /* \"#utility.yul\":19791:19792   */\n      0x00\n        /* \"#utility.yul\":19780:19789   */\n      dup4\n        /* \"#utility.yul\":19776:19793   */\n      add\n        /* \"#utility.yul\":19769:19816   */\n      mstore\n        /* \"#utility.yul\":19833:19964   */\n      tag_665\n        /* \"#utility.yul\":19959:19963   */\n      dup2\n        /* \"#utility.yul\":19833:19964   */\n      tag_469\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":19825:19964   */\n      swap1\n      pop\n        /* \"#utility.yul\":19552:19971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19977:20075   */\n    tag_470:\n        /* \"#utility.yul\":20028:20034   */\n      0x00\n        /* \"#utility.yul\":20062:20067   */\n      dup2\n        /* \"#utility.yul\":20056:20068   */\n      mload\n        /* \"#utility.yul\":20046:20068   */\n      swap1\n      pop\n        /* \"#utility.yul\":19977:20075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20081:20228   */\n    tag_471:\n        /* \"#utility.yul\":20182:20193   */\n      0x00\n        /* \"#utility.yul\":20219:20222   */\n      dup2\n        /* \"#utility.yul\":20204:20222   */\n      swap1\n      pop\n        /* \"#utility.yul\":20081:20228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20234:20620   */\n    tag_472:\n        /* \"#utility.yul\":20338:20341   */\n      0x00\n        /* \"#utility.yul\":20366:20404   */\n      tag_669\n        /* \"#utility.yul\":20398:20403   */\n      dup3\n        /* \"#utility.yul\":20366:20404   */\n      tag_470\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":20420:20508   */\n      tag_670\n        /* \"#utility.yul\":20501:20507   */\n      dup2\n        /* \"#utility.yul\":20496:20499   */\n      dup6\n        /* \"#utility.yul\":20420:20508   */\n      tag_471\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":20413:20508   */\n      swap4\n      pop\n        /* \"#utility.yul\":20517:20582   */\n      tag_671\n        /* \"#utility.yul\":20575:20581   */\n      dup2\n        /* \"#utility.yul\":20570:20573   */\n      dup6\n        /* \"#utility.yul\":20563:20567   */\n      0x20\n        /* \"#utility.yul\":20556:20561   */\n      dup7\n        /* \"#utility.yul\":20552:20568   */\n      add\n        /* \"#utility.yul\":20517:20582   */\n      tag_442\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":20607:20613   */\n      dup1\n        /* \"#utility.yul\":20602:20605   */\n      dup5\n        /* \"#utility.yul\":20598:20614   */\n      add\n        /* \"#utility.yul\":20591:20614   */\n      swap2\n      pop\n        /* \"#utility.yul\":20342:20620   */\n      pop\n        /* \"#utility.yul\":20234:20620   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20626:20897   */\n    tag_392:\n        /* \"#utility.yul\":20756:20759   */\n      0x00\n        /* \"#utility.yul\":20778:20871   */\n      tag_673\n        /* \"#utility.yul\":20867:20870   */\n      dup3\n        /* \"#utility.yul\":20858:20864   */\n      dup5\n        /* \"#utility.yul\":20778:20871   */\n      tag_472\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":20771:20871   */\n      swap2\n      pop\n        /* \"#utility.yul\":20888:20891   */\n      dup2\n        /* \"#utility.yul\":20881:20891   */\n      swap1\n      pop\n        /* \"#utility.yul\":20626:20897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204f39dd9baae92735f3928ad7837848bfc497b4b82094f482fe23e64f31f09b1b64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523073ffffffffffffffffffffffffffffffffffffffff1660809073ffffffffffffffffffffffffffffffffffffffff168152503480156041575f80fd5b5060805161261a6100685f395f81816111bd0152818161121201526113cc015261261a5ff3fe60806040526004361061013f575f3560e01c8063710eef7a116100b557806391d148541161006e57806391d14854146103c9578063a217fddf14610405578063ad3cb1cc1461042f578063d547741f14610459578063e7a84bc314610481578063f2fde38b1461049d5761013f565b8063710eef7a1461030b578063715018a61461033357806375ba6f71146103495780638129fc1c146103735780638456cb59146103895780638da5cb5b1461039f5761013f565b80634bd39bdc116101075780634bd39bdc146102215780634d1ba077146102495780634f1ef2861461027157806352d1902d1461028d5780635c975abb146102b75780636af70684146102e15761013f565b806301ffc9a714610143578063248a9ca31461017f5780632f2ff15d146101bb57806336568abe146101e35780633f4ba83a1461020b575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190611bb6565b6104c5565b6040516101769190611bfb565b60405180910390f35b34801561018a575f80fd5b506101a560048036038101906101a09190611c47565b61053e565b6040516101b29190611c81565b60405180910390f35b3480156101c6575f80fd5b506101e160048036038101906101dc9190611cf4565b610568565b005b3480156101ee575f80fd5b5061020960048036038101906102049190611cf4565b61058a565b005b348015610216575f80fd5b5061021f610605565b005b34801561022c575f80fd5b5061024760048036038101906102429190611d32565b610617565b005b348015610254575f80fd5b5061026f600480360381019061026a9190611d32565b610662565b005b61028b60048036038101906102869190611e99565b610838565b005b348015610298575f80fd5b506102a1610857565b6040516102ae9190611c81565b60405180910390f35b3480156102c2575f80fd5b506102cb610888565b6040516102d89190611bfb565b60405180910390f35b3480156102ec575f80fd5b506102f561089c565b6040516103029190611f02565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611d32565b6108c1565b005b34801561033e575f80fd5b5061034761090c565b005b348015610354575f80fd5b5061035d61091f565b60405161036a9190611f02565b60405180910390f35b34801561037e575f80fd5b50610387610944565b005b348015610394575f80fd5b5061039d610ae4565b005b3480156103aa575f80fd5b506103b3610af6565b6040516103c09190611f02565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190611cf4565b610b2b565b6040516103fc9190611bfb565b60405180910390f35b348015610410575f80fd5b50610419610b9c565b6040516104269190611c81565b60405180910390f35b34801561043a575f80fd5b50610443610ba2565b6040516104509190611f7b565b60405180910390f35b348015610464575f80fd5b5061047f600480360381019061047a9190611cf4565b610bdb565b005b61049b6004803603810190610496919061204d565b610bfd565b005b3480156104a8575f80fd5b506104c360048036038101906104be9190611d32565b610db5565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610537575061053682610e39565b5b9050919050565b5f80610548610ea2565b9050805f015f8481526020019081526020015f2060010154915050919050565b6105718261053e565b61057a81610ec9565b6105848383610edd565b50505050565b610592610fd5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106008282610fdc565b505050565b61060d6110d4565b61061561115b565b565b61061f6110d4565b8060645f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612115565b60405180910390fd5b5f60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c650fc836040518263ffffffff1660e01b815260040161072b9190611f02565b602060405180830381865afa158015610746573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061076a919061215d565b159050806107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a4906121f8565b60405180910390fd5b60655f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d1ba077836040518263ffffffff1660e01b81526004016108079190611f02565b5f604051808303815f87803b15801561081e575f80fd5b505af1158015610830573d5f803e3d5ffd5b505050505050565b6108406111bb565b610849826112a1565b61085382826112ac565b5050565b5f6108606113ca565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b60655f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108c96110d4565b8060655f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109146110d4565b61091d5f611451565b565b60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61094d611522565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156109955750825b90505f60018367ffffffffffffffff161480156109c857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156109d6575080155b15610a0d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610a5a576001855f0160086101000a81548160ff0219169083151502179055505b610a6333611535565b610a6b611549565b610a73611553565b610a7b611565565b610a83611577565b8315610add575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ad4919061226b565b60405180910390a15b5050505050565b610aec6110d4565b610af4611581565b565b5f80610b006115e2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f80610b35610ea2565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f801b81565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610be48261053e565b610bed81610ec9565b610bf78383610fdc565b50505050565b5f3403610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c36906122f4565b60405180910390fd5b5f8484905003610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612382565b60405180910390fd5b818190508484905014610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc390612436565b60405180910390fd5b5f3390505f60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c650fc836040518263ffffffff1660e01b8152600401610d2b9190611f02565b602060405180830381865afa158015610d46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d6a919061215d565b15905080610dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da4906121f8565b60405180910390fd5b505050505050565b610dbd6110d4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e249190611f02565b60405180910390fd5b610e3681611451565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b610eda81610ed5610fd5565b611609565b50565b5f80610ee7610ea2565b9050610ef38484610b2b565b610fca576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610f66610fd5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610fcf565b5f9150505b92915050565b5f33905090565b5f80610fe6610ea2565b9050610ff28484610b2b565b156110c9575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611065610fd5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506110ce565b5f9150505b92915050565b6110dc610fd5565b73ffffffffffffffffffffffffffffffffffffffff166110fa610af6565b73ffffffffffffffffffffffffffffffffffffffff16146111595761111d610fd5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111509190611f02565b60405180910390fd5b565b61116361165a565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111a4610fd5565b6040516111b19190611f02565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061126857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661124f6116a3565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561129f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6112a96110d4565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561131457506040513d601f19601f820116820180604052508101906113119190612468565b60015b61135557816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161134c9190611f02565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146113bb57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016113b29190611c81565b60405180910390fd5b6113c583836116f6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461144f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61145a6115e2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f8061152c611768565b90508091505090565b61153d611791565b611546816117d1565b50565b611551611791565b565b61155b611791565b611563611855565b565b61156d611791565b611575611877565b565b61157f611791565b565b611589611889565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115cb610fd5565b6040516115d89190611f02565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6116138282610b2b565b6116565780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161164d929190612493565b60405180910390fd5b5050565b611662610888565b6116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169890612504565b60405180910390fd5b565b5f6116cf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6118d3565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6116ff826118dc565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561175b5761175582826119a5565b50611764565b611763611a25565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b611799611a61565b6117cf576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117d9611791565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611849575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118409190611f02565b60405180910390fd5b61185281611451565b50565b61185d611791565b5f805f6101000a81548160ff021916908315150217905550565b61187f611791565b6001603281905550565b611891610888565b156118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c89061256c565b60405180910390fd5b565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361193757806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161192e9190611f02565b60405180910390fd5b806119637f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6118d3565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516119ce91906125ce565b5f60405180830381855af49150503d805f8114611a06576040519150601f19603f3d011682016040523d82523d5f602084013e611a0b565b606091505b5091509150611a1b858383611a7f565b9250505092915050565b5f341115611a5f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611a6a611522565b5f0160089054906101000a900460ff16905090565b606082611a9457611a8f82611b0c565b611b04565b5f8251148015611aba57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611afc57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611af39190611f02565b60405180910390fd5b819050611b05565b5b9392505050565b5f81511115611b1e5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9581611b61565b8114611b9f575f80fd5b50565b5f81359050611bb081611b8c565b92915050565b5f60208284031215611bcb57611bca611b59565b5b5f611bd884828501611ba2565b91505092915050565b5f8115159050919050565b611bf581611be1565b82525050565b5f602082019050611c0e5f830184611bec565b92915050565b5f819050919050565b611c2681611c14565b8114611c30575f80fd5b50565b5f81359050611c4181611c1d565b92915050565b5f60208284031215611c5c57611c5b611b59565b5b5f611c6984828501611c33565b91505092915050565b611c7b81611c14565b82525050565b5f602082019050611c945f830184611c72565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611cc382611c9a565b9050919050565b611cd381611cb9565b8114611cdd575f80fd5b50565b5f81359050611cee81611cca565b92915050565b5f8060408385031215611d0a57611d09611b59565b5b5f611d1785828601611c33565b9250506020611d2885828601611ce0565b9150509250929050565b5f60208284031215611d4757611d46611b59565b5b5f611d5484828501611ce0565b91505092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dab82611d65565b810181811067ffffffffffffffff82111715611dca57611dc9611d75565b5b80604052505050565b5f611ddc611b50565b9050611de88282611da2565b919050565b5f67ffffffffffffffff821115611e0757611e06611d75565b5b611e1082611d65565b9050602081019050919050565b828183375f83830152505050565b5f611e3d611e3884611ded565b611dd3565b905082815260208101848484011115611e5957611e58611d61565b5b611e64848285611e1d565b509392505050565b5f82601f830112611e8057611e7f611d5d565b5b8135611e90848260208601611e2b565b91505092915050565b5f8060408385031215611eaf57611eae611b59565b5b5f611ebc85828601611ce0565b925050602083013567ffffffffffffffff811115611edd57611edc611b5d565b5b611ee985828601611e6c565b9150509250929050565b611efc81611cb9565b82525050565b5f602082019050611f155f830184611ef3565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611f4d82611f1b565b611f578185611f25565b9350611f67818560208601611f35565b611f7081611d65565b840191505092915050565b5f6020820190508181035f830152611f938184611f43565b905092915050565b5f80fd5b5f80fd5b5f8083601f840112611fb857611fb7611d5d565b5b8235905067ffffffffffffffff811115611fd557611fd4611f9b565b5b602083019150836020820283011115611ff157611ff0611f9f565b5b9250929050565b5f8083601f84011261200d5761200c611d5d565b5b8235905067ffffffffffffffff81111561202a57612029611f9b565b5b60208301915083602082028301111561204657612045611f9f565b5b9250929050565b5f805f806040858703121561206557612064611b59565b5b5f85013567ffffffffffffffff81111561208257612081611b5d565b5b61208e87828801611fa3565b9450945050602085013567ffffffffffffffff8111156120b1576120b0611b5d565b5b6120bd87828801611ff8565b925092505092959194509250565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6120ff600f83611f25565b915061210a826120cb565b602082019050919050565b5f6020820190508181035f83015261212c816120f3565b9050919050565b61213c81611be1565b8114612146575f80fd5b50565b5f8151905061215781612133565b92915050565b5f6020828403121561217257612171611b59565b5b5f61217f84828501612149565b91505092915050565b7f54657374616d656e746f206a61206578697374652e2055736520612066756e635f8201527f616f2064652065646963616f2e00000000000000000000000000000000000000602082015250565b5f6121e2602d83611f25565b91506121ed82612188565b604082019050919050565b5f6020820190508181035f83015261220f816121d6565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61225561225061224b84612216565b612232565b61221f565b9050919050565b6122658161223b565b82525050565b5f60208201905061227e5f83018461225c565b92915050565b7f637265617465496e6865726974616e636528292c2076616c6f7220696e76616c5f8201527f69646f0000000000000000000000000000000000000000000000000000000000602082015250565b5f6122de602383611f25565b91506122e982612284565b604082019050919050565b5f6020820190508181035f83015261230b816122d2565b9050919050565b7f637265617465496e6865726974616e636528292c2061646963696f6e65206f735f8201527f20686572646569726f7300000000000000000000000000000000000000000000602082015250565b5f61236c602a83611f25565b915061237782612312565b604082019050919050565b5f6020820190508181035f83015261239981612360565b9050919050565b7f637265617465496e6865726974616e636528292c207175616e746964616465205f8201527f646520656e64657265636f73206520706f7263656e746167656e73206469666560208201527f72656e7465730000000000000000000000000000000000000000000000000000604082015250565b5f612420604683611f25565b915061242b826123a0565b606082019050919050565b5f6020820190508181035f83015261244d81612414565b9050919050565b5f8151905061246281611c1d565b92915050565b5f6020828403121561247d5761247c611b59565b5b5f61248a84828501612454565b91505092915050565b5f6040820190506124a65f830185611ef3565b6124b36020830184611c72565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6124ee601483611f25565b91506124f9826124ba565b602082019050919050565b5f6020820190508181035f83015261251b816124e2565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612556601083611f25565b915061256182612522565b602082019050919050565b5f6020820190508181035f8301526125838161254a565b9050919050565b5f81519050919050565b5f81905092915050565b5f6125a88261258a565b6125b28185612594565b93506125c2818560208601611f35565b80840191505092915050565b5f6125d9828461259e565b91508190509291505056fea26469706673582212204f39dd9baae92735f3928ad7837848bfc497b4b82094f482fe23e64f31f09b1b64736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0x41 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x261A PUSH2 0x68 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x11BD ADD MSTORE DUP2 DUP2 PUSH2 0x1212 ADD MSTORE PUSH2 0x13CC ADD MSTORE PUSH2 0x261A PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x710EEF7A GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xE7A84BC3 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x49D JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x710EEF7A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x75BA6F71 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39F JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x4BD39BDC GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x4BD39BDC EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4D1BA077 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6AF70684 EQ PUSH2 0x2E1 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x90C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0x944 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B3 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x537 JUMPI POP PUSH2 0x536 DUP3 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x548 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x571 DUP3 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x57A DUP2 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x584 DUP4 DUP4 PUSH2 0xEDD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP3 DUP3 PUSH2 0xFDC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x115B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61F PUSH2 0x10D4 JUMP JUMPDEST DUP1 PUSH1 0x64 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88C650FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST ISZERO SWAP1 POP DUP1 PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D1BA077 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x830 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 PUSH2 0x11BB JUMP JUMPDEST PUSH2 0x849 DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x853 DUP3 DUP3 PUSH2 0x12AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x860 PUSH2 0x13CA JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x65 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x10D4 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x914 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x91D PUSH0 PUSH2 0x1451 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x94D PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x995 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9C8 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9D6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA5A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA63 CALLER PUSH2 0x1535 JUMP JUMPDEST PUSH2 0xA6B PUSH2 0x1549 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0xA7B PUSH2 0x1565 JUMP JUMPDEST PUSH2 0xA83 PUSH2 0x1577 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xADD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0xAF4 PUSH2 0x1581 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB00 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB35 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBE4 DUP3 PUSH2 0x53E JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xBF7 DUP4 DUP4 PUSH2 0xFDC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xCCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC3 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88C650FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST ISZERO SWAP1 POP DUP1 PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA4 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDBD PUSH2 0x10D4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE36 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0xED5 PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x1609 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEE7 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xEF3 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xFCA JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF66 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xFCF JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFE6 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF2 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST ISZERO PUSH2 0x10C9 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1065 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x10CE JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DC PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FA PUSH2 0xAF6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1159 JUMPI PUSH2 0x111D PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1163 PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11A4 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1268 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x124F PUSH2 0x16A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x12A9 PUSH2 0x10D4 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1314 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x2468 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1355 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x13BB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C5 DUP4 DUP4 PUSH2 0x16F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x145A PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x152C PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x153D PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x17D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1551 PUSH2 0x1791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x155B PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1563 PUSH2 0x1855 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x156D PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1575 PUSH2 0x1877 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x157F PUSH2 0x1791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15CB PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1613 DUP3 DUP3 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1656 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164D SWAP3 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1662 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16CF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x18D3 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16FF DUP3 PUSH2 0x18DC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x1755 DUP3 DUP3 PUSH2 0x19A5 JUMP JUMPDEST POP PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1763 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17D9 PUSH2 0x1791 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1849 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x185D PUSH2 0x1791 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x187F PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x32 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1891 PUSH2 0x888 JUMP JUMPDEST ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C8 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1937 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1963 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x18D3 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A1B DUP6 DUP4 DUP4 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1A6A PUSH2 0x1522 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1A94 JUMPI PUSH2 0x1A8F DUP3 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1ABA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1AFC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF3 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1B1E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B95 DUP2 PUSH2 0x1B61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB0 DUP2 PUSH2 0x1B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCB JUMPI PUSH2 0x1BCA PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD8 DUP5 DUP3 DUP6 ADD PUSH2 0x1BA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF5 DUP2 PUSH2 0x1BE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0E PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C94 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC3 DUP3 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1CB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEE DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0A JUMPI PUSH2 0x1D09 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D17 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D28 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D54 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1DAB DUP3 PUSH2 0x1D65 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DDC PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE8 DUP3 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x1D65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3D PUSH2 0x1E38 DUP5 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST PUSH2 0x1E64 DUP5 DUP3 DUP6 PUSH2 0x1E1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1EAE PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBC DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EDD JUMPI PUSH2 0x1EDC PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x1EE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EFC DUP2 PUSH2 0x1CB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F15 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4D DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1F57 DUP2 DUP6 PUSH2 0x1F25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F35 JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1D65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F93 DUP2 DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FF1 JUMPI PUSH2 0x1FF0 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2065 JUMPI PUSH2 0x2064 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2082 JUMPI PUSH2 0x2081 PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x208E DUP8 DUP3 DUP9 ADD PUSH2 0x1FA3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x20BD DUP8 DUP3 DUP9 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FF PUSH1 0xF DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x210A DUP3 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x212C DUP2 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213C DUP2 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2146 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2157 DUP2 PUSH2 0x2133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217F DUP5 DUP3 DUP6 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54657374616D656E746F206A61206578697374652E2055736520612066756E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x616F2064652065646963616F2E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E2 PUSH1 0x2D DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x21ED DUP3 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2255 PUSH2 0x2250 PUSH2 0x224B DUP5 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x2232 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2265 DUP2 PUSH2 0x223B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227E PUSH0 DUP4 ADD DUP5 PUSH2 0x225C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C2076616C6F7220696E76616C PUSH0 DUP3 ADD MSTORE PUSH32 0x69646F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DE PUSH1 0x23 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E9 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230B DUP2 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C2061646963696F6E65206F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x20686572646569726F7300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236C PUSH1 0x2A DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2377 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2399 DUP2 PUSH2 0x2360 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C207175616E74696461646520 PUSH0 DUP3 ADD MSTORE PUSH32 0x646520656E64657265636F73206520706F7263656E746167656E732064696665 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x72656E7465730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2420 PUSH1 0x46 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x242B DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244D DUP2 PUSH2 0x2414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2462 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x2454 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24A6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x24B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EE PUSH1 0x14 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP3 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251B DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2556 PUSH1 0x10 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2561 DUP3 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2583 DUP2 PUSH2 0x254A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A8 DUP3 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x25B2 DUP2 DUP6 PUSH2 0x2594 JUMP JUMPDEST SWAP4 POP PUSH2 0x25C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F35 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25D9 DUP3 DUP5 PUSH2 0x259E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CODECOPY 0xDD SWAP12 0xAA 0xE9 0x27 CALLDATALOAD RETURN SWAP3 DUP11 0xD7 DUP4 PUSH25 0x48BFC497B4B82094F482FE23E64F31F09B1B64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "733:2800:0:-:0;;;1171:4:4;1128:48;;;;;;;;;733:2800:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_258": {
									"entryPoint": 2972,
									"id": 258,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_1079": {
									"entryPoint": 2978,
									"id": 1079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_293": {
									"entryPoint": 5495,
									"id": 293,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Ownable_init_647": {
									"entryPoint": 5429,
									"id": 647,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_674": {
									"entryPoint": 6097,
									"id": 674,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Pausable_init_1269": {
									"entryPoint": 5459,
									"id": 1269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_1279": {
									"entryPoint": 6229,
									"id": 1279,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_1389": {
									"entryPoint": 5477,
									"id": 1389,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__ReentrancyGuard_init_unchained_1399": {
									"entryPoint": 6263,
									"id": 1399,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_1109": {
									"entryPoint": 5449,
									"id": 1109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_69": {
									"entryPoint": 4769,
									"id": 69,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_963": {
									"entryPoint": 6033,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1943": {
									"entryPoint": 6693,
									"id": 1943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_1185": {
									"entryPoint": 5066,
									"id": 1185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_715": {
									"entryPoint": 4308,
									"id": 715,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_1169": {
									"entryPoint": 4539,
									"id": 1169,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_359": {
									"entryPoint": 3785,
									"id": 359,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_380": {
									"entryPoint": 5641,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_276": {
									"entryPoint": 3746,
									"id": 276,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_1054": {
									"entryPoint": 5410,
									"id": 1054,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_618": {
									"entryPoint": 5602,
									"id": 618,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_545": {
									"entryPoint": 3805,
									"id": 545,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_1040": {
									"entryPoint": 5992,
									"id": 1040,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_1031": {
									"entryPoint": 6753,
									"id": 1031,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1478": {
									"entryPoint": 4053,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1343": {
									"entryPoint": 5505,
									"id": 1343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1316": {
									"entryPoint": 6281,
									"id": 1316,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1327": {
									"entryPoint": 5722,
									"id": 1327,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_2213": {
									"entryPoint": 6924,
									"id": 2213,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_591": {
									"entryPoint": 4060,
									"id": 591,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1723": {
									"entryPoint": 6364,
									"id": 1723,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_786": {
									"entryPoint": 5201,
									"id": 786,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1359": {
									"entryPoint": 4443,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_1236": {
									"entryPoint": 4780,
									"id": 1236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@contractInheritanceManagement_35": {
									"entryPoint": 2335,
									"id": 35,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@contractProofOfLife_37": {
									"entryPoint": 2204,
									"id": 37,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createInheritance_190": {
									"entryPoint": 3069,
									"id": 190,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@functionDelegateCall_2131": {
									"entryPoint": 6565,
									"id": 2131,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2271": {
									"entryPoint": 6355,
									"id": 2271,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1696": {
									"entryPoint": 5795,
									"id": 1696,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_401": {
									"entryPoint": 1342,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_420": {
									"entryPoint": 1384,
									"id": 420,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_346": {
									"entryPoint": 2859,
									"id": 346,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_60": {
									"entryPoint": 2372,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_698": {
									"entryPoint": 2806,
									"id": 698,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_78": {
									"entryPoint": 2788,
									"id": 78,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1304": {
									"entryPoint": 2184,
									"id": 1304,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_1127": {
									"entryPoint": 2135,
									"id": 1127,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_729": {
									"entryPoint": 2316,
									"id": 729,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_462": {
									"entryPoint": 1418,
									"id": 462,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_439": {
									"entryPoint": 3035,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setNewContractInheritanceManagement_123": {
									"entryPoint": 1559,
									"id": 123,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setNewContractProofOfLife_135": {
									"entryPoint": 2241,
									"id": 135,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_1535": {
									"entryPoint": 3641,
									"id": 1535,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_321": {
									"entryPoint": 1221,
									"id": 321,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_757": {
									"entryPoint": 3509,
									"id": 757,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_87": {
									"entryPoint": 1541,
									"id": 87,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateProofOfLife_228": {
									"entryPoint": 1634,
									"id": 228,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1147": {
									"entryPoint": 2104,
									"id": 1147,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1759": {
									"entryPoint": 5878,
									"id": 1759,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_2171": {
									"entryPoint": 6783,
									"id": 2171,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_address_$dyn_calldata_ptr": {
									"entryPoint": 8099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_array$_t_uint16_$dyn_calldata_ptr": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 7219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32_fromMemory": {
									"entryPoint": 9300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 7788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 7239,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 9320,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7094,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7923,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9630,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 8796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8003,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 7297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 8811,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9476,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8469,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9580,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 6992,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 7661,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 9620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7973,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7188,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 8726,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8735,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 8763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 7709,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7989,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8095,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7005,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7001,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226": {
									"entryPoint": 8395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35": {
									"entryPoint": 9120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97": {
									"entryPoint": 8978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6": {
									"entryPoint": 8584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04": {
									"entryPoint": 8836,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:20900:18",
										"nodeType": "YulBlock",
										"src": "0:20900:18",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:18",
													"nodeType": "YulBlock",
													"src": "47:35:18",
													"statements": [
														{
															"nativeSrc": "57:19:18",
															"nodeType": "YulAssignment",
															"src": "57:19:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:18",
																		"nodeType": "YulLiteral",
																		"src": "73:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:18"
																},
																"nativeSrc": "67:9:18",
																"nodeType": "YulFunctionCall",
																"src": "67:9:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:18"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:18",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:18",
														"nodeType": "YulTypedName",
														"src": "40:6:18",
														"type": ""
													}
												],
												"src": "7:75:18"
											},
											{
												"body": {
													"nativeSrc": "177:28:18",
													"nodeType": "YulBlock",
													"src": "177:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:18",
																		"nodeType": "YulLiteral",
																		"src": "194:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:18",
																		"nodeType": "YulLiteral",
																		"src": "197:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:18"
																},
																"nativeSrc": "187:12:18",
																"nodeType": "YulFunctionCall",
																"src": "187:12:18"
															},
															"nativeSrc": "187:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:18"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:18"
											},
											{
												"body": {
													"nativeSrc": "300:28:18",
													"nodeType": "YulBlock",
													"src": "300:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:18",
																		"nodeType": "YulLiteral",
																		"src": "317:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:18",
																		"nodeType": "YulLiteral",
																		"src": "320:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:18"
																},
																"nativeSrc": "310:12:18",
																"nodeType": "YulFunctionCall",
																"src": "310:12:18"
															},
															"nativeSrc": "310:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:18"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:18"
											},
											{
												"body": {
													"nativeSrc": "378:105:18",
													"nodeType": "YulBlock",
													"src": "378:105:18",
													"statements": [
														{
															"nativeSrc": "388:89:18",
															"nodeType": "YulAssignment",
															"src": "388:89:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:18",
																		"nodeType": "YulLiteral",
																		"src": "410:66:18",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:18"
																},
																"nativeSrc": "399:78:18",
																"nodeType": "YulFunctionCall",
																"src": "399:78:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:18",
														"nodeType": "YulTypedName",
														"src": "360:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:18",
														"nodeType": "YulTypedName",
														"src": "370:7:18",
														"type": ""
													}
												],
												"src": "334:149:18"
											},
											{
												"body": {
													"nativeSrc": "531:78:18",
													"nodeType": "YulBlock",
													"src": "531:78:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:18",
																"nodeType": "YulBlock",
																"src": "587:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:18",
																					"nodeType": "YulLiteral",
																					"src": "596:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:18",
																					"nodeType": "YulLiteral",
																					"src": "599:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:18"
																			},
																			"nativeSrc": "589:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:18"
																		},
																		"nativeSrc": "589:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:18",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:18"
																				},
																				"nativeSrc": "561:23:18",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:18"
																		},
																		"nativeSrc": "551:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:18"
																},
																"nativeSrc": "544:42:18",
																"nodeType": "YulFunctionCall",
																"src": "544:42:18"
															},
															"nativeSrc": "541:62:18",
															"nodeType": "YulIf",
															"src": "541:62:18"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:18",
														"nodeType": "YulTypedName",
														"src": "524:5:18",
														"type": ""
													}
												],
												"src": "489:120:18"
											},
											{
												"body": {
													"nativeSrc": "666:86:18",
													"nodeType": "YulBlock",
													"src": "666:86:18",
													"statements": [
														{
															"nativeSrc": "676:29:18",
															"nodeType": "YulAssignment",
															"src": "676:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:18"
																},
																"nativeSrc": "685:20:18",
																"nodeType": "YulFunctionCall",
																"src": "685:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:18"
																},
																"nativeSrc": "714:32:18",
																"nodeType": "YulFunctionCall",
																"src": "714:32:18"
															},
															"nativeSrc": "714:32:18",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:18"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:18",
														"nodeType": "YulTypedName",
														"src": "644:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:18",
														"nodeType": "YulTypedName",
														"src": "652:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:18",
														"nodeType": "YulTypedName",
														"src": "660:5:18",
														"type": ""
													}
												],
												"src": "615:137:18"
											},
											{
												"body": {
													"nativeSrc": "823:262:18",
													"nodeType": "YulBlock",
													"src": "823:262:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:18",
																"nodeType": "YulBlock",
																"src": "869:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:18"
																			},
																			"nativeSrc": "871:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:18"
																		},
																		"nativeSrc": "871:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:18"
																		},
																		"nativeSrc": "840:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:18",
																		"nodeType": "YulLiteral",
																		"src": "865:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:18"
																},
																"nativeSrc": "836:32:18",
																"nodeType": "YulFunctionCall",
																"src": "836:32:18"
															},
															"nativeSrc": "833:119:18",
															"nodeType": "YulIf",
															"src": "833:119:18"
														},
														{
															"nativeSrc": "962:116:18",
															"nodeType": "YulBlock",
															"src": "962:116:18",
															"statements": [
																{
																	"nativeSrc": "977:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:18",
																		"nodeType": "YulLiteral",
																		"src": "991:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:18",
																			"nodeType": "YulTypedName",
																			"src": "981:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:18",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:18"
																				},
																				"nativeSrc": "1036:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:18",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:18"
																		},
																		"nativeSrc": "1016:52:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:18",
														"nodeType": "YulTypedName",
														"src": "793:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:18",
														"nodeType": "YulTypedName",
														"src": "804:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:18",
														"nodeType": "YulTypedName",
														"src": "816:6:18",
														"type": ""
													}
												],
												"src": "758:327:18"
											},
											{
												"body": {
													"nativeSrc": "1133:48:18",
													"nodeType": "YulBlock",
													"src": "1133:48:18",
													"statements": [
														{
															"nativeSrc": "1143:32:18",
															"nodeType": "YulAssignment",
															"src": "1143:32:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:18"
																		},
																		"nativeSrc": "1161:13:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:18"
																},
																"nativeSrc": "1154:21:18",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:18",
														"nodeType": "YulTypedName",
														"src": "1115:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:18",
														"nodeType": "YulTypedName",
														"src": "1125:7:18",
														"type": ""
													}
												],
												"src": "1091:90:18"
											},
											{
												"body": {
													"nativeSrc": "1246:50:18",
													"nodeType": "YulBlock",
													"src": "1246:50:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:18",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:18"
																		},
																		"nativeSrc": "1268:21:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:18"
																},
																"nativeSrc": "1256:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:18"
															},
															"nativeSrc": "1256:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:18"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:18",
														"nodeType": "YulTypedName",
														"src": "1234:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:18",
														"nodeType": "YulTypedName",
														"src": "1241:3:18",
														"type": ""
													}
												],
												"src": "1187:109:18"
											},
											{
												"body": {
													"nativeSrc": "1394:118:18",
													"nodeType": "YulBlock",
													"src": "1394:118:18",
													"statements": [
														{
															"nativeSrc": "1404:26:18",
															"nodeType": "YulAssignment",
															"src": "1404:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:18"
																},
																"nativeSrc": "1412:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:18",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:18"
																		},
																		"nativeSrc": "1487:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:18",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:18"
																},
																"nativeSrc": "1440:65:18",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:18"
															},
															"nativeSrc": "1440:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:18",
														"nodeType": "YulTypedName",
														"src": "1366:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:18",
														"nodeType": "YulTypedName",
														"src": "1378:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:18",
														"nodeType": "YulTypedName",
														"src": "1389:4:18",
														"type": ""
													}
												],
												"src": "1302:210:18"
											},
											{
												"body": {
													"nativeSrc": "1563:32:18",
													"nodeType": "YulBlock",
													"src": "1563:32:18",
													"statements": [
														{
															"nativeSrc": "1573:16:18",
															"nodeType": "YulAssignment",
															"src": "1573:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:18",
																"nodeType": "YulIdentifier",
																"src": "1584:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:18",
														"nodeType": "YulTypedName",
														"src": "1545:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:18",
														"nodeType": "YulTypedName",
														"src": "1555:7:18",
														"type": ""
													}
												],
												"src": "1518:77:18"
											},
											{
												"body": {
													"nativeSrc": "1644:79:18",
													"nodeType": "YulBlock",
													"src": "1644:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:18",
																"nodeType": "YulBlock",
																"src": "1701:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:18"
																			},
																			"nativeSrc": "1703:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:18"
																		},
																		"nativeSrc": "1703:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:18"
																				},
																				"nativeSrc": "1674:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:18"
																		},
																		"nativeSrc": "1664:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:18"
																},
																"nativeSrc": "1657:43:18",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:18"
															},
															"nativeSrc": "1654:63:18",
															"nodeType": "YulIf",
															"src": "1654:63:18"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:18",
														"nodeType": "YulTypedName",
														"src": "1637:5:18",
														"type": ""
													}
												],
												"src": "1601:122:18"
											},
											{
												"body": {
													"nativeSrc": "1781:87:18",
													"nodeType": "YulBlock",
													"src": "1781:87:18",
													"statements": [
														{
															"nativeSrc": "1791:29:18",
															"nodeType": "YulAssignment",
															"src": "1791:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:18"
																},
																"nativeSrc": "1800:20:18",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:18"
																},
																"nativeSrc": "1829:33:18",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:18"
															},
															"nativeSrc": "1829:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:18",
														"nodeType": "YulTypedName",
														"src": "1759:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:18",
														"nodeType": "YulTypedName",
														"src": "1767:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:18",
														"nodeType": "YulTypedName",
														"src": "1775:5:18",
														"type": ""
													}
												],
												"src": "1729:139:18"
											},
											{
												"body": {
													"nativeSrc": "1940:263:18",
													"nodeType": "YulBlock",
													"src": "1940:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:18",
																"nodeType": "YulBlock",
																"src": "1986:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:18"
																			},
																			"nativeSrc": "1988:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:18"
																		},
																		"nativeSrc": "1988:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:18"
																		},
																		"nativeSrc": "1957:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:18"
																},
																"nativeSrc": "1953:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:18"
															},
															"nativeSrc": "1950:119:18",
															"nodeType": "YulIf",
															"src": "1950:119:18"
														},
														{
															"nativeSrc": "2079:117:18",
															"nodeType": "YulBlock",
															"src": "2079:117:18",
															"statements": [
																{
																	"nativeSrc": "2094:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:18",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:18",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:18"
																				},
																				"nativeSrc": "2154:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:18"
																		},
																		"nativeSrc": "2133:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:18",
														"nodeType": "YulTypedName",
														"src": "1910:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:18",
														"nodeType": "YulTypedName",
														"src": "1921:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:18",
														"nodeType": "YulTypedName",
														"src": "1933:6:18",
														"type": ""
													}
												],
												"src": "1874:329:18"
											},
											{
												"body": {
													"nativeSrc": "2274:53:18",
													"nodeType": "YulBlock",
													"src": "2274:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:18"
																		},
																		"nativeSrc": "2296:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:18"
																},
																"nativeSrc": "2284:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:18"
															},
															"nativeSrc": "2284:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:18"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:18",
														"nodeType": "YulTypedName",
														"src": "2262:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:18",
														"nodeType": "YulTypedName",
														"src": "2269:3:18",
														"type": ""
													}
												],
												"src": "2209:118:18"
											},
											{
												"body": {
													"nativeSrc": "2431:124:18",
													"nodeType": "YulBlock",
													"src": "2431:124:18",
													"statements": [
														{
															"nativeSrc": "2441:26:18",
															"nodeType": "YulAssignment",
															"src": "2441:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:18"
																},
																"nativeSrc": "2449:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:18",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:18"
																		},
																		"nativeSrc": "2530:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:18"
																},
																"nativeSrc": "2477:71:18",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:18"
															},
															"nativeSrc": "2477:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:18",
														"nodeType": "YulTypedName",
														"src": "2403:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:18",
														"nodeType": "YulTypedName",
														"src": "2415:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:18",
														"nodeType": "YulTypedName",
														"src": "2426:4:18",
														"type": ""
													}
												],
												"src": "2333:222:18"
											},
											{
												"body": {
													"nativeSrc": "2606:81:18",
													"nodeType": "YulBlock",
													"src": "2606:81:18",
													"statements": [
														{
															"nativeSrc": "2616:65:18",
															"nodeType": "YulAssignment",
															"src": "2616:65:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2631:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2631:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2638:42:18",
																		"nodeType": "YulLiteral",
																		"src": "2638:42:18",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2627:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2627:3:18"
																},
																"nativeSrc": "2627:54:18",
																"nodeType": "YulFunctionCall",
																"src": "2627:54:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2561:126:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:18",
														"nodeType": "YulTypedName",
														"src": "2588:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:18",
														"nodeType": "YulTypedName",
														"src": "2598:7:18",
														"type": ""
													}
												],
												"src": "2561:126:18"
											},
											{
												"body": {
													"nativeSrc": "2738:51:18",
													"nodeType": "YulBlock",
													"src": "2738:51:18",
													"statements": [
														{
															"nativeSrc": "2748:35:18",
															"nodeType": "YulAssignment",
															"src": "2748:35:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2777:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "2777:5:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2759:17:18",
																	"nodeType": "YulIdentifier",
																	"src": "2759:17:18"
																},
																"nativeSrc": "2759:24:18",
																"nodeType": "YulFunctionCall",
																"src": "2759:24:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2748:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "2748:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2693:96:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2720:5:18",
														"nodeType": "YulTypedName",
														"src": "2720:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2730:7:18",
														"nodeType": "YulTypedName",
														"src": "2730:7:18",
														"type": ""
													}
												],
												"src": "2693:96:18"
											},
											{
												"body": {
													"nativeSrc": "2838:79:18",
													"nodeType": "YulBlock",
													"src": "2838:79:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2895:16:18",
																"nodeType": "YulBlock",
																"src": "2895:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2904:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2904:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2907:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2907:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2897:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2897:6:18"
																			},
																			"nativeSrc": "2897:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2897:12:18"
																		},
																		"nativeSrc": "2897:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2897:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2861:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "2861:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2886:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "2886:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2868:17:18",
																					"nodeType": "YulIdentifier",
																					"src": "2868:17:18"
																				},
																				"nativeSrc": "2868:24:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2868:24:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2858:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2858:2:18"
																		},
																		"nativeSrc": "2858:35:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2858:35:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2851:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2851:6:18"
																},
																"nativeSrc": "2851:43:18",
																"nodeType": "YulFunctionCall",
																"src": "2851:43:18"
															},
															"nativeSrc": "2848:63:18",
															"nodeType": "YulIf",
															"src": "2848:63:18"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2795:122:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2831:5:18",
														"nodeType": "YulTypedName",
														"src": "2831:5:18",
														"type": ""
													}
												],
												"src": "2795:122:18"
											},
											{
												"body": {
													"nativeSrc": "2975:87:18",
													"nodeType": "YulBlock",
													"src": "2975:87:18",
													"statements": [
														{
															"nativeSrc": "2985:29:18",
															"nodeType": "YulAssignment",
															"src": "2985:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3007:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3007:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2994:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2994:12:18"
																},
																"nativeSrc": "2994:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2994:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2985:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2985:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3050:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "3050:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3023:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "3023:26:18"
																},
																"nativeSrc": "3023:33:18",
																"nodeType": "YulFunctionCall",
																"src": "3023:33:18"
															},
															"nativeSrc": "3023:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "3023:33:18"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2923:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2953:6:18",
														"nodeType": "YulTypedName",
														"src": "2953:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2961:3:18",
														"nodeType": "YulTypedName",
														"src": "2961:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2969:5:18",
														"nodeType": "YulTypedName",
														"src": "2969:5:18",
														"type": ""
													}
												],
												"src": "2923:139:18"
											},
											{
												"body": {
													"nativeSrc": "3151:391:18",
													"nodeType": "YulBlock",
													"src": "3151:391:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3197:83:18",
																"nodeType": "YulBlock",
																"src": "3197:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3199:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3199:77:18"
																			},
																			"nativeSrc": "3199:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3199:79:18"
																		},
																		"nativeSrc": "3199:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3199:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3172:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3172:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3181:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3181:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3168:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3168:3:18"
																		},
																		"nativeSrc": "3168:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3168:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3193:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3193:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3164:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3164:3:18"
																},
																"nativeSrc": "3164:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3164:32:18"
															},
															"nativeSrc": "3161:119:18",
															"nodeType": "YulIf",
															"src": "3161:119:18"
														},
														{
															"nativeSrc": "3290:117:18",
															"nodeType": "YulBlock",
															"src": "3290:117:18",
															"statements": [
																{
																	"nativeSrc": "3305:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3305:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3319:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3319:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3309:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3309:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3334:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3334:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3369:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3369:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3380:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3380:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3365:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3365:3:18"
																				},
																				"nativeSrc": "3365:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3365:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3389:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3389:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "3344:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3344:20:18"
																		},
																		"nativeSrc": "3344:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3344:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3334:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3334:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3417:118:18",
															"nodeType": "YulBlock",
															"src": "3417:118:18",
															"statements": [
																{
																	"nativeSrc": "3432:16:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3432:16:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3446:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3446:2:18",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3436:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3436:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3462:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3462:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3497:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3497:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3508:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3508:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3493:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3493:3:18"
																				},
																				"nativeSrc": "3493:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3493:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3517:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3517:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3472:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3472:20:18"
																		},
																		"nativeSrc": "3472:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3472:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3462:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3462:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3068:474:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3113:9:18",
														"nodeType": "YulTypedName",
														"src": "3113:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3124:7:18",
														"nodeType": "YulTypedName",
														"src": "3124:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3136:6:18",
														"nodeType": "YulTypedName",
														"src": "3136:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3144:6:18",
														"nodeType": "YulTypedName",
														"src": "3144:6:18",
														"type": ""
													}
												],
												"src": "3068:474:18"
											},
											{
												"body": {
													"nativeSrc": "3614:263:18",
													"nodeType": "YulBlock",
													"src": "3614:263:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3660:83:18",
																"nodeType": "YulBlock",
																"src": "3660:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3662:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "3662:77:18"
																			},
																			"nativeSrc": "3662:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3662:79:18"
																		},
																		"nativeSrc": "3662:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3662:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3635:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3635:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3644:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3631:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3631:3:18"
																		},
																		"nativeSrc": "3631:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3631:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3656:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3656:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3627:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3627:3:18"
																},
																"nativeSrc": "3627:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3627:32:18"
															},
															"nativeSrc": "3624:119:18",
															"nodeType": "YulIf",
															"src": "3624:119:18"
														},
														{
															"nativeSrc": "3753:117:18",
															"nodeType": "YulBlock",
															"src": "3753:117:18",
															"statements": [
																{
																	"nativeSrc": "3768:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3768:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3782:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3782:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3772:6:18",
																			"nodeType": "YulTypedName",
																			"src": "3772:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3797:63:18",
																	"nodeType": "YulAssignment",
																	"src": "3797:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3832:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "3832:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3843:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3828:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "3828:3:18"
																				},
																				"nativeSrc": "3828:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "3828:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3852:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3852:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3807:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "3807:20:18"
																		},
																		"nativeSrc": "3807:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3807:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3797:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "3797:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3548:329:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3584:9:18",
														"nodeType": "YulTypedName",
														"src": "3584:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3595:7:18",
														"nodeType": "YulTypedName",
														"src": "3595:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3607:6:18",
														"nodeType": "YulTypedName",
														"src": "3607:6:18",
														"type": ""
													}
												],
												"src": "3548:329:18"
											},
											{
												"body": {
													"nativeSrc": "3972:28:18",
													"nodeType": "YulBlock",
													"src": "3972:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3989:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3989:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3992:1:18",
																		"nodeType": "YulLiteral",
																		"src": "3992:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3982:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3982:6:18"
																},
																"nativeSrc": "3982:12:18",
																"nodeType": "YulFunctionCall",
																"src": "3982:12:18"
															},
															"nativeSrc": "3982:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "3982:12:18"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "3883:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "3883:117:18"
											},
											{
												"body": {
													"nativeSrc": "4095:28:18",
													"nodeType": "YulBlock",
													"src": "4095:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4112:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4112:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4115:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4115:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4105:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:18"
																},
																"nativeSrc": "4105:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4105:12:18"
															},
															"nativeSrc": "4105:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "4105:12:18"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4006:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "4006:117:18"
											},
											{
												"body": {
													"nativeSrc": "4177:54:18",
													"nodeType": "YulBlock",
													"src": "4177:54:18",
													"statements": [
														{
															"nativeSrc": "4187:38:18",
															"nodeType": "YulAssignment",
															"src": "4187:38:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4205:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4205:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4212:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4212:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4201:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4201:3:18"
																		},
																		"nativeSrc": "4201:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4201:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4221:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4221:2:18",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4217:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4217:3:18"
																		},
																		"nativeSrc": "4217:7:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4217:7:18"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4197:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4197:3:18"
																},
																"nativeSrc": "4197:28:18",
																"nodeType": "YulFunctionCall",
																"src": "4197:28:18"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4187:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4187:6:18"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "4129:102:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4160:5:18",
														"nodeType": "YulTypedName",
														"src": "4160:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4170:6:18",
														"nodeType": "YulTypedName",
														"src": "4170:6:18",
														"type": ""
													}
												],
												"src": "4129:102:18"
											},
											{
												"body": {
													"nativeSrc": "4265:152:18",
													"nodeType": "YulBlock",
													"src": "4265:152:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4282:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4282:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4285:77:18",
																		"nodeType": "YulLiteral",
																		"src": "4285:77:18",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4275:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4275:6:18"
																},
																"nativeSrc": "4275:88:18",
																"nodeType": "YulFunctionCall",
																"src": "4275:88:18"
															},
															"nativeSrc": "4275:88:18",
															"nodeType": "YulExpressionStatement",
															"src": "4275:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4379:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4379:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4382:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4382:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4372:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4372:6:18"
																},
																"nativeSrc": "4372:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4372:15:18"
															},
															"nativeSrc": "4372:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4372:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4403:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4403:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4406:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4406:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4396:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4396:6:18"
																},
																"nativeSrc": "4396:15:18",
																"nodeType": "YulFunctionCall",
																"src": "4396:15:18"
															},
															"nativeSrc": "4396:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "4396:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4237:180:18",
												"nodeType": "YulFunctionDefinition",
												"src": "4237:180:18"
											},
											{
												"body": {
													"nativeSrc": "4466:238:18",
													"nodeType": "YulBlock",
													"src": "4466:238:18",
													"statements": [
														{
															"nativeSrc": "4476:58:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4476:58:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4498:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4498:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "4528:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "4528:4:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "4506:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "4506:21:18"
																		},
																		"nativeSrc": "4506:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4506:27:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4494:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4494:3:18"
																},
																"nativeSrc": "4494:40:18",
																"nodeType": "YulFunctionCall",
																"src": "4494:40:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4480:10:18",
																	"nodeType": "YulTypedName",
																	"src": "4480:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4645:22:18",
																"nodeType": "YulBlock",
																"src": "4645:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4647:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "4647:16:18"
																			},
																			"nativeSrc": "4647:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "4647:18:18"
																		},
																		"nativeSrc": "4647:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "4647:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4588:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "4588:10:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4600:18:18",
																				"nodeType": "YulLiteral",
																				"src": "4600:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4585:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4585:2:18"
																		},
																		"nativeSrc": "4585:34:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4585:34:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4624:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "4624:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4636:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4636:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4621:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "4621:2:18"
																		},
																		"nativeSrc": "4621:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4621:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4582:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4582:2:18"
																},
																"nativeSrc": "4582:62:18",
																"nodeType": "YulFunctionCall",
																"src": "4582:62:18"
															},
															"nativeSrc": "4579:88:18",
															"nodeType": "YulIf",
															"src": "4579:88:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4683:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4683:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4687:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "4687:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4676:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4676:6:18"
																},
																"nativeSrc": "4676:22:18",
																"nodeType": "YulFunctionCall",
																"src": "4676:22:18"
															},
															"nativeSrc": "4676:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "4676:22:18"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "4423:281:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4452:6:18",
														"nodeType": "YulTypedName",
														"src": "4452:6:18",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "4460:4:18",
														"nodeType": "YulTypedName",
														"src": "4460:4:18",
														"type": ""
													}
												],
												"src": "4423:281:18"
											},
											{
												"body": {
													"nativeSrc": "4751:88:18",
													"nodeType": "YulBlock",
													"src": "4751:88:18",
													"statements": [
														{
															"nativeSrc": "4761:30:18",
															"nodeType": "YulAssignment",
															"src": "4761:30:18",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "4771:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "4771:18:18"
																},
																"nativeSrc": "4771:20:18",
																"nodeType": "YulFunctionCall",
																"src": "4771:20:18"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4761:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4820:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:18"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "4828:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "4828:4:18"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "4800:19:18",
																	"nodeType": "YulIdentifier",
																	"src": "4800:19:18"
																},
																"nativeSrc": "4800:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4800:33:18"
															},
															"nativeSrc": "4800:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4800:33:18"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "4710:129:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "4735:4:18",
														"nodeType": "YulTypedName",
														"src": "4735:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "4744:6:18",
														"nodeType": "YulTypedName",
														"src": "4744:6:18",
														"type": ""
													}
												],
												"src": "4710:129:18"
											},
											{
												"body": {
													"nativeSrc": "4911:241:18",
													"nodeType": "YulBlock",
													"src": "4911:241:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5016:22:18",
																"nodeType": "YulBlock",
																"src": "5016:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5018:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "5018:16:18"
																			},
																			"nativeSrc": "5018:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5018:18:18"
																		},
																		"nativeSrc": "5018:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5018:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4988:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4988:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4996:18:18",
																		"nodeType": "YulLiteral",
																		"src": "4996:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4985:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "4985:2:18"
																},
																"nativeSrc": "4985:30:18",
																"nodeType": "YulFunctionCall",
																"src": "4985:30:18"
															},
															"nativeSrc": "4982:56:18",
															"nodeType": "YulIf",
															"src": "4982:56:18"
														},
														{
															"nativeSrc": "5048:37:18",
															"nodeType": "YulAssignment",
															"src": "5048:37:18",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5078:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5078:6:18"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5056:21:18",
																	"nodeType": "YulIdentifier",
																	"src": "5056:21:18"
																},
																"nativeSrc": "5056:29:18",
																"nodeType": "YulFunctionCall",
																"src": "5056:29:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5048:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5048:4:18"
																}
															]
														},
														{
															"nativeSrc": "5122:23:18",
															"nodeType": "YulAssignment",
															"src": "5122:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5134:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "5134:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5140:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5140:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5130:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5130:3:18"
																},
																"nativeSrc": "5130:15:18",
																"nodeType": "YulFunctionCall",
																"src": "5130:15:18"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5122:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5122:4:18"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "4845:307:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "4895:6:18",
														"nodeType": "YulTypedName",
														"src": "4895:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "4906:4:18",
														"nodeType": "YulTypedName",
														"src": "4906:4:18",
														"type": ""
													}
												],
												"src": "4845:307:18"
											},
											{
												"body": {
													"nativeSrc": "5222:84:18",
													"nodeType": "YulBlock",
													"src": "5222:84:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "5246:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5246:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "5251:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5251:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5256:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5256:6:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5233:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5233:12:18"
																},
																"nativeSrc": "5233:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5233:30:18"
															},
															"nativeSrc": "5233:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "5233:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "5283:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5283:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5288:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5288:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5279:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:18"
																		},
																		"nativeSrc": "5279:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:1:18",
																		"nodeType": "YulLiteral",
																		"src": "5297:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5272:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5272:6:18"
																},
																"nativeSrc": "5272:27:18",
																"nodeType": "YulFunctionCall",
																"src": "5272:27:18"
															},
															"nativeSrc": "5272:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "5272:27:18"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5158:148:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5204:3:18",
														"nodeType": "YulTypedName",
														"src": "5204:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5209:3:18",
														"nodeType": "YulTypedName",
														"src": "5209:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5214:6:18",
														"nodeType": "YulTypedName",
														"src": "5214:6:18",
														"type": ""
													}
												],
												"src": "5158:148:18"
											},
											{
												"body": {
													"nativeSrc": "5395:340:18",
													"nodeType": "YulBlock",
													"src": "5395:340:18",
													"statements": [
														{
															"nativeSrc": "5405:74:18",
															"nodeType": "YulAssignment",
															"src": "5405:74:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5471:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5471:6:18"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "5430:40:18",
																			"nodeType": "YulIdentifier",
																			"src": "5430:40:18"
																		},
																		"nativeSrc": "5430:48:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5430:48:18"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "5414:15:18",
																	"nodeType": "YulIdentifier",
																	"src": "5414:15:18"
																},
																"nativeSrc": "5414:65:18",
																"nodeType": "YulFunctionCall",
																"src": "5414:65:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5405:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5405:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5495:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5495:5:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5502:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5488:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5488:6:18"
																},
																"nativeSrc": "5488:21:18",
																"nodeType": "YulFunctionCall",
																"src": "5488:21:18"
															},
															"nativeSrc": "5488:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "5488:21:18"
														},
														{
															"nativeSrc": "5518:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5518:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "5533:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "5533:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5540:4:18",
																		"nodeType": "YulLiteral",
																		"src": "5540:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5529:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5529:3:18"
																},
																"nativeSrc": "5529:16:18",
																"nodeType": "YulFunctionCall",
																"src": "5529:16:18"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "5522:3:18",
																	"nodeType": "YulTypedName",
																	"src": "5522:3:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5583:83:18",
																"nodeType": "YulBlock",
																"src": "5583:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "5585:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5585:77:18"
																			},
																			"nativeSrc": "5585:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5585:79:18"
																		},
																		"nativeSrc": "5585:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5585:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "5564:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5564:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "5569:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5569:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5560:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5560:3:18"
																		},
																		"nativeSrc": "5560:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5560:16:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5578:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5578:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5557:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5557:2:18"
																},
																"nativeSrc": "5557:25:18",
																"nodeType": "YulFunctionCall",
																"src": "5557:25:18"
															},
															"nativeSrc": "5554:112:18",
															"nodeType": "YulIf",
															"src": "5554:112:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5712:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5712:3:18"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "5717:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "5717:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5722:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5722:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "5675:36:18",
																	"nodeType": "YulIdentifier",
																	"src": "5675:36:18"
																},
																"nativeSrc": "5675:54:18",
																"nodeType": "YulFunctionCall",
																"src": "5675:54:18"
															},
															"nativeSrc": "5675:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "5675:54:18"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "5312:423:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5368:3:18",
														"nodeType": "YulTypedName",
														"src": "5368:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5373:6:18",
														"nodeType": "YulTypedName",
														"src": "5373:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5381:3:18",
														"nodeType": "YulTypedName",
														"src": "5381:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5389:5:18",
														"nodeType": "YulTypedName",
														"src": "5389:5:18",
														"type": ""
													}
												],
												"src": "5312:423:18"
											},
											{
												"body": {
													"nativeSrc": "5815:277:18",
													"nodeType": "YulBlock",
													"src": "5815:277:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5864:83:18",
																"nodeType": "YulBlock",
																"src": "5864:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5866:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "5866:77:18"
																			},
																			"nativeSrc": "5866:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5866:79:18"
																		},
																		"nativeSrc": "5866:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5866:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5843:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "5843:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5851:4:18",
																						"nodeType": "YulLiteral",
																						"src": "5851:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5839:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "5839:3:18"
																				},
																				"nativeSrc": "5839:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "5839:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5858:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "5858:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5835:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5835:3:18"
																		},
																		"nativeSrc": "5835:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5835:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5828:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5828:6:18"
																},
																"nativeSrc": "5828:35:18",
																"nodeType": "YulFunctionCall",
																"src": "5828:35:18"
															},
															"nativeSrc": "5825:122:18",
															"nodeType": "YulIf",
															"src": "5825:122:18"
														},
														{
															"nativeSrc": "5956:34:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5956:34:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5983:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5983:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5970:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5970:12:18"
																},
																"nativeSrc": "5970:20:18",
																"nodeType": "YulFunctionCall",
																"src": "5970:20:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5960:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5960:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5999:87:18",
															"nodeType": "YulAssignment",
															"src": "5999:87:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6059:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6059:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6067:4:18",
																				"nodeType": "YulLiteral",
																				"src": "6067:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6055:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6055:3:18"
																		},
																		"nativeSrc": "6055:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6055:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6074:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "6074:6:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6082:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6082:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "6008:46:18",
																	"nodeType": "YulIdentifier",
																	"src": "6008:46:18"
																},
																"nativeSrc": "6008:78:18",
																"nodeType": "YulFunctionCall",
																"src": "6008:78:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "5999:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "5999:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "5754:338:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5793:6:18",
														"nodeType": "YulTypedName",
														"src": "5793:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5801:3:18",
														"nodeType": "YulTypedName",
														"src": "5801:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "5809:5:18",
														"nodeType": "YulTypedName",
														"src": "5809:5:18",
														"type": ""
													}
												],
												"src": "5754:338:18"
											},
											{
												"body": {
													"nativeSrc": "6190:560:18",
													"nodeType": "YulBlock",
													"src": "6190:560:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "6236:83:18",
																"nodeType": "YulBlock",
																"src": "6236:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6238:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "6238:77:18"
																			},
																			"nativeSrc": "6238:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "6238:79:18"
																		},
																		"nativeSrc": "6238:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "6238:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6211:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6211:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6220:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6220:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6207:3:18"
																		},
																		"nativeSrc": "6207:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6207:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6232:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6232:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6203:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6203:3:18"
																},
																"nativeSrc": "6203:32:18",
																"nodeType": "YulFunctionCall",
																"src": "6203:32:18"
															},
															"nativeSrc": "6200:119:18",
															"nodeType": "YulIf",
															"src": "6200:119:18"
														},
														{
															"nativeSrc": "6329:117:18",
															"nodeType": "YulBlock",
															"src": "6329:117:18",
															"statements": [
																{
																	"nativeSrc": "6344:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6344:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6358:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6358:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6348:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6348:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6373:63:18",
																	"nodeType": "YulAssignment",
																	"src": "6373:63:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6408:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6408:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6419:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6419:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6404:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6404:3:18"
																				},
																				"nativeSrc": "6404:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6404:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6428:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6428:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6383:20:18",
																			"nodeType": "YulIdentifier",
																			"src": "6383:20:18"
																		},
																		"nativeSrc": "6383:53:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6383:53:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6373:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6373:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6456:287:18",
															"nodeType": "YulBlock",
															"src": "6456:287:18",
															"statements": [
																{
																	"nativeSrc": "6471:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6471:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6502:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6502:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6513:2:18",
																						"nodeType": "YulLiteral",
																						"src": "6513:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6498:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6498:3:18"
																				},
																				"nativeSrc": "6498:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6498:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6485:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "6485:12:18"
																		},
																		"nativeSrc": "6485:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6485:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6475:6:18",
																			"nodeType": "YulTypedName",
																			"src": "6475:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6564:83:18",
																		"nodeType": "YulBlock",
																		"src": "6564:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6566:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "6566:77:18"
																					},
																					"nativeSrc": "6566:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "6566:79:18"
																				},
																				"nativeSrc": "6566:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "6566:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6536:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "6536:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6544:18:18",
																				"nodeType": "YulLiteral",
																				"src": "6544:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6533:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "6533:2:18"
																		},
																		"nativeSrc": "6533:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6533:30:18"
																	},
																	"nativeSrc": "6530:117:18",
																	"nodeType": "YulIf",
																	"src": "6530:117:18"
																},
																{
																	"nativeSrc": "6661:72:18",
																	"nodeType": "YulAssignment",
																	"src": "6661:72:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6705:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "6705:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6716:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "6716:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6701:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:18"
																				},
																				"nativeSrc": "6701:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6725:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "6725:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "6671:29:18",
																			"nodeType": "YulIdentifier",
																			"src": "6671:29:18"
																		},
																		"nativeSrc": "6671:62:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6671:62:18"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6661:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "6661:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "6098:652:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6152:9:18",
														"nodeType": "YulTypedName",
														"src": "6152:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6163:7:18",
														"nodeType": "YulTypedName",
														"src": "6163:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6175:6:18",
														"nodeType": "YulTypedName",
														"src": "6175:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6183:6:18",
														"nodeType": "YulTypedName",
														"src": "6183:6:18",
														"type": ""
													}
												],
												"src": "6098:652:18"
											},
											{
												"body": {
													"nativeSrc": "6821:53:18",
													"nodeType": "YulBlock",
													"src": "6821:53:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6838:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "6838:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6861:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "6861:5:18"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6843:17:18",
																			"nodeType": "YulIdentifier",
																			"src": "6843:17:18"
																		},
																		"nativeSrc": "6843:24:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6843:24:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6831:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6831:6:18"
																},
																"nativeSrc": "6831:37:18",
																"nodeType": "YulFunctionCall",
																"src": "6831:37:18"
															},
															"nativeSrc": "6831:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "6831:37:18"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6756:118:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6809:5:18",
														"nodeType": "YulTypedName",
														"src": "6809:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6816:3:18",
														"nodeType": "YulTypedName",
														"src": "6816:3:18",
														"type": ""
													}
												],
												"src": "6756:118:18"
											},
											{
												"body": {
													"nativeSrc": "6978:124:18",
													"nodeType": "YulBlock",
													"src": "6978:124:18",
													"statements": [
														{
															"nativeSrc": "6988:26:18",
															"nodeType": "YulAssignment",
															"src": "6988:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7000:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7000:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7011:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7011:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6996:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6996:3:18"
																},
																"nativeSrc": "6996:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6996:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6988:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6988:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7068:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7068:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7081:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7081:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7092:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7092:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7077:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7077:3:18"
																		},
																		"nativeSrc": "7077:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7077:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7024:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "7024:43:18"
																},
																"nativeSrc": "7024:71:18",
																"nodeType": "YulFunctionCall",
																"src": "7024:71:18"
															},
															"nativeSrc": "7024:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "7024:71:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6880:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6950:9:18",
														"nodeType": "YulTypedName",
														"src": "6950:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6962:6:18",
														"nodeType": "YulTypedName",
														"src": "6962:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6973:4:18",
														"nodeType": "YulTypedName",
														"src": "6973:4:18",
														"type": ""
													}
												],
												"src": "6880:222:18"
											},
											{
												"body": {
													"nativeSrc": "7167:40:18",
													"nodeType": "YulBlock",
													"src": "7167:40:18",
													"statements": [
														{
															"nativeSrc": "7178:22:18",
															"nodeType": "YulAssignment",
															"src": "7178:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7194:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7194:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7188:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7188:5:18"
																},
																"nativeSrc": "7188:12:18",
																"nodeType": "YulFunctionCall",
																"src": "7188:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7178:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7178:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7108:99:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7150:5:18",
														"nodeType": "YulTypedName",
														"src": "7150:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7160:6:18",
														"nodeType": "YulTypedName",
														"src": "7160:6:18",
														"type": ""
													}
												],
												"src": "7108:99:18"
											},
											{
												"body": {
													"nativeSrc": "7309:73:18",
													"nodeType": "YulBlock",
													"src": "7309:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7326:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7331:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7331:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7319:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7319:6:18"
																},
																"nativeSrc": "7319:19:18",
																"nodeType": "YulFunctionCall",
																"src": "7319:19:18"
															},
															"nativeSrc": "7319:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "7319:19:18"
														},
														{
															"nativeSrc": "7347:29:18",
															"nodeType": "YulAssignment",
															"src": "7347:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7366:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7366:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7371:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7371:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7362:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7362:3:18"
																},
																"nativeSrc": "7362:14:18",
																"nodeType": "YulFunctionCall",
																"src": "7362:14:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7347:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "7347:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7213:169:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7281:3:18",
														"nodeType": "YulTypedName",
														"src": "7281:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7286:6:18",
														"nodeType": "YulTypedName",
														"src": "7286:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7297:11:18",
														"nodeType": "YulTypedName",
														"src": "7297:11:18",
														"type": ""
													}
												],
												"src": "7213:169:18"
											},
											{
												"body": {
													"nativeSrc": "7450:77:18",
													"nodeType": "YulBlock",
													"src": "7450:77:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "7467:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7467:3:18"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "7472:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7472:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7477:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7477:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "7461:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7461:5:18"
																},
																"nativeSrc": "7461:23:18",
																"nodeType": "YulFunctionCall",
																"src": "7461:23:18"
															},
															"nativeSrc": "7461:23:18",
															"nodeType": "YulExpressionStatement",
															"src": "7461:23:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "7504:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "7504:3:18"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "7509:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7509:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7500:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7500:3:18"
																		},
																		"nativeSrc": "7500:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7500:16:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7518:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7518:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7493:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7493:6:18"
																},
																"nativeSrc": "7493:27:18",
																"nodeType": "YulFunctionCall",
																"src": "7493:27:18"
															},
															"nativeSrc": "7493:27:18",
															"nodeType": "YulExpressionStatement",
															"src": "7493:27:18"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "7388:139:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "7432:3:18",
														"nodeType": "YulTypedName",
														"src": "7432:3:18",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "7437:3:18",
														"nodeType": "YulTypedName",
														"src": "7437:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7442:6:18",
														"nodeType": "YulTypedName",
														"src": "7442:6:18",
														"type": ""
													}
												],
												"src": "7388:139:18"
											},
											{
												"body": {
													"nativeSrc": "7625:285:18",
													"nodeType": "YulBlock",
													"src": "7625:285:18",
													"statements": [
														{
															"nativeSrc": "7635:53:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7635:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7682:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "7682:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7649:32:18",
																	"nodeType": "YulIdentifier",
																	"src": "7649:32:18"
																},
																"nativeSrc": "7649:39:18",
																"nodeType": "YulFunctionCall",
																"src": "7649:39:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "7639:6:18",
																	"nodeType": "YulTypedName",
																	"src": "7639:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7697:78:18",
															"nodeType": "YulAssignment",
															"src": "7697:78:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7763:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7763:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7768:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7704:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "7704:58:18"
																},
																"nativeSrc": "7704:71:18",
																"nodeType": "YulFunctionCall",
																"src": "7704:71:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7697:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7697:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7823:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7823:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7830:4:18",
																				"nodeType": "YulLiteral",
																				"src": "7830:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7819:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7819:3:18"
																		},
																		"nativeSrc": "7819:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7819:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "7837:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7837:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7842:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7842:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "7784:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "7784:34:18"
																},
																"nativeSrc": "7784:65:18",
																"nodeType": "YulFunctionCall",
																"src": "7784:65:18"
															},
															"nativeSrc": "7784:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "7784:65:18"
														},
														{
															"nativeSrc": "7858:46:18",
															"nodeType": "YulAssignment",
															"src": "7858:46:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7869:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "7869:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7896:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7896:6:18"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7874:21:18",
																			"nodeType": "YulIdentifier",
																			"src": "7874:21:18"
																		},
																		"nativeSrc": "7874:29:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7874:29:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7865:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7865:3:18"
																},
																"nativeSrc": "7865:39:18",
																"nodeType": "YulFunctionCall",
																"src": "7865:39:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7858:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7858:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7533:377:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7606:5:18",
														"nodeType": "YulTypedName",
														"src": "7606:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7613:3:18",
														"nodeType": "YulTypedName",
														"src": "7613:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7621:3:18",
														"nodeType": "YulTypedName",
														"src": "7621:3:18",
														"type": ""
													}
												],
												"src": "7533:377:18"
											},
											{
												"body": {
													"nativeSrc": "8034:195:18",
													"nodeType": "YulBlock",
													"src": "8034:195:18",
													"statements": [
														{
															"nativeSrc": "8044:26:18",
															"nodeType": "YulAssignment",
															"src": "8044:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8056:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8056:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8067:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8067:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8052:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8052:3:18"
																},
																"nativeSrc": "8052:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8052:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8044:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8044:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8091:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8091:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8102:1:18",
																				"nodeType": "YulLiteral",
																				"src": "8102:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8087:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:18"
																		},
																		"nativeSrc": "8087:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8087:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8110:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "8110:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8116:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8116:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8106:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8106:3:18"
																		},
																		"nativeSrc": "8106:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8106:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8080:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:18"
																},
																"nativeSrc": "8080:47:18",
																"nodeType": "YulFunctionCall",
																"src": "8080:47:18"
															},
															"nativeSrc": "8080:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "8080:47:18"
														},
														{
															"nativeSrc": "8136:86:18",
															"nodeType": "YulAssignment",
															"src": "8136:86:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8208:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8208:6:18"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "8217:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8217:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8144:63:18",
																	"nodeType": "YulIdentifier",
																	"src": "8144:63:18"
																},
																"nativeSrc": "8144:78:18",
																"nodeType": "YulFunctionCall",
																"src": "8144:78:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8136:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8136:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7916:313:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8006:9:18",
														"nodeType": "YulTypedName",
														"src": "8006:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8018:6:18",
														"nodeType": "YulTypedName",
														"src": "8018:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8029:4:18",
														"nodeType": "YulTypedName",
														"src": "8029:4:18",
														"type": ""
													}
												],
												"src": "7916:313:18"
											},
											{
												"body": {
													"nativeSrc": "8324:28:18",
													"nodeType": "YulBlock",
													"src": "8324:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8341:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8341:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8344:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8344:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8334:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8334:6:18"
																},
																"nativeSrc": "8334:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8334:12:18"
															},
															"nativeSrc": "8334:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "8334:12:18"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "8235:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8235:117:18"
											},
											{
												"body": {
													"nativeSrc": "8447:28:18",
													"nodeType": "YulBlock",
													"src": "8447:28:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8464:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8464:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8467:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8467:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8457:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8457:6:18"
																},
																"nativeSrc": "8457:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8457:12:18"
															},
															"nativeSrc": "8457:12:18",
															"nodeType": "YulExpressionStatement",
															"src": "8457:12:18"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "8358:117:18",
												"nodeType": "YulFunctionDefinition",
												"src": "8358:117:18"
											},
											{
												"body": {
													"nativeSrc": "8588:478:18",
													"nodeType": "YulBlock",
													"src": "8588:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "8637:83:18",
																"nodeType": "YulBlock",
																"src": "8637:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8639:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8639:77:18"
																			},
																			"nativeSrc": "8639:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8639:79:18"
																		},
																		"nativeSrc": "8639:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8639:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8616:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8616:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8624:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8624:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8612:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8612:3:18"
																				},
																				"nativeSrc": "8612:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8612:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8631:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8631:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8608:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8608:3:18"
																		},
																		"nativeSrc": "8608:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8608:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8601:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8601:6:18"
																},
																"nativeSrc": "8601:35:18",
																"nodeType": "YulFunctionCall",
																"src": "8601:35:18"
															},
															"nativeSrc": "8598:122:18",
															"nodeType": "YulIf",
															"src": "8598:122:18"
														},
														{
															"nativeSrc": "8729:30:18",
															"nodeType": "YulAssignment",
															"src": "8729:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8752:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8752:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8739:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "8739:12:18"
																},
																"nativeSrc": "8739:20:18",
																"nodeType": "YulFunctionCall",
																"src": "8739:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8729:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8729:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8802:83:18",
																"nodeType": "YulBlock",
																"src": "8802:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "8804:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8804:77:18"
																			},
																			"nativeSrc": "8804:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8804:79:18"
																		},
																		"nativeSrc": "8804:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8804:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8774:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8774:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8782:18:18",
																		"nodeType": "YulLiteral",
																		"src": "8782:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8771:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8771:2:18"
																},
																"nativeSrc": "8771:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8771:30:18"
															},
															"nativeSrc": "8768:117:18",
															"nodeType": "YulIf",
															"src": "8768:117:18"
														},
														{
															"nativeSrc": "8894:29:18",
															"nodeType": "YulAssignment",
															"src": "8894:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8910:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "8910:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8918:4:18",
																		"nodeType": "YulLiteral",
																		"src": "8918:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8906:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8906:3:18"
																},
																"nativeSrc": "8906:17:18",
																"nodeType": "YulFunctionCall",
																"src": "8906:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "8894:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "8894:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8977:83:18",
																"nodeType": "YulBlock",
																"src": "8977:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "8979:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "8979:77:18"
																			},
																			"nativeSrc": "8979:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8979:79:18"
																		},
																		"nativeSrc": "8979:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8979:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "8942:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "8942:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "8956:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "8956:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8964:4:18",
																						"nodeType": "YulLiteral",
																						"src": "8964:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "8952:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "8952:3:18"
																				},
																				"nativeSrc": "8952:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "8952:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8938:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8938:3:18"
																		},
																		"nativeSrc": "8938:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8938:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8972:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "8972:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8935:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8935:2:18"
																},
																"nativeSrc": "8935:41:18",
																"nodeType": "YulFunctionCall",
																"src": "8935:41:18"
															},
															"nativeSrc": "8932:128:18",
															"nodeType": "YulIf",
															"src": "8932:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
												"nativeSrc": "8498:568:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8555:6:18",
														"nodeType": "YulTypedName",
														"src": "8555:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8563:3:18",
														"nodeType": "YulTypedName",
														"src": "8563:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "8571:8:18",
														"nodeType": "YulTypedName",
														"src": "8571:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8581:6:18",
														"nodeType": "YulTypedName",
														"src": "8581:6:18",
														"type": ""
													}
												],
												"src": "8498:568:18"
											},
											{
												"body": {
													"nativeSrc": "9177:478:18",
													"nodeType": "YulBlock",
													"src": "9177:478:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9226:83:18",
																"nodeType": "YulBlock",
																"src": "9226:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9228:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9228:77:18"
																			},
																			"nativeSrc": "9228:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9228:79:18"
																		},
																		"nativeSrc": "9228:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9228:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9205:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9205:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9213:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9213:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9201:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9201:3:18"
																				},
																				"nativeSrc": "9201:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9201:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9220:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "9220:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9197:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9197:3:18"
																		},
																		"nativeSrc": "9197:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9197:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9190:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9190:6:18"
																},
																"nativeSrc": "9190:35:18",
																"nodeType": "YulFunctionCall",
																"src": "9190:35:18"
															},
															"nativeSrc": "9187:122:18",
															"nodeType": "YulIf",
															"src": "9187:122:18"
														},
														{
															"nativeSrc": "9318:30:18",
															"nodeType": "YulAssignment",
															"src": "9318:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9341:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9341:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9328:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "9328:12:18"
																},
																"nativeSrc": "9328:20:18",
																"nodeType": "YulFunctionCall",
																"src": "9328:20:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9318:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9318:6:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9391:83:18",
																"nodeType": "YulBlock",
																"src": "9391:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "9393:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9393:77:18"
																			},
																			"nativeSrc": "9393:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9393:79:18"
																		},
																		"nativeSrc": "9393:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9393:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "9363:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9363:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9371:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9371:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9360:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9360:2:18"
																},
																"nativeSrc": "9360:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9360:30:18"
															},
															"nativeSrc": "9357:117:18",
															"nodeType": "YulIf",
															"src": "9357:117:18"
														},
														{
															"nativeSrc": "9483:29:18",
															"nodeType": "YulAssignment",
															"src": "9483:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9499:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "9499:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9507:4:18",
																		"nodeType": "YulLiteral",
																		"src": "9507:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9495:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9495:3:18"
																},
																"nativeSrc": "9495:17:18",
																"nodeType": "YulFunctionCall",
																"src": "9495:17:18"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "9483:8:18",
																	"nodeType": "YulIdentifier",
																	"src": "9483:8:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9566:83:18",
																"nodeType": "YulBlock",
																"src": "9566:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "9568:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9568:77:18"
																			},
																			"nativeSrc": "9568:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9568:79:18"
																		},
																		"nativeSrc": "9568:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9568:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "9531:8:18",
																				"nodeType": "YulIdentifier",
																				"src": "9531:8:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "9545:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "9545:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9553:4:18",
																						"nodeType": "YulLiteral",
																						"src": "9553:4:18",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "9541:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9541:3:18"
																				},
																				"nativeSrc": "9541:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9541:17:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9527:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:18"
																		},
																		"nativeSrc": "9527:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9527:32:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9561:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9561:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9524:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9524:2:18"
																},
																"nativeSrc": "9524:41:18",
																"nodeType": "YulFunctionCall",
																"src": "9524:41:18"
															},
															"nativeSrc": "9521:128:18",
															"nodeType": "YulIf",
															"src": "9521:128:18"
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint16_$dyn_calldata_ptr",
												"nativeSrc": "9088:567:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9144:6:18",
														"nodeType": "YulTypedName",
														"src": "9144:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9152:3:18",
														"nodeType": "YulTypedName",
														"src": "9152:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "9160:8:18",
														"nodeType": "YulTypedName",
														"src": "9160:8:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "9170:6:18",
														"nodeType": "YulTypedName",
														"src": "9170:6:18",
														"type": ""
													}
												],
												"src": "9088:567:18"
											},
											{
												"body": {
													"nativeSrc": "9813:780:18",
													"nodeType": "YulBlock",
													"src": "9813:780:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9859:83:18",
																"nodeType": "YulBlock",
																"src": "9859:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9861:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "9861:77:18"
																			},
																			"nativeSrc": "9861:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9861:79:18"
																		},
																		"nativeSrc": "9861:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9861:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9834:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "9834:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9843:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9843:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9830:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9830:3:18"
																		},
																		"nativeSrc": "9830:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9830:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9855:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9855:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9826:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9826:3:18"
																},
																"nativeSrc": "9826:32:18",
																"nodeType": "YulFunctionCall",
																"src": "9826:32:18"
															},
															"nativeSrc": "9823:119:18",
															"nodeType": "YulIf",
															"src": "9823:119:18"
														},
														{
															"nativeSrc": "9952:312:18",
															"nodeType": "YulBlock",
															"src": "9952:312:18",
															"statements": [
																{
																	"nativeSrc": "9967:45:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9967:45:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9998:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "9998:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10009:1:18",
																						"nodeType": "YulLiteral",
																						"src": "10009:1:18",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9994:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9994:3:18"
																				},
																				"nativeSrc": "9994:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9994:17:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9981:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "9981:12:18"
																		},
																		"nativeSrc": "9981:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9981:31:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9971:6:18",
																			"nodeType": "YulTypedName",
																			"src": "9971:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10059:83:18",
																		"nodeType": "YulBlock",
																		"src": "10059:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10061:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "10061:77:18"
																					},
																					"nativeSrc": "10061:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10061:79:18"
																				},
																				"nativeSrc": "10061:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "10061:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10031:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10031:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10039:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10039:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10028:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10028:2:18"
																		},
																		"nativeSrc": "10028:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10028:30:18"
																	},
																	"nativeSrc": "10025:117:18",
																	"nodeType": "YulIf",
																	"src": "10025:117:18"
																},
																{
																	"nativeSrc": "10156:98:18",
																	"nodeType": "YulAssignment",
																	"src": "10156:98:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10226:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10226:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10237:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10237:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10222:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10222:3:18"
																				},
																				"nativeSrc": "10222:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10222:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10246:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10246:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_address_$dyn_calldata_ptr",
																			"nativeSrc": "10174:47:18",
																			"nodeType": "YulIdentifier",
																			"src": "10174:47:18"
																		},
																		"nativeSrc": "10174:80:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10174:80:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10156:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10156:6:18"
																		},
																		{
																			"name": "value1",
																			"nativeSrc": "10164:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10164:6:18"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10274:312:18",
															"nodeType": "YulBlock",
															"src": "10274:312:18",
															"statements": [
																{
																	"nativeSrc": "10289:46:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10289:46:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10320:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10320:9:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10331:2:18",
																						"nodeType": "YulLiteral",
																						"src": "10331:2:18",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10316:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10316:3:18"
																				},
																				"nativeSrc": "10316:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10316:18:18"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10303:12:18",
																			"nodeType": "YulIdentifier",
																			"src": "10303:12:18"
																		},
																		"nativeSrc": "10303:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10303:32:18"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10293:6:18",
																			"nodeType": "YulTypedName",
																			"src": "10293:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10382:83:18",
																		"nodeType": "YulBlock",
																		"src": "10382:83:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10384:77:18",
																						"nodeType": "YulIdentifier",
																						"src": "10384:77:18"
																					},
																					"nativeSrc": "10384:79:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10384:79:18"
																				},
																				"nativeSrc": "10384:79:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "10384:79:18"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10354:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10354:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10362:18:18",
																				"nodeType": "YulLiteral",
																				"src": "10362:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10351:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "10351:2:18"
																		},
																		"nativeSrc": "10351:30:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10351:30:18"
																	},
																	"nativeSrc": "10348:117:18",
																	"nodeType": "YulIf",
																	"src": "10348:117:18"
																},
																{
																	"nativeSrc": "10479:97:18",
																	"nodeType": "YulAssignment",
																	"src": "10479:97:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10548:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "10548:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10559:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "10559:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10544:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "10544:3:18"
																				},
																				"nativeSrc": "10544:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "10544:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10568:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "10568:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint16_$dyn_calldata_ptr",
																			"nativeSrc": "10497:46:18",
																			"nodeType": "YulIdentifier",
																			"src": "10497:46:18"
																		},
																		"nativeSrc": "10497:79:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10497:79:18"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10479:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10479:6:18"
																		},
																		{
																			"name": "value3",
																			"nativeSrc": "10487:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "10487:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr",
												"nativeSrc": "9661:932:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9759:9:18",
														"nodeType": "YulTypedName",
														"src": "9759:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9770:7:18",
														"nodeType": "YulTypedName",
														"src": "9770:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9782:6:18",
														"nodeType": "YulTypedName",
														"src": "9782:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9790:6:18",
														"nodeType": "YulTypedName",
														"src": "9790:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9798:6:18",
														"nodeType": "YulTypedName",
														"src": "9798:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9806:6:18",
														"nodeType": "YulTypedName",
														"src": "9806:6:18",
														"type": ""
													}
												],
												"src": "9661:932:18"
											},
											{
												"body": {
													"nativeSrc": "10705:59:18",
													"nodeType": "YulBlock",
													"src": "10705:59:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10727:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10727:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10735:1:18",
																				"nodeType": "YulLiteral",
																				"src": "10735:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10723:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10723:3:18"
																		},
																		"nativeSrc": "10723:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10723:14:18"
																	},
																	{
																		"hexValue": "496e76616c69642061646472657373",
																		"kind": "string",
																		"nativeSrc": "10739:17:18",
																		"nodeType": "YulLiteral",
																		"src": "10739:17:18",
																		"type": "",
																		"value": "Invalid address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10716:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10716:6:18"
																},
																"nativeSrc": "10716:41:18",
																"nodeType": "YulFunctionCall",
																"src": "10716:41:18"
															},
															"nativeSrc": "10716:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "10716:41:18"
														}
													]
												},
												"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
												"nativeSrc": "10599:165:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10697:6:18",
														"nodeType": "YulTypedName",
														"src": "10697:6:18",
														"type": ""
													}
												],
												"src": "10599:165:18"
											},
											{
												"body": {
													"nativeSrc": "10916:220:18",
													"nodeType": "YulBlock",
													"src": "10916:220:18",
													"statements": [
														{
															"nativeSrc": "10926:74:18",
															"nodeType": "YulAssignment",
															"src": "10926:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10992:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10992:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10997:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10997:2:18",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10933:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "10933:58:18"
																},
																"nativeSrc": "10933:67:18",
																"nodeType": "YulFunctionCall",
																"src": "10933:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10926:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10926:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11098:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11098:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																	"nativeSrc": "11009:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "11009:88:18"
																},
																"nativeSrc": "11009:93:18",
																"nodeType": "YulFunctionCall",
																"src": "11009:93:18"
															},
															"nativeSrc": "11009:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "11009:93:18"
														},
														{
															"nativeSrc": "11111:19:18",
															"nodeType": "YulAssignment",
															"src": "11111:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11122:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11122:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11127:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11127:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11118:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11118:3:18"
																},
																"nativeSrc": "11118:12:18",
																"nodeType": "YulFunctionCall",
																"src": "11118:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11111:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11111:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10770:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10904:3:18",
														"nodeType": "YulTypedName",
														"src": "10904:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10912:3:18",
														"nodeType": "YulTypedName",
														"src": "10912:3:18",
														"type": ""
													}
												],
												"src": "10770:366:18"
											},
											{
												"body": {
													"nativeSrc": "11313:248:18",
													"nodeType": "YulBlock",
													"src": "11313:248:18",
													"statements": [
														{
															"nativeSrc": "11323:26:18",
															"nodeType": "YulAssignment",
															"src": "11323:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11335:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "11335:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11346:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11346:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11331:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11331:3:18"
																},
																"nativeSrc": "11331:18:18",
																"nodeType": "YulFunctionCall",
																"src": "11331:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11323:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11323:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11370:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11370:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11381:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11381:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11366:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11366:3:18"
																		},
																		"nativeSrc": "11366:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11366:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11389:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "11389:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11395:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11395:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11385:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11385:3:18"
																		},
																		"nativeSrc": "11385:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11385:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11359:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11359:6:18"
																},
																"nativeSrc": "11359:47:18",
																"nodeType": "YulFunctionCall",
																"src": "11359:47:18"
															},
															"nativeSrc": "11359:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "11359:47:18"
														},
														{
															"nativeSrc": "11415:139:18",
															"nodeType": "YulAssignment",
															"src": "11415:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11549:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11549:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11423:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "11423:124:18"
																},
																"nativeSrc": "11423:131:18",
																"nodeType": "YulFunctionCall",
																"src": "11423:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11415:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11415:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11142:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11293:9:18",
														"nodeType": "YulTypedName",
														"src": "11293:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11308:4:18",
														"nodeType": "YulTypedName",
														"src": "11308:4:18",
														"type": ""
													}
												],
												"src": "11142:419:18"
											},
											{
												"body": {
													"nativeSrc": "11607:76:18",
													"nodeType": "YulBlock",
													"src": "11607:76:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11661:16:18",
																"nodeType": "YulBlock",
																"src": "11661:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11670:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11670:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11673:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11673:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11663:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "11663:6:18"
																			},
																			"nativeSrc": "11663:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11663:12:18"
																		},
																		"nativeSrc": "11663:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11663:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11630:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "11630:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11652:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "11652:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "11637:14:18",
																					"nodeType": "YulIdentifier",
																					"src": "11637:14:18"
																				},
																				"nativeSrc": "11637:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11637:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "11627:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "11627:2:18"
																		},
																		"nativeSrc": "11627:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11627:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11620:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "11620:6:18"
																},
																"nativeSrc": "11620:40:18",
																"nodeType": "YulFunctionCall",
																"src": "11620:40:18"
															},
															"nativeSrc": "11617:60:18",
															"nodeType": "YulIf",
															"src": "11617:60:18"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "11567:116:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11600:5:18",
														"nodeType": "YulTypedName",
														"src": "11600:5:18",
														"type": ""
													}
												],
												"src": "11567:116:18"
											},
											{
												"body": {
													"nativeSrc": "11749:77:18",
													"nodeType": "YulBlock",
													"src": "11749:77:18",
													"statements": [
														{
															"nativeSrc": "11759:22:18",
															"nodeType": "YulAssignment",
															"src": "11759:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11774:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11774:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11768:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11768:5:18"
																},
																"nativeSrc": "11768:13:18",
																"nodeType": "YulFunctionCall",
																"src": "11768:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11759:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11759:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11814:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "11814:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "11790:23:18",
																	"nodeType": "YulIdentifier",
																	"src": "11790:23:18"
																},
																"nativeSrc": "11790:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11790:30:18"
															},
															"nativeSrc": "11790:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "11790:30:18"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "11689:137:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11727:6:18",
														"nodeType": "YulTypedName",
														"src": "11727:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11735:3:18",
														"nodeType": "YulTypedName",
														"src": "11735:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11743:5:18",
														"nodeType": "YulTypedName",
														"src": "11743:5:18",
														"type": ""
													}
												],
												"src": "11689:137:18"
											},
											{
												"body": {
													"nativeSrc": "11906:271:18",
													"nodeType": "YulBlock",
													"src": "11906:271:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "11952:83:18",
																"nodeType": "YulBlock",
																"src": "11952:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11954:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "11954:77:18"
																			},
																			"nativeSrc": "11954:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11954:79:18"
																		},
																		"nativeSrc": "11954:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11954:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11927:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "11927:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11936:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "11936:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11923:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11923:3:18"
																		},
																		"nativeSrc": "11923:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11923:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11948:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11948:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11919:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "11919:3:18"
																},
																"nativeSrc": "11919:32:18",
																"nodeType": "YulFunctionCall",
																"src": "11919:32:18"
															},
															"nativeSrc": "11916:119:18",
															"nodeType": "YulIf",
															"src": "11916:119:18"
														},
														{
															"nativeSrc": "12045:125:18",
															"nodeType": "YulBlock",
															"src": "12045:125:18",
															"statements": [
																{
																	"nativeSrc": "12060:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12060:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12074:1:18",
																		"nodeType": "YulLiteral",
																		"src": "12074:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12064:6:18",
																			"nodeType": "YulTypedName",
																			"src": "12064:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12089:71:18",
																	"nodeType": "YulAssignment",
																	"src": "12089:71:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12132:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "12132:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12143:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12143:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12128:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "12128:3:18"
																				},
																				"nativeSrc": "12128:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "12128:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12152:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "12152:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "12099:28:18",
																			"nodeType": "YulIdentifier",
																			"src": "12099:28:18"
																		},
																		"nativeSrc": "12099:61:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12099:61:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12089:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "12089:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "11832:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11876:9:18",
														"nodeType": "YulTypedName",
														"src": "11876:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11887:7:18",
														"nodeType": "YulTypedName",
														"src": "11887:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11899:6:18",
														"nodeType": "YulTypedName",
														"src": "11899:6:18",
														"type": ""
													}
												],
												"src": "11832:345:18"
											},
											{
												"body": {
													"nativeSrc": "12289:126:18",
													"nodeType": "YulBlock",
													"src": "12289:126:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12311:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12311:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12319:1:18",
																				"nodeType": "YulLiteral",
																				"src": "12319:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12307:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12307:3:18"
																		},
																		"nativeSrc": "12307:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12307:14:18"
																	},
																	{
																		"hexValue": "54657374616d656e746f206a61206578697374652e2055736520612066756e63",
																		"kind": "string",
																		"nativeSrc": "12323:34:18",
																		"nodeType": "YulLiteral",
																		"src": "12323:34:18",
																		"type": "",
																		"value": "Testamento ja existe. Use a func"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12300:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12300:6:18"
																},
																"nativeSrc": "12300:58:18",
																"nodeType": "YulFunctionCall",
																"src": "12300:58:18"
															},
															"nativeSrc": "12300:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "12300:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12379:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "12379:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12387:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12387:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12375:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12375:3:18"
																		},
																		"nativeSrc": "12375:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12375:15:18"
																	},
																	{
																		"hexValue": "616f2064652065646963616f2e",
																		"kind": "string",
																		"nativeSrc": "12392:15:18",
																		"nodeType": "YulLiteral",
																		"src": "12392:15:18",
																		"type": "",
																		"value": "ao de edicao."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12368:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12368:6:18"
																},
																"nativeSrc": "12368:40:18",
																"nodeType": "YulFunctionCall",
																"src": "12368:40:18"
															},
															"nativeSrc": "12368:40:18",
															"nodeType": "YulExpressionStatement",
															"src": "12368:40:18"
														}
													]
												},
												"name": "store_literal_in_memory_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
												"nativeSrc": "12183:232:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12281:6:18",
														"nodeType": "YulTypedName",
														"src": "12281:6:18",
														"type": ""
													}
												],
												"src": "12183:232:18"
											},
											{
												"body": {
													"nativeSrc": "12567:220:18",
													"nodeType": "YulBlock",
													"src": "12567:220:18",
													"statements": [
														{
															"nativeSrc": "12577:74:18",
															"nodeType": "YulAssignment",
															"src": "12577:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12643:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12643:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12648:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12648:2:18",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12584:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "12584:58:18"
																},
																"nativeSrc": "12584:67:18",
																"nodeType": "YulFunctionCall",
																"src": "12584:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12577:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12577:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12749:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12749:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
																	"nativeSrc": "12660:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "12660:88:18"
																},
																"nativeSrc": "12660:93:18",
																"nodeType": "YulFunctionCall",
																"src": "12660:93:18"
															},
															"nativeSrc": "12660:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "12660:93:18"
														},
														{
															"nativeSrc": "12762:19:18",
															"nodeType": "YulAssignment",
															"src": "12762:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12773:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "12773:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12778:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12778:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12769:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12769:3:18"
																},
																"nativeSrc": "12769:12:18",
																"nodeType": "YulFunctionCall",
																"src": "12769:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12762:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12762:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12421:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12555:3:18",
														"nodeType": "YulTypedName",
														"src": "12555:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12563:3:18",
														"nodeType": "YulTypedName",
														"src": "12563:3:18",
														"type": ""
													}
												],
												"src": "12421:366:18"
											},
											{
												"body": {
													"nativeSrc": "12964:248:18",
													"nodeType": "YulBlock",
													"src": "12964:248:18",
													"statements": [
														{
															"nativeSrc": "12974:26:18",
															"nodeType": "YulAssignment",
															"src": "12974:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12986:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12986:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12997:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12997:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12982:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12982:3:18"
																},
																"nativeSrc": "12982:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12982:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12974:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12974:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13021:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13021:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13032:1:18",
																				"nodeType": "YulLiteral",
																				"src": "13032:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13017:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13017:3:18"
																		},
																		"nativeSrc": "13017:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13017:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13040:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "13040:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13046:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13046:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13036:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13036:3:18"
																		},
																		"nativeSrc": "13036:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13036:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13010:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13010:6:18"
																},
																"nativeSrc": "13010:47:18",
																"nodeType": "YulFunctionCall",
																"src": "13010:47:18"
															},
															"nativeSrc": "13010:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "13010:47:18"
														},
														{
															"nativeSrc": "13066:139:18",
															"nodeType": "YulAssignment",
															"src": "13066:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13200:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "13200:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13074:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "13074:124:18"
																},
																"nativeSrc": "13074:131:18",
																"nodeType": "YulFunctionCall",
																"src": "13074:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13066:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13066:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12793:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12944:9:18",
														"nodeType": "YulTypedName",
														"src": "12944:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12959:4:18",
														"nodeType": "YulTypedName",
														"src": "12959:4:18",
														"type": ""
													}
												],
												"src": "12793:419:18"
											},
											{
												"body": {
													"nativeSrc": "13271:32:18",
													"nodeType": "YulBlock",
													"src": "13271:32:18",
													"statements": [
														{
															"nativeSrc": "13281:16:18",
															"nodeType": "YulAssignment",
															"src": "13281:16:18",
															"value": {
																"name": "value",
																"nativeSrc": "13292:5:18",
																"nodeType": "YulIdentifier",
																"src": "13292:5:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13281:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "13281:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "13218:85:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13253:5:18",
														"nodeType": "YulTypedName",
														"src": "13253:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13263:7:18",
														"nodeType": "YulTypedName",
														"src": "13263:7:18",
														"type": ""
													}
												],
												"src": "13218:85:18"
											},
											{
												"body": {
													"nativeSrc": "13353:57:18",
													"nodeType": "YulBlock",
													"src": "13353:57:18",
													"statements": [
														{
															"nativeSrc": "13363:41:18",
															"nodeType": "YulAssignment",
															"src": "13363:41:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13378:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "13378:5:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13385:18:18",
																		"nodeType": "YulLiteral",
																		"src": "13385:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13374:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13374:3:18"
																},
																"nativeSrc": "13374:30:18",
																"nodeType": "YulFunctionCall",
																"src": "13374:30:18"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "13363:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "13363:7:18"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "13309:101:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13335:5:18",
														"nodeType": "YulTypedName",
														"src": "13335:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "13345:7:18",
														"nodeType": "YulTypedName",
														"src": "13345:7:18",
														"type": ""
													}
												],
												"src": "13309:101:18"
											},
											{
												"body": {
													"nativeSrc": "13448:28:18",
													"nodeType": "YulBlock",
													"src": "13448:28:18",
													"statements": [
														{
															"nativeSrc": "13458:12:18",
															"nodeType": "YulAssignment",
															"src": "13458:12:18",
															"value": {
																"name": "value",
																"nativeSrc": "13465:5:18",
																"nodeType": "YulIdentifier",
																"src": "13465:5:18"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13458:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13458:3:18"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "13416:60:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13434:5:18",
														"nodeType": "YulTypedName",
														"src": "13434:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13444:3:18",
														"nodeType": "YulTypedName",
														"src": "13444:3:18",
														"type": ""
													}
												],
												"src": "13416:60:18"
											},
											{
												"body": {
													"nativeSrc": "13549:89:18",
													"nodeType": "YulBlock",
													"src": "13549:89:18",
													"statements": [
														{
															"nativeSrc": "13559:73:18",
															"nodeType": "YulAssignment",
															"src": "13559:73:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13624:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "13624:5:18"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "13598:25:18",
																					"nodeType": "YulIdentifier",
																					"src": "13598:25:18"
																				},
																				"nativeSrc": "13598:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "13598:32:18"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13589:8:18",
																			"nodeType": "YulIdentifier",
																			"src": "13589:8:18"
																		},
																		"nativeSrc": "13589:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13589:42:18"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "13572:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "13572:16:18"
																},
																"nativeSrc": "13572:60:18",
																"nodeType": "YulFunctionCall",
																"src": "13572:60:18"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13559:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "13559:9:18"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "13482:156:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13529:5:18",
														"nodeType": "YulTypedName",
														"src": "13529:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13539:9:18",
														"nodeType": "YulTypedName",
														"src": "13539:9:18",
														"type": ""
													}
												],
												"src": "13482:156:18"
											},
											{
												"body": {
													"nativeSrc": "13716:73:18",
													"nodeType": "YulBlock",
													"src": "13716:73:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13733:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "13733:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13776:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "13776:5:18"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "13738:37:18",
																			"nodeType": "YulIdentifier",
																			"src": "13738:37:18"
																		},
																		"nativeSrc": "13738:44:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13738:44:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13726:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13726:6:18"
																},
																"nativeSrc": "13726:57:18",
																"nodeType": "YulFunctionCall",
																"src": "13726:57:18"
															},
															"nativeSrc": "13726:57:18",
															"nodeType": "YulExpressionStatement",
															"src": "13726:57:18"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "13644:145:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13704:5:18",
														"nodeType": "YulTypedName",
														"src": "13704:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13711:3:18",
														"nodeType": "YulTypedName",
														"src": "13711:3:18",
														"type": ""
													}
												],
												"src": "13644:145:18"
											},
											{
												"body": {
													"nativeSrc": "13900:131:18",
													"nodeType": "YulBlock",
													"src": "13900:131:18",
													"statements": [
														{
															"nativeSrc": "13910:26:18",
															"nodeType": "YulAssignment",
															"src": "13910:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13922:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13922:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13933:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13933:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13918:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13918:3:18"
																},
																"nativeSrc": "13918:18:18",
																"nodeType": "YulFunctionCall",
																"src": "13918:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13910:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "13910:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13997:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13997:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14010:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14010:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14021:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14021:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14006:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14006:3:18"
																		},
																		"nativeSrc": "14006:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14006:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "13946:50:18",
																	"nodeType": "YulIdentifier",
																	"src": "13946:50:18"
																},
																"nativeSrc": "13946:78:18",
																"nodeType": "YulFunctionCall",
																"src": "13946:78:18"
															},
															"nativeSrc": "13946:78:18",
															"nodeType": "YulExpressionStatement",
															"src": "13946:78:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "13795:236:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13872:9:18",
														"nodeType": "YulTypedName",
														"src": "13872:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13884:6:18",
														"nodeType": "YulTypedName",
														"src": "13884:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13895:4:18",
														"nodeType": "YulTypedName",
														"src": "13895:4:18",
														"type": ""
													}
												],
												"src": "13795:236:18"
											},
											{
												"body": {
													"nativeSrc": "14143:116:18",
													"nodeType": "YulBlock",
													"src": "14143:116:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14165:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14165:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14173:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14173:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14161:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14161:3:18"
																		},
																		"nativeSrc": "14161:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14161:14:18"
																	},
																	{
																		"hexValue": "637265617465496e6865726974616e636528292c2076616c6f7220696e76616c",
																		"kind": "string",
																		"nativeSrc": "14177:34:18",
																		"nodeType": "YulLiteral",
																		"src": "14177:34:18",
																		"type": "",
																		"value": "createInheritance(), valor inval"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14154:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14154:6:18"
																},
																"nativeSrc": "14154:58:18",
																"nodeType": "YulFunctionCall",
																"src": "14154:58:18"
															},
															"nativeSrc": "14154:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "14154:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14233:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14233:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14241:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14241:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14229:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14229:3:18"
																		},
																		"nativeSrc": "14229:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14229:15:18"
																	},
																	{
																		"hexValue": "69646f",
																		"kind": "string",
																		"nativeSrc": "14246:5:18",
																		"nodeType": "YulLiteral",
																		"src": "14246:5:18",
																		"type": "",
																		"value": "ido"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14222:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14222:6:18"
																},
																"nativeSrc": "14222:30:18",
																"nodeType": "YulFunctionCall",
																"src": "14222:30:18"
															},
															"nativeSrc": "14222:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "14222:30:18"
														}
													]
												},
												"name": "store_literal_in_memory_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04",
												"nativeSrc": "14037:222:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14135:6:18",
														"nodeType": "YulTypedName",
														"src": "14135:6:18",
														"type": ""
													}
												],
												"src": "14037:222:18"
											},
											{
												"body": {
													"nativeSrc": "14411:220:18",
													"nodeType": "YulBlock",
													"src": "14411:220:18",
													"statements": [
														{
															"nativeSrc": "14421:74:18",
															"nodeType": "YulAssignment",
															"src": "14421:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14487:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14487:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14492:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14492:2:18",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14428:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "14428:58:18"
																},
																"nativeSrc": "14428:67:18",
																"nodeType": "YulFunctionCall",
																"src": "14428:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14421:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14421:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14593:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14593:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04",
																	"nativeSrc": "14504:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "14504:88:18"
																},
																"nativeSrc": "14504:93:18",
																"nodeType": "YulFunctionCall",
																"src": "14504:93:18"
															},
															"nativeSrc": "14504:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "14504:93:18"
														},
														{
															"nativeSrc": "14606:19:18",
															"nodeType": "YulAssignment",
															"src": "14606:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14617:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "14617:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14622:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14622:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14613:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:18"
																},
																"nativeSrc": "14613:12:18",
																"nodeType": "YulFunctionCall",
																"src": "14613:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14606:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14606:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14265:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14399:3:18",
														"nodeType": "YulTypedName",
														"src": "14399:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14407:3:18",
														"nodeType": "YulTypedName",
														"src": "14407:3:18",
														"type": ""
													}
												],
												"src": "14265:366:18"
											},
											{
												"body": {
													"nativeSrc": "14808:248:18",
													"nodeType": "YulBlock",
													"src": "14808:248:18",
													"statements": [
														{
															"nativeSrc": "14818:26:18",
															"nodeType": "YulAssignment",
															"src": "14818:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14830:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14830:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14841:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14841:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14826:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14826:3:18"
																},
																"nativeSrc": "14826:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14826:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14818:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14818:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14865:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14865:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14876:1:18",
																				"nodeType": "YulLiteral",
																				"src": "14876:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14861:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14861:3:18"
																		},
																		"nativeSrc": "14861:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14861:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14884:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "14884:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14890:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14890:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14880:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14880:3:18"
																		},
																		"nativeSrc": "14880:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14880:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14854:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14854:6:18"
																},
																"nativeSrc": "14854:47:18",
																"nodeType": "YulFunctionCall",
																"src": "14854:47:18"
															},
															"nativeSrc": "14854:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "14854:47:18"
														},
														{
															"nativeSrc": "14910:139:18",
															"nodeType": "YulAssignment",
															"src": "14910:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15044:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "15044:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14918:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "14918:124:18"
																},
																"nativeSrc": "14918:131:18",
																"nodeType": "YulFunctionCall",
																"src": "14918:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14910:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14910:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14637:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14788:9:18",
														"nodeType": "YulTypedName",
														"src": "14788:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14803:4:18",
														"nodeType": "YulTypedName",
														"src": "14803:4:18",
														"type": ""
													}
												],
												"src": "14637:419:18"
											},
											{
												"body": {
													"nativeSrc": "15168:123:18",
													"nodeType": "YulBlock",
													"src": "15168:123:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15190:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15190:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15198:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15198:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15186:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15186:3:18"
																		},
																		"nativeSrc": "15186:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15186:14:18"
																	},
																	{
																		"hexValue": "637265617465496e6865726974616e636528292c2061646963696f6e65206f73",
																		"kind": "string",
																		"nativeSrc": "15202:34:18",
																		"nodeType": "YulLiteral",
																		"src": "15202:34:18",
																		"type": "",
																		"value": "createInheritance(), adicione os"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15179:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15179:6:18"
																},
																"nativeSrc": "15179:58:18",
																"nodeType": "YulFunctionCall",
																"src": "15179:58:18"
															},
															"nativeSrc": "15179:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "15179:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15258:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15258:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15266:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15266:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15254:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15254:3:18"
																		},
																		"nativeSrc": "15254:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15254:15:18"
																	},
																	{
																		"hexValue": "20686572646569726f73",
																		"kind": "string",
																		"nativeSrc": "15271:12:18",
																		"nodeType": "YulLiteral",
																		"src": "15271:12:18",
																		"type": "",
																		"value": " herdeiros"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15247:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15247:6:18"
																},
																"nativeSrc": "15247:37:18",
																"nodeType": "YulFunctionCall",
																"src": "15247:37:18"
															},
															"nativeSrc": "15247:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "15247:37:18"
														}
													]
												},
												"name": "store_literal_in_memory_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97",
												"nativeSrc": "15062:229:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15160:6:18",
														"nodeType": "YulTypedName",
														"src": "15160:6:18",
														"type": ""
													}
												],
												"src": "15062:229:18"
											},
											{
												"body": {
													"nativeSrc": "15443:220:18",
													"nodeType": "YulBlock",
													"src": "15443:220:18",
													"statements": [
														{
															"nativeSrc": "15453:74:18",
															"nodeType": "YulAssignment",
															"src": "15453:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15519:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15519:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15524:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15524:2:18",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15460:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "15460:58:18"
																},
																"nativeSrc": "15460:67:18",
																"nodeType": "YulFunctionCall",
																"src": "15460:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15453:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15453:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15625:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15625:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97",
																	"nativeSrc": "15536:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "15536:88:18"
																},
																"nativeSrc": "15536:93:18",
																"nodeType": "YulFunctionCall",
																"src": "15536:93:18"
															},
															"nativeSrc": "15536:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "15536:93:18"
														},
														{
															"nativeSrc": "15638:19:18",
															"nodeType": "YulAssignment",
															"src": "15638:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15649:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15649:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15654:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15654:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15645:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:18"
																},
																"nativeSrc": "15645:12:18",
																"nodeType": "YulFunctionCall",
																"src": "15645:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15638:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15638:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15297:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15431:3:18",
														"nodeType": "YulTypedName",
														"src": "15431:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15439:3:18",
														"nodeType": "YulTypedName",
														"src": "15439:3:18",
														"type": ""
													}
												],
												"src": "15297:366:18"
											},
											{
												"body": {
													"nativeSrc": "15840:248:18",
													"nodeType": "YulBlock",
													"src": "15840:248:18",
													"statements": [
														{
															"nativeSrc": "15850:26:18",
															"nodeType": "YulAssignment",
															"src": "15850:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15862:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15862:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15873:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15873:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15858:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15858:3:18"
																},
																"nativeSrc": "15858:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15858:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15850:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15850:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15897:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15897:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15908:1:18",
																				"nodeType": "YulLiteral",
																				"src": "15908:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15893:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15893:3:18"
																		},
																		"nativeSrc": "15893:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15893:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15916:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "15916:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15922:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15922:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15912:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15912:3:18"
																		},
																		"nativeSrc": "15912:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15912:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15886:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15886:6:18"
																},
																"nativeSrc": "15886:47:18",
																"nodeType": "YulFunctionCall",
																"src": "15886:47:18"
															},
															"nativeSrc": "15886:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "15886:47:18"
														},
														{
															"nativeSrc": "15942:139:18",
															"nodeType": "YulAssignment",
															"src": "15942:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16076:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "16076:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15950:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "15950:124:18"
																},
																"nativeSrc": "15950:131:18",
																"nodeType": "YulFunctionCall",
																"src": "15950:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15942:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15942:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15669:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15820:9:18",
														"nodeType": "YulTypedName",
														"src": "15820:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15835:4:18",
														"nodeType": "YulTypedName",
														"src": "15835:4:18",
														"type": ""
													}
												],
												"src": "15669:419:18"
											},
											{
												"body": {
													"nativeSrc": "16200:188:18",
													"nodeType": "YulBlock",
													"src": "16200:188:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16222:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16222:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16230:1:18",
																				"nodeType": "YulLiteral",
																				"src": "16230:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16218:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16218:3:18"
																		},
																		"nativeSrc": "16218:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16218:14:18"
																	},
																	{
																		"hexValue": "637265617465496e6865726974616e636528292c207175616e74696461646520",
																		"kind": "string",
																		"nativeSrc": "16234:34:18",
																		"nodeType": "YulLiteral",
																		"src": "16234:34:18",
																		"type": "",
																		"value": "createInheritance(), quantidade "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16211:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16211:6:18"
																},
																"nativeSrc": "16211:58:18",
																"nodeType": "YulFunctionCall",
																"src": "16211:58:18"
															},
															"nativeSrc": "16211:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "16211:58:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16290:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16290:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16298:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16298:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16286:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16286:3:18"
																		},
																		"nativeSrc": "16286:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16286:15:18"
																	},
																	{
																		"hexValue": "646520656e64657265636f73206520706f7263656e746167656e732064696665",
																		"kind": "string",
																		"nativeSrc": "16303:34:18",
																		"nodeType": "YulLiteral",
																		"src": "16303:34:18",
																		"type": "",
																		"value": "de enderecos e porcentagens dife"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16279:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16279:6:18"
																},
																"nativeSrc": "16279:59:18",
																"nodeType": "YulFunctionCall",
																"src": "16279:59:18"
															},
															"nativeSrc": "16279:59:18",
															"nodeType": "YulExpressionStatement",
															"src": "16279:59:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16359:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "16359:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16367:2:18",
																				"nodeType": "YulLiteral",
																				"src": "16367:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16355:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16355:3:18"
																		},
																		"nativeSrc": "16355:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16355:15:18"
																	},
																	{
																		"hexValue": "72656e746573",
																		"kind": "string",
																		"nativeSrc": "16372:8:18",
																		"nodeType": "YulLiteral",
																		"src": "16372:8:18",
																		"type": "",
																		"value": "rentes"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16348:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16348:6:18"
																},
																"nativeSrc": "16348:33:18",
																"nodeType": "YulFunctionCall",
																"src": "16348:33:18"
															},
															"nativeSrc": "16348:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "16348:33:18"
														}
													]
												},
												"name": "store_literal_in_memory_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35",
												"nativeSrc": "16094:294:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16192:6:18",
														"nodeType": "YulTypedName",
														"src": "16192:6:18",
														"type": ""
													}
												],
												"src": "16094:294:18"
											},
											{
												"body": {
													"nativeSrc": "16540:220:18",
													"nodeType": "YulBlock",
													"src": "16540:220:18",
													"statements": [
														{
															"nativeSrc": "16550:74:18",
															"nodeType": "YulAssignment",
															"src": "16550:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16616:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16616:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16621:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16621:2:18",
																		"type": "",
																		"value": "70"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16557:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "16557:58:18"
																},
																"nativeSrc": "16557:67:18",
																"nodeType": "YulFunctionCall",
																"src": "16557:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16550:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16550:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16722:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16722:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35",
																	"nativeSrc": "16633:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "16633:88:18"
																},
																"nativeSrc": "16633:93:18",
																"nodeType": "YulFunctionCall",
																"src": "16633:93:18"
															},
															"nativeSrc": "16633:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "16633:93:18"
														},
														{
															"nativeSrc": "16735:19:18",
															"nodeType": "YulAssignment",
															"src": "16735:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16746:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "16746:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16751:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16751:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16742:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16742:3:18"
																},
																"nativeSrc": "16742:12:18",
																"nodeType": "YulFunctionCall",
																"src": "16742:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16735:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16735:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16394:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16528:3:18",
														"nodeType": "YulTypedName",
														"src": "16528:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16536:3:18",
														"nodeType": "YulTypedName",
														"src": "16536:3:18",
														"type": ""
													}
												],
												"src": "16394:366:18"
											},
											{
												"body": {
													"nativeSrc": "16937:248:18",
													"nodeType": "YulBlock",
													"src": "16937:248:18",
													"statements": [
														{
															"nativeSrc": "16947:26:18",
															"nodeType": "YulAssignment",
															"src": "16947:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16959:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "16959:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16970:2:18",
																		"nodeType": "YulLiteral",
																		"src": "16970:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16955:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "16955:3:18"
																},
																"nativeSrc": "16955:18:18",
																"nodeType": "YulFunctionCall",
																"src": "16955:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16947:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "16947:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16994:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "16994:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17005:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17005:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16990:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "16990:3:18"
																		},
																		"nativeSrc": "16990:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "16990:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17013:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "17013:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17019:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17019:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17009:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17009:3:18"
																		},
																		"nativeSrc": "17009:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17009:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16983:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "16983:6:18"
																},
																"nativeSrc": "16983:47:18",
																"nodeType": "YulFunctionCall",
																"src": "16983:47:18"
															},
															"nativeSrc": "16983:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "16983:47:18"
														},
														{
															"nativeSrc": "17039:139:18",
															"nodeType": "YulAssignment",
															"src": "17039:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17173:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "17173:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17047:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "17047:124:18"
																},
																"nativeSrc": "17047:131:18",
																"nodeType": "YulFunctionCall",
																"src": "17047:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17039:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17039:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16766:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16917:9:18",
														"nodeType": "YulTypedName",
														"src": "16917:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16932:4:18",
														"nodeType": "YulTypedName",
														"src": "16932:4:18",
														"type": ""
													}
												],
												"src": "16766:419:18"
											},
											{
												"body": {
													"nativeSrc": "17254:80:18",
													"nodeType": "YulBlock",
													"src": "17254:80:18",
													"statements": [
														{
															"nativeSrc": "17264:22:18",
															"nodeType": "YulAssignment",
															"src": "17264:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17279:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17279:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17273:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17273:5:18"
																},
																"nativeSrc": "17273:13:18",
																"nodeType": "YulFunctionCall",
																"src": "17273:13:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17264:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "17264:5:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17322:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "17322:5:18"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "17295:26:18",
																	"nodeType": "YulIdentifier",
																	"src": "17295:26:18"
																},
																"nativeSrc": "17295:33:18",
																"nodeType": "YulFunctionCall",
																"src": "17295:33:18"
															},
															"nativeSrc": "17295:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "17295:33:18"
														}
													]
												},
												"name": "abi_decode_t_bytes32_fromMemory",
												"nativeSrc": "17191:143:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17232:6:18",
														"nodeType": "YulTypedName",
														"src": "17232:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17240:3:18",
														"nodeType": "YulTypedName",
														"src": "17240:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17248:5:18",
														"nodeType": "YulTypedName",
														"src": "17248:5:18",
														"type": ""
													}
												],
												"src": "17191:143:18"
											},
											{
												"body": {
													"nativeSrc": "17417:274:18",
													"nodeType": "YulBlock",
													"src": "17417:274:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "17463:83:18",
																"nodeType": "YulBlock",
																"src": "17463:83:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17465:77:18",
																				"nodeType": "YulIdentifier",
																				"src": "17465:77:18"
																			},
																			"nativeSrc": "17465:79:18",
																			"nodeType": "YulFunctionCall",
																			"src": "17465:79:18"
																		},
																		"nativeSrc": "17465:79:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "17465:79:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17438:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17438:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17447:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17447:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17434:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17434:3:18"
																		},
																		"nativeSrc": "17434:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17434:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17459:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17459:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17430:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17430:3:18"
																},
																"nativeSrc": "17430:32:18",
																"nodeType": "YulFunctionCall",
																"src": "17430:32:18"
															},
															"nativeSrc": "17427:119:18",
															"nodeType": "YulIf",
															"src": "17427:119:18"
														},
														{
															"nativeSrc": "17556:128:18",
															"nodeType": "YulBlock",
															"src": "17556:128:18",
															"statements": [
																{
																	"nativeSrc": "17571:15:18",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17571:15:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17585:1:18",
																		"nodeType": "YulLiteral",
																		"src": "17585:1:18",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17575:6:18",
																			"nodeType": "YulTypedName",
																			"src": "17575:6:18",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17600:74:18",
																	"nodeType": "YulAssignment",
																	"src": "17600:74:18",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17646:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "17646:9:18"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17657:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "17657:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17642:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "17642:3:18"
																				},
																				"nativeSrc": "17642:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "17642:22:18"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17666:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "17666:7:18"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32_fromMemory",
																			"nativeSrc": "17610:31:18",
																			"nodeType": "YulIdentifier",
																			"src": "17610:31:18"
																		},
																		"nativeSrc": "17610:64:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17610:64:18"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17600:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "17600:6:18"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17340:351:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17387:9:18",
														"nodeType": "YulTypedName",
														"src": "17387:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17398:7:18",
														"nodeType": "YulTypedName",
														"src": "17398:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17410:6:18",
														"nodeType": "YulTypedName",
														"src": "17410:6:18",
														"type": ""
													}
												],
												"src": "17340:351:18"
											},
											{
												"body": {
													"nativeSrc": "17823:206:18",
													"nodeType": "YulBlock",
													"src": "17823:206:18",
													"statements": [
														{
															"nativeSrc": "17833:26:18",
															"nodeType": "YulAssignment",
															"src": "17833:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17845:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "17845:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17856:2:18",
																		"nodeType": "YulLiteral",
																		"src": "17856:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17841:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "17841:3:18"
																},
																"nativeSrc": "17841:18:18",
																"nodeType": "YulFunctionCall",
																"src": "17841:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17833:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "17833:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17913:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17913:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17926:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "17926:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17937:1:18",
																				"nodeType": "YulLiteral",
																				"src": "17937:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17922:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "17922:3:18"
																		},
																		"nativeSrc": "17922:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "17922:17:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17869:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "17869:43:18"
																},
																"nativeSrc": "17869:71:18",
																"nodeType": "YulFunctionCall",
																"src": "17869:71:18"
															},
															"nativeSrc": "17869:71:18",
															"nodeType": "YulExpressionStatement",
															"src": "17869:71:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17994:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "17994:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18007:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18007:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18018:2:18",
																				"nodeType": "YulLiteral",
																				"src": "18018:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18003:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18003:3:18"
																		},
																		"nativeSrc": "18003:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18003:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "17950:43:18",
																	"nodeType": "YulIdentifier",
																	"src": "17950:43:18"
																},
																"nativeSrc": "17950:72:18",
																"nodeType": "YulFunctionCall",
																"src": "17950:72:18"
															},
															"nativeSrc": "17950:72:18",
															"nodeType": "YulExpressionStatement",
															"src": "17950:72:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17697:332:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17787:9:18",
														"nodeType": "YulTypedName",
														"src": "17787:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17799:6:18",
														"nodeType": "YulTypedName",
														"src": "17799:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17807:6:18",
														"nodeType": "YulTypedName",
														"src": "17807:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17818:4:18",
														"nodeType": "YulTypedName",
														"src": "17818:4:18",
														"type": ""
													}
												],
												"src": "17697:332:18"
											},
											{
												"body": {
													"nativeSrc": "18141:64:18",
													"nodeType": "YulBlock",
													"src": "18141:64:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18163:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "18163:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18171:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18171:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18159:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18159:3:18"
																		},
																		"nativeSrc": "18159:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18159:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "18175:22:18",
																		"nodeType": "YulLiteral",
																		"src": "18175:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18152:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18152:6:18"
																},
																"nativeSrc": "18152:46:18",
																"nodeType": "YulFunctionCall",
																"src": "18152:46:18"
															},
															"nativeSrc": "18152:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "18152:46:18"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "18035:170:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18133:6:18",
														"nodeType": "YulTypedName",
														"src": "18133:6:18",
														"type": ""
													}
												],
												"src": "18035:170:18"
											},
											{
												"body": {
													"nativeSrc": "18357:220:18",
													"nodeType": "YulBlock",
													"src": "18357:220:18",
													"statements": [
														{
															"nativeSrc": "18367:74:18",
															"nodeType": "YulAssignment",
															"src": "18367:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18433:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18433:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18438:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18438:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18374:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "18374:58:18"
																},
																"nativeSrc": "18374:67:18",
																"nodeType": "YulFunctionCall",
																"src": "18374:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18367:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18367:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18539:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18539:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "18450:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "18450:88:18"
																},
																"nativeSrc": "18450:93:18",
																"nodeType": "YulFunctionCall",
																"src": "18450:93:18"
															},
															"nativeSrc": "18450:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "18450:93:18"
														},
														{
															"nativeSrc": "18552:19:18",
															"nodeType": "YulAssignment",
															"src": "18552:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18563:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "18563:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18568:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18568:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18559:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18559:3:18"
																},
																"nativeSrc": "18559:12:18",
																"nodeType": "YulFunctionCall",
																"src": "18559:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18552:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18552:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18211:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18345:3:18",
														"nodeType": "YulTypedName",
														"src": "18345:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18353:3:18",
														"nodeType": "YulTypedName",
														"src": "18353:3:18",
														"type": ""
													}
												],
												"src": "18211:366:18"
											},
											{
												"body": {
													"nativeSrc": "18754:248:18",
													"nodeType": "YulBlock",
													"src": "18754:248:18",
													"statements": [
														{
															"nativeSrc": "18764:26:18",
															"nodeType": "YulAssignment",
															"src": "18764:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18776:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "18776:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18787:2:18",
																		"nodeType": "YulLiteral",
																		"src": "18787:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18772:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "18772:3:18"
																},
																"nativeSrc": "18772:18:18",
																"nodeType": "YulFunctionCall",
																"src": "18772:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18764:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18764:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18811:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18811:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18822:1:18",
																				"nodeType": "YulLiteral",
																				"src": "18822:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18807:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18807:3:18"
																		},
																		"nativeSrc": "18807:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18807:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18830:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "18830:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18836:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "18836:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18826:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "18826:3:18"
																		},
																		"nativeSrc": "18826:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "18826:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18800:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "18800:6:18"
																},
																"nativeSrc": "18800:47:18",
																"nodeType": "YulFunctionCall",
																"src": "18800:47:18"
															},
															"nativeSrc": "18800:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "18800:47:18"
														},
														{
															"nativeSrc": "18856:139:18",
															"nodeType": "YulAssignment",
															"src": "18856:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18990:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "18990:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18864:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "18864:124:18"
																},
																"nativeSrc": "18864:131:18",
																"nodeType": "YulFunctionCall",
																"src": "18864:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18856:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "18856:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18583:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18734:9:18",
														"nodeType": "YulTypedName",
														"src": "18734:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18749:4:18",
														"nodeType": "YulTypedName",
														"src": "18749:4:18",
														"type": ""
													}
												],
												"src": "18583:419:18"
											},
											{
												"body": {
													"nativeSrc": "19114:60:18",
													"nodeType": "YulBlock",
													"src": "19114:60:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19136:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "19136:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19144:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19144:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19132:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19132:3:18"
																		},
																		"nativeSrc": "19132:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19132:14:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "19148:18:18",
																		"nodeType": "YulLiteral",
																		"src": "19148:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19125:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19125:6:18"
																},
																"nativeSrc": "19125:42:18",
																"nodeType": "YulFunctionCall",
																"src": "19125:42:18"
															},
															"nativeSrc": "19125:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "19125:42:18"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "19008:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19106:6:18",
														"nodeType": "YulTypedName",
														"src": "19106:6:18",
														"type": ""
													}
												],
												"src": "19008:166:18"
											},
											{
												"body": {
													"nativeSrc": "19326:220:18",
													"nodeType": "YulBlock",
													"src": "19326:220:18",
													"statements": [
														{
															"nativeSrc": "19336:74:18",
															"nodeType": "YulAssignment",
															"src": "19336:74:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19402:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19402:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19407:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19407:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19343:58:18",
																	"nodeType": "YulIdentifier",
																	"src": "19343:58:18"
																},
																"nativeSrc": "19343:67:18",
																"nodeType": "YulFunctionCall",
																"src": "19343:67:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19336:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19336:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19508:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19508:3:18"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "19419:88:18",
																	"nodeType": "YulIdentifier",
																	"src": "19419:88:18"
																},
																"nativeSrc": "19419:93:18",
																"nodeType": "YulFunctionCall",
																"src": "19419:93:18"
															},
															"nativeSrc": "19419:93:18",
															"nodeType": "YulExpressionStatement",
															"src": "19419:93:18"
														},
														{
															"nativeSrc": "19521:19:18",
															"nodeType": "YulAssignment",
															"src": "19521:19:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19532:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "19532:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19537:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19537:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19528:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19528:3:18"
																},
																"nativeSrc": "19528:12:18",
																"nodeType": "YulFunctionCall",
																"src": "19528:12:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19521:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19521:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19180:366:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19314:3:18",
														"nodeType": "YulTypedName",
														"src": "19314:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19322:3:18",
														"nodeType": "YulTypedName",
														"src": "19322:3:18",
														"type": ""
													}
												],
												"src": "19180:366:18"
											},
											{
												"body": {
													"nativeSrc": "19723:248:18",
													"nodeType": "YulBlock",
													"src": "19723:248:18",
													"statements": [
														{
															"nativeSrc": "19733:26:18",
															"nodeType": "YulAssignment",
															"src": "19733:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19745:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "19745:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19756:2:18",
																		"nodeType": "YulLiteral",
																		"src": "19756:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19741:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "19741:3:18"
																},
																"nativeSrc": "19741:18:18",
																"nodeType": "YulFunctionCall",
																"src": "19741:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19733:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19733:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19780:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19780:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19791:1:18",
																				"nodeType": "YulLiteral",
																				"src": "19791:1:18",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19776:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19776:3:18"
																		},
																		"nativeSrc": "19776:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19776:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19799:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "19799:4:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19805:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "19805:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19795:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "19795:3:18"
																		},
																		"nativeSrc": "19795:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "19795:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19769:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "19769:6:18"
																},
																"nativeSrc": "19769:47:18",
																"nodeType": "YulFunctionCall",
																"src": "19769:47:18"
															},
															"nativeSrc": "19769:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "19769:47:18"
														},
														{
															"nativeSrc": "19825:139:18",
															"nodeType": "YulAssignment",
															"src": "19825:139:18",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19959:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "19959:4:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19833:124:18",
																	"nodeType": "YulIdentifier",
																	"src": "19833:124:18"
																},
																"nativeSrc": "19833:131:18",
																"nodeType": "YulFunctionCall",
																"src": "19833:131:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19825:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "19825:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19552:419:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19703:9:18",
														"nodeType": "YulTypedName",
														"src": "19703:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19718:4:18",
														"nodeType": "YulTypedName",
														"src": "19718:4:18",
														"type": ""
													}
												],
												"src": "19552:419:18"
											},
											{
												"body": {
													"nativeSrc": "20035:40:18",
													"nodeType": "YulBlock",
													"src": "20035:40:18",
													"statements": [
														{
															"nativeSrc": "20046:22:18",
															"nodeType": "YulAssignment",
															"src": "20046:22:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20062:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20062:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20056:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "20056:5:18"
																},
																"nativeSrc": "20056:12:18",
																"nodeType": "YulFunctionCall",
																"src": "20056:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20046:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "20046:6:18"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "19977:98:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20018:5:18",
														"nodeType": "YulTypedName",
														"src": "20018:5:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20028:6:18",
														"nodeType": "YulTypedName",
														"src": "20028:6:18",
														"type": ""
													}
												],
												"src": "19977:98:18"
											},
											{
												"body": {
													"nativeSrc": "20194:34:18",
													"nodeType": "YulBlock",
													"src": "20194:34:18",
													"statements": [
														{
															"nativeSrc": "20204:18:18",
															"nodeType": "YulAssignment",
															"src": "20204:18:18",
															"value": {
																"name": "pos",
																"nativeSrc": "20219:3:18",
																"nodeType": "YulIdentifier",
																"src": "20219:3:18"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20204:11:18",
																	"nodeType": "YulIdentifier",
																	"src": "20204:11:18"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20081:147:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20166:3:18",
														"nodeType": "YulTypedName",
														"src": "20166:3:18",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20171:6:18",
														"nodeType": "YulTypedName",
														"src": "20171:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20182:11:18",
														"nodeType": "YulTypedName",
														"src": "20182:11:18",
														"type": ""
													}
												],
												"src": "20081:147:18"
											},
											{
												"body": {
													"nativeSrc": "20342:278:18",
													"nodeType": "YulBlock",
													"src": "20342:278:18",
													"statements": [
														{
															"nativeSrc": "20352:52:18",
															"nodeType": "YulVariableDeclaration",
															"src": "20352:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20398:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "20398:5:18"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20366:31:18",
																	"nodeType": "YulIdentifier",
																	"src": "20366:31:18"
																},
																"nativeSrc": "20366:38:18",
																"nodeType": "YulFunctionCall",
																"src": "20366:38:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20356:6:18",
																	"nodeType": "YulTypedName",
																	"src": "20356:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20413:95:18",
															"nodeType": "YulAssignment",
															"src": "20413:95:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20496:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20496:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20501:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20501:6:18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20420:75:18",
																	"nodeType": "YulIdentifier",
																	"src": "20420:75:18"
																},
																"nativeSrc": "20420:88:18",
																"nodeType": "YulFunctionCall",
																"src": "20420:88:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20413:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20413:3:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20556:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "20556:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20563:4:18",
																				"nodeType": "YulLiteral",
																				"src": "20563:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20552:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "20552:3:18"
																		},
																		"nativeSrc": "20552:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "20552:16:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20570:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20570:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20575:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20575:6:18"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "20517:34:18",
																	"nodeType": "YulIdentifier",
																	"src": "20517:34:18"
																},
																"nativeSrc": "20517:65:18",
																"nodeType": "YulFunctionCall",
																"src": "20517:65:18"
															},
															"nativeSrc": "20517:65:18",
															"nodeType": "YulExpressionStatement",
															"src": "20517:65:18"
														},
														{
															"nativeSrc": "20591:23:18",
															"nodeType": "YulAssignment",
															"src": "20591:23:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20602:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20602:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20607:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20607:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20598:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20598:3:18"
																},
																"nativeSrc": "20598:16:18",
																"nodeType": "YulFunctionCall",
																"src": "20598:16:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20591:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20591:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "20234:386:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20323:5:18",
														"nodeType": "YulTypedName",
														"src": "20323:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20330:3:18",
														"nodeType": "YulTypedName",
														"src": "20330:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20338:3:18",
														"nodeType": "YulTypedName",
														"src": "20338:3:18",
														"type": ""
													}
												],
												"src": "20234:386:18"
											},
											{
												"body": {
													"nativeSrc": "20760:137:18",
													"nodeType": "YulBlock",
													"src": "20760:137:18",
													"statements": [
														{
															"nativeSrc": "20771:100:18",
															"nodeType": "YulAssignment",
															"src": "20771:100:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20858:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "20858:6:18"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "20867:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "20867:3:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "20778:79:18",
																	"nodeType": "YulIdentifier",
																	"src": "20778:79:18"
																},
																"nativeSrc": "20778:93:18",
																"nodeType": "YulFunctionCall",
																"src": "20778:93:18"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20771:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20771:3:18"
																}
															]
														},
														{
															"nativeSrc": "20881:10:18",
															"nodeType": "YulAssignment",
															"src": "20881:10:18",
															"value": {
																"name": "pos",
																"nativeSrc": "20888:3:18",
																"nodeType": "YulIdentifier",
																"src": "20888:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20881:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "20881:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "20626:271:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20739:3:18",
														"nodeType": "YulTypedName",
														"src": "20739:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20745:6:18",
														"nodeType": "YulTypedName",
														"src": "20745:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20756:3:18",
														"nodeType": "YulTypedName",
														"src": "20756:3:18",
														"type": ""
													}
												],
												"src": "20626:271:18"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    // uint16[]\n    function abi_decode_t_array$_t_uint16_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint16_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0, value1 := abi_decode_t_array$_t_address_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2, value3 := abi_decode_t_array$_t_uint16_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid address\")\n\n    }\n\n    function abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Testamento ja existe. Use a func\")\n\n        mstore(add(memPtr, 32), \"ao de edicao.\")\n\n    }\n\n    function abi_encode_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04(memPtr) {\n\n        mstore(add(memPtr, 0), \"createInheritance(), valor inval\")\n\n        mstore(add(memPtr, 32), \"ido\")\n\n    }\n\n    function abi_encode_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97(memPtr) {\n\n        mstore(add(memPtr, 0), \"createInheritance(), adicione os\")\n\n        mstore(add(memPtr, 32), \" herdeiros\")\n\n    }\n\n    function abi_encode_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35(memPtr) {\n\n        mstore(add(memPtr, 0), \"createInheritance(), quantidade \")\n\n        mstore(add(memPtr, 32), \"de enderecos e porcentagens dife\")\n\n        mstore(add(memPtr, 64), \"rentes\")\n\n    }\n\n    function abi_encode_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 70)\n        store_literal_in_memory_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_bytes32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1075": [
									{
										"length": 32,
										"start": 4541
									},
									{
										"length": 32,
										"start": 4626
									},
									{
										"length": 32,
										"start": 5068
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061013f575f3560e01c8063710eef7a116100b557806391d148541161006e57806391d14854146103c9578063a217fddf14610405578063ad3cb1cc1461042f578063d547741f14610459578063e7a84bc314610481578063f2fde38b1461049d5761013f565b8063710eef7a1461030b578063715018a61461033357806375ba6f71146103495780638129fc1c146103735780638456cb59146103895780638da5cb5b1461039f5761013f565b80634bd39bdc116101075780634bd39bdc146102215780634d1ba077146102495780634f1ef2861461027157806352d1902d1461028d5780635c975abb146102b75780636af70684146102e15761013f565b806301ffc9a714610143578063248a9ca31461017f5780632f2ff15d146101bb57806336568abe146101e35780633f4ba83a1461020b575b5f80fd5b34801561014e575f80fd5b5061016960048036038101906101649190611bb6565b6104c5565b6040516101769190611bfb565b60405180910390f35b34801561018a575f80fd5b506101a560048036038101906101a09190611c47565b61053e565b6040516101b29190611c81565b60405180910390f35b3480156101c6575f80fd5b506101e160048036038101906101dc9190611cf4565b610568565b005b3480156101ee575f80fd5b5061020960048036038101906102049190611cf4565b61058a565b005b348015610216575f80fd5b5061021f610605565b005b34801561022c575f80fd5b5061024760048036038101906102429190611d32565b610617565b005b348015610254575f80fd5b5061026f600480360381019061026a9190611d32565b610662565b005b61028b60048036038101906102869190611e99565b610838565b005b348015610298575f80fd5b506102a1610857565b6040516102ae9190611c81565b60405180910390f35b3480156102c2575f80fd5b506102cb610888565b6040516102d89190611bfb565b60405180910390f35b3480156102ec575f80fd5b506102f561089c565b6040516103029190611f02565b60405180910390f35b348015610316575f80fd5b50610331600480360381019061032c9190611d32565b6108c1565b005b34801561033e575f80fd5b5061034761090c565b005b348015610354575f80fd5b5061035d61091f565b60405161036a9190611f02565b60405180910390f35b34801561037e575f80fd5b50610387610944565b005b348015610394575f80fd5b5061039d610ae4565b005b3480156103aa575f80fd5b506103b3610af6565b6040516103c09190611f02565b60405180910390f35b3480156103d4575f80fd5b506103ef60048036038101906103ea9190611cf4565b610b2b565b6040516103fc9190611bfb565b60405180910390f35b348015610410575f80fd5b50610419610b9c565b6040516104269190611c81565b60405180910390f35b34801561043a575f80fd5b50610443610ba2565b6040516104509190611f7b565b60405180910390f35b348015610464575f80fd5b5061047f600480360381019061047a9190611cf4565b610bdb565b005b61049b6004803603810190610496919061204d565b610bfd565b005b3480156104a8575f80fd5b506104c360048036038101906104be9190611d32565b610db5565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610537575061053682610e39565b5b9050919050565b5f80610548610ea2565b9050805f015f8481526020019081526020015f2060010154915050919050565b6105718261053e565b61057a81610ec9565b6105848383610edd565b50505050565b610592610fd5565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146105f6576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6106008282610fdc565b505050565b61060d6110d4565b61061561115b565b565b61061f6110d4565b8060645f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106c790612115565b60405180910390fd5b5f60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c650fc836040518263ffffffff1660e01b815260040161072b9190611f02565b602060405180830381865afa158015610746573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061076a919061215d565b159050806107ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a4906121f8565b60405180910390fd5b60655f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634d1ba077836040518263ffffffff1660e01b81526004016108079190611f02565b5f604051808303815f87803b15801561081e575f80fd5b505af1158015610830573d5f803e3d5ffd5b505050505050565b6108406111bb565b610849826112a1565b61085382826112ac565b5050565b5f6108606113ca565b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b905090565b5f805f9054906101000a900460ff16905090565b60655f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6108c96110d4565b8060655f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109146110d4565b61091d5f611451565b565b60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f61094d611522565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff161480156109955750825b90505f60018367ffffffffffffffff161480156109c857505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156109d6575080155b15610a0d576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610a5a576001855f0160086101000a81548160ff0219169083151502179055505b610a6333611535565b610a6b611549565b610a73611553565b610a7b611565565b610a83611577565b8315610add575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610ad4919061226b565b60405180910390a15b5050505050565b610aec6110d4565b610af4611581565b565b5f80610b006115e2565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b5f80610b35610ea2565b9050805f015f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1691505092915050565b5f801b81565b6040518060400160405280600581526020017f352e302e3000000000000000000000000000000000000000000000000000000081525081565b610be48261053e565b610bed81610ec9565b610bf78383610fdc565b50505050565b5f3403610c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c36906122f4565b60405180910390fd5b5f8484905003610c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7b90612382565b60405180910390fd5b818190508484905014610ccc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc390612436565b60405180910390fd5b5f3390505f60645f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388c650fc836040518263ffffffff1660e01b8152600401610d2b9190611f02565b602060405180830381865afa158015610d46573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d6a919061215d565b15905080610dad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da4906121f8565b60405180910390fd5b505050505050565b610dbd6110d4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e2d575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610e249190611f02565b60405180910390fd5b610e3681611451565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f7f02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800905090565b610eda81610ed5610fd5565b611609565b50565b5f80610ee7610ea2565b9050610ef38484610b2b565b610fca576001815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610f66610fd5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001915050610fcf565b5f9150505b92915050565b5f33905090565b5f80610fe6610ea2565b9050610ff28484610b2b565b156110c9575f815f015f8681526020019081526020015f205f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611065610fd5565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16857ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019150506110ce565b5f9150505b92915050565b6110dc610fd5565b73ffffffffffffffffffffffffffffffffffffffff166110fa610af6565b73ffffffffffffffffffffffffffffffffffffffff16146111595761111d610fd5565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111509190611f02565b60405180910390fd5b565b61116361165a565b5f805f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6111a4610fd5565b6040516111b19190611f02565b60405180910390a1565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff16148061126857507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661124f6116a3565b73ffffffffffffffffffffffffffffffffffffffff1614155b1561129f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6112a96110d4565b50565b8173ffffffffffffffffffffffffffffffffffffffff166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561131457506040513d601f19601f820116820180604052508101906113119190612468565b60015b61135557816040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161134c9190611f02565b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b81146113bb57806040517faa1d49a40000000000000000000000000000000000000000000000000000000081526004016113b29190611c81565b60405180910390fd5b6113c583836116f6565b505050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff161461144f576040517fe07c8dba00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f61145a6115e2565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f8061152c611768565b90508091505090565b61153d611791565b611546816117d1565b50565b611551611791565b565b61155b611791565b611563611855565b565b61156d611791565b611575611877565b565b61157f611791565b565b611589611889565b60015f806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115cb610fd5565b6040516115d89190611f02565b60405180910390a1565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b6116138282610b2b565b6116565780826040517fe2517d3f00000000000000000000000000000000000000000000000000000000815260040161164d929190612493565b60405180910390fd5b5050565b611662610888565b6116a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161169890612504565b60405180910390fd5b565b5f6116cf7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6118d3565b5f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6116ff826118dc565b8173ffffffffffffffffffffffffffffffffffffffff167fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b60405160405180910390a25f8151111561175b5761175582826119a5565b50611764565b611763611a25565b5b5050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b611799611a61565b6117cf576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6117d9611791565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611849575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016118409190611f02565b60405180910390fd5b61185281611451565b50565b61185d611791565b5f805f6101000a81548160ff021916908315150217905550565b61187f611791565b6001603281905550565b611891610888565b156118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c89061256c565b60405180910390fd5b565b5f819050919050565b5f8173ffffffffffffffffffffffffffffffffffffffff163b0361193757806040517f4c9c8ce300000000000000000000000000000000000000000000000000000000815260040161192e9190611f02565b60405180910390fd5b806119637f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5f1b6118d3565b5f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60605f808473ffffffffffffffffffffffffffffffffffffffff16846040516119ce91906125ce565b5f60405180830381855af49150503d805f8114611a06576040519150601f19603f3d011682016040523d82523d5f602084013e611a0b565b606091505b5091509150611a1b858383611a7f565b9250505092915050565b5f341115611a5f576040517fb398979f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611a6a611522565b5f0160089054906101000a900460ff16905090565b606082611a9457611a8f82611b0c565b611b04565b5f8251148015611aba57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611afc57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611af39190611f02565b60405180910390fd5b819050611b05565b5b9392505050565b5f81511115611b1e5780518082602001fd5b6040517fd6bda27500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b9581611b61565b8114611b9f575f80fd5b50565b5f81359050611bb081611b8c565b92915050565b5f60208284031215611bcb57611bca611b59565b5b5f611bd884828501611ba2565b91505092915050565b5f8115159050919050565b611bf581611be1565b82525050565b5f602082019050611c0e5f830184611bec565b92915050565b5f819050919050565b611c2681611c14565b8114611c30575f80fd5b50565b5f81359050611c4181611c1d565b92915050565b5f60208284031215611c5c57611c5b611b59565b5b5f611c6984828501611c33565b91505092915050565b611c7b81611c14565b82525050565b5f602082019050611c945f830184611c72565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611cc382611c9a565b9050919050565b611cd381611cb9565b8114611cdd575f80fd5b50565b5f81359050611cee81611cca565b92915050565b5f8060408385031215611d0a57611d09611b59565b5b5f611d1785828601611c33565b9250506020611d2885828601611ce0565b9150509250929050565b5f60208284031215611d4757611d46611b59565b5b5f611d5484828501611ce0565b91505092915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611dab82611d65565b810181811067ffffffffffffffff82111715611dca57611dc9611d75565b5b80604052505050565b5f611ddc611b50565b9050611de88282611da2565b919050565b5f67ffffffffffffffff821115611e0757611e06611d75565b5b611e1082611d65565b9050602081019050919050565b828183375f83830152505050565b5f611e3d611e3884611ded565b611dd3565b905082815260208101848484011115611e5957611e58611d61565b5b611e64848285611e1d565b509392505050565b5f82601f830112611e8057611e7f611d5d565b5b8135611e90848260208601611e2b565b91505092915050565b5f8060408385031215611eaf57611eae611b59565b5b5f611ebc85828601611ce0565b925050602083013567ffffffffffffffff811115611edd57611edc611b5d565b5b611ee985828601611e6c565b9150509250929050565b611efc81611cb9565b82525050565b5f602082019050611f155f830184611ef3565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f611f4d82611f1b565b611f578185611f25565b9350611f67818560208601611f35565b611f7081611d65565b840191505092915050565b5f6020820190508181035f830152611f938184611f43565b905092915050565b5f80fd5b5f80fd5b5f8083601f840112611fb857611fb7611d5d565b5b8235905067ffffffffffffffff811115611fd557611fd4611f9b565b5b602083019150836020820283011115611ff157611ff0611f9f565b5b9250929050565b5f8083601f84011261200d5761200c611d5d565b5b8235905067ffffffffffffffff81111561202a57612029611f9b565b5b60208301915083602082028301111561204657612045611f9f565b5b9250929050565b5f805f806040858703121561206557612064611b59565b5b5f85013567ffffffffffffffff81111561208257612081611b5d565b5b61208e87828801611fa3565b9450945050602085013567ffffffffffffffff8111156120b1576120b0611b5d565b5b6120bd87828801611ff8565b925092505092959194509250565b7f496e76616c6964206164647265737300000000000000000000000000000000005f82015250565b5f6120ff600f83611f25565b915061210a826120cb565b602082019050919050565b5f6020820190508181035f83015261212c816120f3565b9050919050565b61213c81611be1565b8114612146575f80fd5b50565b5f8151905061215781612133565b92915050565b5f6020828403121561217257612171611b59565b5b5f61217f84828501612149565b91505092915050565b7f54657374616d656e746f206a61206578697374652e2055736520612066756e635f8201527f616f2064652065646963616f2e00000000000000000000000000000000000000602082015250565b5f6121e2602d83611f25565b91506121ed82612188565b604082019050919050565b5f6020820190508181035f83015261220f816121d6565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61225561225061224b84612216565b612232565b61221f565b9050919050565b6122658161223b565b82525050565b5f60208201905061227e5f83018461225c565b92915050565b7f637265617465496e6865726974616e636528292c2076616c6f7220696e76616c5f8201527f69646f0000000000000000000000000000000000000000000000000000000000602082015250565b5f6122de602383611f25565b91506122e982612284565b604082019050919050565b5f6020820190508181035f83015261230b816122d2565b9050919050565b7f637265617465496e6865726974616e636528292c2061646963696f6e65206f735f8201527f20686572646569726f7300000000000000000000000000000000000000000000602082015250565b5f61236c602a83611f25565b915061237782612312565b604082019050919050565b5f6020820190508181035f83015261239981612360565b9050919050565b7f637265617465496e6865726974616e636528292c207175616e746964616465205f8201527f646520656e64657265636f73206520706f7263656e746167656e73206469666560208201527f72656e7465730000000000000000000000000000000000000000000000000000604082015250565b5f612420604683611f25565b915061242b826123a0565b606082019050919050565b5f6020820190508181035f83015261244d81612414565b9050919050565b5f8151905061246281611c1d565b92915050565b5f6020828403121561247d5761247c611b59565b5b5f61248a84828501612454565b91505092915050565b5f6040820190506124a65f830185611ef3565b6124b36020830184611c72565b9392505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6124ee601483611f25565b91506124f9826124ba565b602082019050919050565b5f6020820190508181035f83015261251b816124e2565b9050919050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f612556601083611f25565b915061256182612522565b602082019050919050565b5f6020820190508181035f8301526125838161254a565b9050919050565b5f81519050919050565b5f81905092915050565b5f6125a88261258a565b6125b28185612594565b93506125c2818560208601611f35565b80840191505092915050565b5f6125d9828461259e565b91508190509291505056fea26469706673582212204f39dd9baae92735f3928ad7837848bfc497b4b82094f482fe23e64f31f09b1b64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x13F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x710EEF7A GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3C9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x405 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xE7A84BC3 EQ PUSH2 0x481 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x49D JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x710EEF7A EQ PUSH2 0x30B JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x333 JUMPI DUP1 PUSH4 0x75BA6F71 EQ PUSH2 0x349 JUMPI DUP1 PUSH4 0x8129FC1C EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x39F JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x4BD39BDC GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x4BD39BDC EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x4D1BA077 EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x6AF70684 EQ PUSH2 0x2E1 JUMPI PUSH2 0x13F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x143 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x17F JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x20B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x14E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x4C5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x176 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x18A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1C47 JUMP JUMPDEST PUSH2 0x53E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B2 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x568 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0x58A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x216 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21F PUSH2 0x605 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x247 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x242 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x254 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x662 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1E99 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A1 PUSH2 0x857 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AE SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CB PUSH2 0x888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D8 SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F5 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x316 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x331 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32C SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x8C1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x347 PUSH2 0x90C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x354 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x35D PUSH2 0x91F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36A SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x387 PUSH2 0x944 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x394 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x39D PUSH2 0xAE4 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B3 PUSH2 0xAF6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C0 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3EA SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FC SWAP2 SWAP1 PUSH2 0x1BFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x410 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x419 PUSH2 0xB9C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x426 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x443 PUSH2 0xBA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x450 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x464 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x1CF4 JUMP JUMPDEST PUSH2 0xBDB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xDB5 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x537 JUMPI POP PUSH2 0x536 DUP3 PUSH2 0xE39 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x548 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x571 DUP3 PUSH2 0x53E JUMP JUMPDEST PUSH2 0x57A DUP2 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0x584 DUP4 DUP4 PUSH2 0xEDD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x592 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x5F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x600 DUP3 DUP3 PUSH2 0xFDC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x60D PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x615 PUSH2 0x115B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x61F PUSH2 0x10D4 JUMP JUMPDEST DUP1 PUSH1 0x64 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6D0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C7 SWAP1 PUSH2 0x2115 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88C650FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72B SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST ISZERO SWAP1 POP DUP1 PUSH2 0x7AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A4 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x65 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x4D1BA077 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x807 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x81E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x830 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x840 PUSH2 0x11BB JUMP JUMPDEST PUSH2 0x849 DUP3 PUSH2 0x12A1 JUMP JUMPDEST PUSH2 0x853 DUP3 DUP3 PUSH2 0x12AC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x860 PUSH2 0x13CA JUMP JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x65 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x8C9 PUSH2 0x10D4 JUMP JUMPDEST DUP1 PUSH1 0x65 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x914 PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0x91D PUSH0 PUSH2 0x1451 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x94D PUSH2 0x1522 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x995 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x9C8 JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9D6 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0xA0D JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0xA5A JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0xA63 CALLER PUSH2 0x1535 JUMP JUMPDEST PUSH2 0xA6B PUSH2 0x1549 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1553 JUMP JUMPDEST PUSH2 0xA7B PUSH2 0x1565 JUMP JUMPDEST PUSH2 0xA83 PUSH2 0x1577 JUMP JUMPDEST DUP4 ISZERO PUSH2 0xADD JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xAD4 SWAP2 SWAP1 PUSH2 0x226B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0xAEC PUSH2 0x10D4 JUMP JUMPDEST PUSH2 0xAF4 PUSH2 0x1581 JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB00 PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xB35 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x352E302E30000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0xBE4 DUP3 PUSH2 0x53E JUMP JUMPDEST PUSH2 0xBED DUP2 PUSH2 0xEC9 JUMP JUMPDEST PUSH2 0xBF7 DUP4 DUP4 PUSH2 0xFDC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0xC3F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC36 SWAP1 PUSH2 0x22F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP5 SWAP1 POP SUB PUSH2 0xC84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC7B SWAP1 PUSH2 0x2382 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SWAP1 POP DUP5 DUP5 SWAP1 POP EQ PUSH2 0xCCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCC3 SWAP1 PUSH2 0x2436 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x64 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x88C650FC DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2B SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x215D JUMP JUMPDEST ISZERO SWAP1 POP DUP1 PUSH2 0xDAD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDA4 SWAP1 PUSH2 0x21F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xDBD PUSH2 0x10D4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE24 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xE36 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH32 0x2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xEDA DUP2 PUSH2 0xED5 PUSH2 0xFD5 JUMP JUMPDEST PUSH2 0x1609 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEE7 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xEF3 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0xFCA JUMPI PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xF66 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0xFCF JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFE6 PUSH2 0xEA2 JUMP JUMPDEST SWAP1 POP PUSH2 0xFF2 DUP5 DUP5 PUSH2 0xB2B JUMP JUMPDEST ISZERO PUSH2 0x10C9 JUMPI PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1065 PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x10CE JUMP JUMPDEST PUSH0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x10DC PUSH2 0xFD5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10FA PUSH2 0xAF6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1159 JUMPI PUSH2 0x111D PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1150 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1163 PUSH2 0x165A JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x11A4 PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B1 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1268 JUMPI POP PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x124F PUSH2 0x16A3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x129F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x12A9 PUSH2 0x10D4 JUMP JUMPDEST POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1314 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1311 SWAP2 SWAP1 PUSH2 0x2468 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1355 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x134C SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL DUP2 EQ PUSH2 0x13BB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0xAA1D49A400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13B2 SWAP2 SWAP1 PUSH2 0x1C81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13C5 DUP4 DUP4 PUSH2 0x16F6 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x144F JUMPI PUSH1 0x40 MLOAD PUSH32 0xE07C8DBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x145A PUSH2 0x15E2 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x152C PUSH2 0x1768 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x153D PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1546 DUP2 PUSH2 0x17D1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1551 PUSH2 0x1791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x155B PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1563 PUSH2 0x1855 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x156D PUSH2 0x1791 JUMP JUMPDEST PUSH2 0x1575 PUSH2 0x1877 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x157F PUSH2 0x1791 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x1589 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x15CB PUSH2 0xFD5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D8 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1613 DUP3 DUP3 PUSH2 0xB2B JUMP JUMPDEST PUSH2 0x1656 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164D SWAP3 SWAP2 SWAP1 PUSH2 0x2493 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1662 PUSH2 0x888 JUMP JUMPDEST PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1698 SWAP1 PUSH2 0x2504 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16CF PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x18D3 JUMP JUMPDEST PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x16FF DUP3 PUSH2 0x18DC JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x175B JUMPI PUSH2 0x1755 DUP3 DUP3 PUSH2 0x19A5 JUMP JUMPDEST POP PUSH2 0x1764 JUMP JUMPDEST PUSH2 0x1763 PUSH2 0x1A25 JUMP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1799 PUSH2 0x1A61 JUMP JUMPDEST PUSH2 0x17CF JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x17D9 PUSH2 0x1791 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1849 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1852 DUP2 PUSH2 0x1451 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x185D PUSH2 0x1791 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x187F PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x32 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1891 PUSH2 0x888 JUMP JUMPDEST ISZERO PUSH2 0x18D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18C8 SWAP1 PUSH2 0x256C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE SUB PUSH2 0x1937 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x4C9C8CE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1963 PUSH32 0x360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC PUSH0 SHL PUSH2 0x18D3 JUMP JUMPDEST PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x25CE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1A06 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1A0B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1A1B DUP6 DUP4 DUP4 PUSH2 0x1A7F JUMP JUMPDEST SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLVALUE GT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x40 MLOAD PUSH32 0xB398979F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1A6A PUSH2 0x1522 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1A94 JUMPI PUSH2 0x1A8F DUP3 PUSH2 0x1B0C JUMP JUMPDEST PUSH2 0x1B04 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1ABA JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1AFC JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AF3 SWAP2 SWAP1 PUSH2 0x1F02 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1B05 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1B1E JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD6BDA27500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B95 DUP2 PUSH2 0x1B61 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B9F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BB0 DUP2 PUSH2 0x1B8C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BCB JUMPI PUSH2 0x1BCA PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1BD8 DUP5 DUP3 DUP6 ADD PUSH2 0x1BA2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF5 DUP2 PUSH2 0x1BE1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C0E PUSH0 DUP4 ADD DUP5 PUSH2 0x1BEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C41 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5C JUMPI PUSH2 0x1C5B PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C69 DUP5 DUP3 DUP6 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C7B DUP2 PUSH2 0x1C14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C94 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CC3 DUP3 PUSH2 0x1C9A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CD3 DUP2 PUSH2 0x1CB9 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CEE DUP2 PUSH2 0x1CCA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D0A JUMPI PUSH2 0x1D09 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D17 DUP6 DUP3 DUP7 ADD PUSH2 0x1C33 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D28 DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D47 JUMPI PUSH2 0x1D46 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D54 DUP5 DUP3 DUP6 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1DAB DUP3 PUSH2 0x1D65 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DCA JUMPI PUSH2 0x1DC9 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DDC PUSH2 0x1B50 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE8 DUP3 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E07 JUMPI PUSH2 0x1E06 PUSH2 0x1D75 JUMP JUMPDEST JUMPDEST PUSH2 0x1E10 DUP3 PUSH2 0x1D65 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1E3D PUSH2 0x1E38 DUP5 PUSH2 0x1DED JUMP JUMPDEST PUSH2 0x1DD3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E59 JUMPI PUSH2 0x1E58 PUSH2 0x1D61 JUMP JUMPDEST JUMPDEST PUSH2 0x1E64 DUP5 DUP3 DUP6 PUSH2 0x1E1D JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E80 JUMPI PUSH2 0x1E7F PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E90 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E2B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EAF JUMPI PUSH2 0x1EAE PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EBC DUP6 DUP3 DUP7 ADD PUSH2 0x1CE0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EDD JUMPI PUSH2 0x1EDC PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x1EE9 DUP6 DUP3 DUP7 ADD PUSH2 0x1E6C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EFC DUP2 PUSH2 0x1CB9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F15 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EF3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F4D DUP3 PUSH2 0x1F1B JUMP JUMPDEST PUSH2 0x1F57 DUP2 DUP6 PUSH2 0x1F25 JUMP JUMPDEST SWAP4 POP PUSH2 0x1F67 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F35 JUMP JUMPDEST PUSH2 0x1F70 DUP2 PUSH2 0x1D65 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F93 DUP2 DUP5 PUSH2 0x1F43 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1FB8 JUMPI PUSH2 0x1FB7 PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FD5 JUMPI PUSH2 0x1FD4 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1FF1 JUMPI PUSH2 0x1FF0 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x200D JUMPI PUSH2 0x200C PUSH2 0x1D5D JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x202A JUMPI PUSH2 0x2029 PUSH2 0x1F9B JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x2046 JUMPI PUSH2 0x2045 PUSH2 0x1F9F JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x40 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2065 JUMPI PUSH2 0x2064 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2082 JUMPI PUSH2 0x2081 PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x208E DUP8 DUP3 DUP9 ADD PUSH2 0x1FA3 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20B1 JUMPI PUSH2 0x20B0 PUSH2 0x1B5D JUMP JUMPDEST JUMPDEST PUSH2 0x20BD DUP8 DUP3 DUP9 ADD PUSH2 0x1FF8 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x496E76616C696420616464726573730000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x20FF PUSH1 0xF DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x210A DUP3 PUSH2 0x20CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x212C DUP2 PUSH2 0x20F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x213C DUP2 PUSH2 0x1BE1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2146 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2157 DUP2 PUSH2 0x2133 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2172 JUMPI PUSH2 0x2171 PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x217F DUP5 DUP3 DUP6 ADD PUSH2 0x2149 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x54657374616D656E746F206A61206578697374652E2055736520612066756E63 PUSH0 DUP3 ADD MSTORE PUSH32 0x616F2064652065646963616F2E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E2 PUSH1 0x2D DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x21ED DUP3 PUSH2 0x2188 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x220F DUP2 PUSH2 0x21D6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2255 PUSH2 0x2250 PUSH2 0x224B DUP5 PUSH2 0x2216 JUMP JUMPDEST PUSH2 0x2232 JUMP JUMPDEST PUSH2 0x221F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2265 DUP2 PUSH2 0x223B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x227E PUSH0 DUP4 ADD DUP5 PUSH2 0x225C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C2076616C6F7220696E76616C PUSH0 DUP3 ADD MSTORE PUSH32 0x69646F0000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22DE PUSH1 0x23 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x22E9 DUP3 PUSH2 0x2284 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x230B DUP2 PUSH2 0x22D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C2061646963696F6E65206F73 PUSH0 DUP3 ADD MSTORE PUSH32 0x20686572646569726F7300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x236C PUSH1 0x2A DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2377 DUP3 PUSH2 0x2312 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2399 DUP2 PUSH2 0x2360 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x637265617465496E6865726974616E636528292C207175616E74696461646520 PUSH0 DUP3 ADD MSTORE PUSH32 0x646520656E64657265636F73206520706F7263656E746167656E732064696665 PUSH1 0x20 DUP3 ADD MSTORE PUSH32 0x72656E7465730000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2420 PUSH1 0x46 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x242B DUP3 PUSH2 0x23A0 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x244D DUP2 PUSH2 0x2414 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2462 DUP2 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x1B59 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x248A DUP5 DUP3 DUP6 ADD PUSH2 0x2454 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x24A6 PUSH0 DUP4 ADD DUP6 PUSH2 0x1EF3 JUMP JUMPDEST PUSH2 0x24B3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C72 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EE PUSH1 0x14 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x24F9 DUP3 PUSH2 0x24BA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x251B DUP2 PUSH2 0x24E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2556 PUSH1 0x10 DUP4 PUSH2 0x1F25 JUMP JUMPDEST SWAP2 POP PUSH2 0x2561 DUP3 PUSH2 0x2522 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2583 DUP2 PUSH2 0x254A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25A8 DUP3 PUSH2 0x258A JUMP JUMPDEST PUSH2 0x25B2 DUP2 DUP6 PUSH2 0x2594 JUMP JUMPDEST SWAP4 POP PUSH2 0x25C2 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1F35 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25D9 DUP3 DUP5 PUSH2 0x259E JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4F CODECOPY 0xDD SWAP12 0xAA 0xE9 0x27 CALLDATALOAD RETURN SWAP3 DUP11 0xD7 DUP4 PUSH25 0x48BFC497B4B82094F482FE23E64F31F09B1B64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "733:2800:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4759:191;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5246:136;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6348:245;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1438:65:0;;;;;;;;;;;;;:::i;:::-;;1946:201;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3150:381;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4161:214:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3708:134;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1879:84:5;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;965:34:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3155:101:2;;;;;;;;;;;;;:::i;:::-;;915:44:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1006:248;;;;;;;;;;;;;:::i;:::-;;1371:61;;;;;;;;;;;;;:::i;:::-;;2441:144:2;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3732:207:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2317:49;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1819:58:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5662:138:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2375:769:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3405:215:2;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3443:202:1;3528:4;3566:32;3551:47;;;:11;:47;;;;:87;;;;3602:36;3626:11;3602:23;:36::i;:::-;3551:87;3544:94;;3443:202;;;:::o;4759:191::-;4824:7;4843:30;4876:26;:24;:26::i;:::-;4843:59;;4919:1;:8;;:14;4928:4;4919:14;;;;;;;;;;;:24;;;4912:31;;;4759:191;;;:::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;6463:12;:10;:12::i;:::-;6441:34;;:18;:34;;;6437:102;;6498:30;;;;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;1438:65:0:-;2334:13:2;:11;:13::i;:::-;1486:10:0::1;:8;:10::i;:::-;1438:65::o:0;1946:201::-;2334:13:2;:11;:13::i;:::-;2108:32:0::1;2076:29;;:64;;;;;;;;;;;;;;;;;;1946:201:::0;:::o;3150:381::-;3244:1;3223:23;;:9;:23;;;3215:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;3276:11;3306:29;;;;;;;;;;;3291:76;;;3368:9;3291:87;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3290:88;3276:102;;3396:6;3388:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;3475:19;;;;;;;;;;;3462:51;;;3514:9;3462:62;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3205:326;3150:381;:::o;4161:214:4:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;811:66:12::1;3803:32:4;;3796:39;;3708:134:::0;:::o;1879:84:5:-;1926:4;1949:7;;;;;;;;;;;1942:14;;1879:84;:::o;965:34:0:-;;;;;;;;;;;;;:::o;2153:167::-;2334:13:2;:11;:13::i;:::-;2291:22:0::1;2269:19;;:44;;;;;;;;;;;;;;;;;;2153:167:::0;:::o;3155:101:2:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;915:44:0:-;;;;;;;;;;;;;:::o;1006:248::-;4158:30:3;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1057:26:0::1;1072:10;1057:14;:26::i;:::-;1130:24;:22;:24::i;:::-;1164:17;:15;:17::i;:::-;1191:24;:22;:24::i;:::-;1225:22;:20;:22::i;:::-;5068:14:3::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;1006:248:0:o;1371:61::-;2334:13:2;:11;:13::i;:::-;1417:8:0::1;:6;:8::i;:::-;1371:61::o:0;2441:144:2:-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;3732:207:1:-;3809:4;3825:30;3858:26;:24;:26::i;:::-;3825:59;;3901:1;:8;;:14;3910:4;3901:14;;;;;;;;;;;:22;;:31;3924:7;3901:31;;;;;;;;;;;;;;;;;;;;;;;;;3894:38;;;3732:207;;;;:::o;2317:49::-;2362:4;2317:49;;;:::o;1819:58:4:-;;;;;;;;;;;;;;;;;;;:::o;5662:138:1:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;:::-;;5662:138:::0;;;:::o;2375:769:0:-;2582:1;2569:9;:14;2561:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;2675:1;2654:10;;:17;;:22;2633:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;2796:13;;:20;;2775:10;;:17;;:41;2754:158;;;;;;;;;;;;:::i;:::-;;;;;;;;;2922:16;2941:10;2922:29;;2962:11;2992:29;;;;;;;;;;;2977:76;;;3054:8;2977:86;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2976:87;2962:101;;3081:6;3073:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;2505:639;;2375:769;;;;:::o;3405:215:2:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1035:146:8:-;1111:4;1149:25;1134:40;;;:11;:40;;;;1127:47;;1035:146;;;:::o;2787:177:1:-;2845:30;2920:28;2910:38;;2787:177;:::o;4148:103::-;4214:30;4225:4;4231:12;:10;:12::i;:::-;4214:10;:30::i;:::-;4148:103;:::o;7270:387::-;7347:4;7363:30;7396:26;:24;:26::i;:::-;7363:59;;7437:22;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7509:4;7475:1;:8;;:14;7484:4;7475:14;;;;;;;;;;;:22;;:31;7498:7;7475:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;7559:12;:10;:12::i;:::-;7532:40;;7550:7;7532:40;;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;7270:387;;;;;:::o;887:96:7:-;940:7;966:10;959:17;;887:96;:::o;7894:388:1:-;7972:4;7988:30;8021:26;:24;:26::i;:::-;7988:59;;8061:22;8069:4;8075:7;8061;:22::i;:::-;8057:219;;;8133:5;8099:1;:8;;:14;8108:4;8099:14;;;;;;;;;;;:22;;:31;8122:7;8099:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;8184:12;:10;:12::i;:::-;8157:40;;8175:7;8157:40;;8169:4;8157:40;;;;;;;;;;8218:4;8211:11;;;;;8057:219;8260:5;8253:12;;;7894:388;;;;;:::o;2658:162:2:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;2697:117:5:-;1750:16;:14;:16::i;:::-;2765:5:::1;2755:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;2785:22;2794:12;:10;:12::i;:::-;2785:22;;;;;;:::i;:::-;;;;;;;;2697:117::o:0;4578:312:4:-;4667:6;4650:23;;4658:4;4650:23;;;:120;;;;4764:6;4728:42;;:32;:30;:32::i;:::-;:42;;;;4650:120;4633:251;;;4844:29;;;;;;;;;;;;;;4633:251;4578:312::o;1260:105:0:-;2334:13:2;:11;:13::i;:::-;1260:105:0;:::o;6032:538:4:-;6149:17;6131:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;6127:437;;6535:17;6493:60;;;;;;;;;;;:::i;:::-;;;;;;;;6127:437;811:66:12;6233:32:4;;6225:4;:40;6221:120;;6321:4;6292:34;;;;;;;;;;;:::i;:::-;;;;;;;;6221:120;6354:54;6384:17;6403:4;6354:29;:54::i;:::-;6184:235;6032:538;;:::o;5007:213::-;5090:6;5073:23;;5081:4;5073:23;;;5069:145;;5174:29;;;;;;;;;;;;;;5069:145;5007:213::o;3774:248:2:-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;9071:205:3:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;1847:127:2:-;6929:20:3;:18;:20::i;:::-;1929:38:2::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;2970:67:4:-;6929:20:3;:18;:20::i;:::-;2970:67:4:o;1084:97:5:-;6929:20:3;:18;:20::i;:::-;1147:27:5::1;:25;:27::i;:::-;1084:97::o:0;1889:111:6:-;6929:20:3;:18;:20::i;:::-;1959:34:6::1;:32;:34::i;:::-;1889:111::o:0;3231:65:1:-;6929:20:3;:18;:20::i;:::-;3231:65:1:o;2450:115:5:-;1503:19;:17;:19::i;:::-;2519:4:::1;2509:7;::::0;:14:::1;;;;;;;;;;;;;;;;;;2538:20;2545:12;:10;:12::i;:::-;2538:20;;;;;;:::i;:::-;;;;;;;;2450:115::o:0;1192:159:2:-;1244:24;1313:22;1303:32;;1192:159;:::o;4381:197:1:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4547:7;4556:4;4514:47;;;;;;;;;;;;:::i;:::-;;;;;;;;4464:108;4381:197;;:::o;2209:106:5:-;2275:8;:6;:8::i;:::-;2267:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2209:106::o;1441:138:12:-;1493:7;1519:47;811:66;1546:19;;1519:26;:47::i;:::-;:53;;;;;;;;;;;;1512:60;;1441:138;:::o;2264:344::-;2355:37;2374:17;2355:18;:37::i;:::-;2425:17;2407:36;;;;;;;;;;;;2472:1;2458:4;:11;:15;2454:148;;;2489:53;2518:17;2537:4;2489:28;:53::i;:::-;;2454:148;;;2573:18;:16;:18::i;:::-;2454:148;2264:344;;:::o;8819:122:3:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;1980:235:2:-;6929:20:3;:18;:20::i;:::-;2100:1:2::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;1187:95:5:-;6929:20:3;:18;:20::i;:::-;1270:5:5::1;1260:7:::0;::::1;:15;;;;;;;;;;;;;;;;;;1187:95::o:0;2006:109:6:-;6929:20:3;:18;:20::i;:::-;1808:1:6::1;2086:7;:22;;;;2006:109::o:0;2031:106:5:-;2101:8;:6;:8::i;:::-;2100:9;2092:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;2031:106::o;1899:163:16:-;1960:21;2042:4;2032:14;;1899:163;;;:::o;1671:281:12:-;1781:1;1748:17;:29;;;:34;1744:119;;1834:17;1805:47;;;;;;;;;;;:::i;:::-;;;;;;;;1744:119;1928:17;1872:47;811:66;1899:19;;1872:26;:47::i;:::-;:53;;;:73;;;;;;;;;;;;;;;;;;1671:281;:::o;3916:253:14:-;3999:12;4024;4038:23;4065:6;:19;;4085:4;4065:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:67;;;;4107:55;4134:6;4142:7;4151:10;4107:26;:55::i;:::-;4100:62;;;;3916:253;;;;:::o;6113:122:12:-;6175:1;6163:9;:13;6159:70;;;6199:19;;;;;;;;;;;;;;6159:70;6113:122::o;8485:120:3:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;4437:582:14:-;4581:12;4610:7;4605:408;;4633:19;4641:10;4633:7;:19::i;:::-;4605:408;;;4878:1;4857:10;:17;:22;:49;;;;;4905:1;4883:6;:18;;;:23;4857:49;4853:119;;;4950:6;4933:24;;;;;;;;;;;:::i;:::-;;;;;;;;4853:119;4992:10;4985:17;;;;4605:408;4437:582;;;;;;:::o;5559:487::-;5710:1;5690:10;:17;:21;5686:354;;;5887:10;5881:17;5943:15;5930:10;5926:2;5922:19;5915:44;5686:354;6010:19;;;;;;;;;;;;;;7:75:18;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:126::-;2598:7;2638:42;2631:5;2627:54;2616:65;;2561:126;;;:::o;2693:96::-;2730:7;2759:24;2777:5;2759:24;:::i;:::-;2748:35;;2693:96;;;:::o;2795:122::-;2868:24;2886:5;2868:24;:::i;:::-;2861:5;2858:35;2848:63;;2907:1;2904;2897:12;2848:63;2795:122;:::o;2923:139::-;2969:5;3007:6;2994:20;2985:29;;3023:33;3050:5;3023:33;:::i;:::-;2923:139;;;;:::o;3068:474::-;3136:6;3144;3193:2;3181:9;3172:7;3168:23;3164:32;3161:119;;;3199:79;;:::i;:::-;3161:119;3319:1;3344:53;3389:7;3380:6;3369:9;3365:22;3344:53;:::i;:::-;3334:63;;3290:117;3446:2;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3417:118;3068:474;;;;;:::o;3548:329::-;3607:6;3656:2;3644:9;3635:7;3631:23;3627:32;3624:119;;;3662:79;;:::i;:::-;3624:119;3782:1;3807:53;3852:7;3843:6;3832:9;3828:22;3807:53;:::i;:::-;3797:63;;3753:117;3548:329;;;;:::o;3883:117::-;3992:1;3989;3982:12;4006:117;4115:1;4112;4105:12;4129:102;4170:6;4221:2;4217:7;4212:2;4205:5;4201:14;4197:28;4187:38;;4129:102;;;:::o;4237:180::-;4285:77;4282:1;4275:88;4382:4;4379:1;4372:15;4406:4;4403:1;4396:15;4423:281;4506:27;4528:4;4506:27;:::i;:::-;4498:6;4494:40;4636:6;4624:10;4621:22;4600:18;4588:10;4585:34;4582:62;4579:88;;;4647:18;;:::i;:::-;4579:88;4687:10;4683:2;4676:22;4466:238;4423:281;;:::o;4710:129::-;4744:6;4771:20;;:::i;:::-;4761:30;;4800:33;4828:4;4820:6;4800:33;:::i;:::-;4710:129;;;:::o;4845:307::-;4906:4;4996:18;4988:6;4985:30;4982:56;;;5018:18;;:::i;:::-;4982:56;5056:29;5078:6;5056:29;:::i;:::-;5048:37;;5140:4;5134;5130:15;5122:23;;4845:307;;;:::o;5158:148::-;5256:6;5251:3;5246;5233:30;5297:1;5288:6;5283:3;5279:16;5272:27;5158:148;;;:::o;5312:423::-;5389:5;5414:65;5430:48;5471:6;5430:48;:::i;:::-;5414:65;:::i;:::-;5405:74;;5502:6;5495:5;5488:21;5540:4;5533:5;5529:16;5578:3;5569:6;5564:3;5560:16;5557:25;5554:112;;;5585:79;;:::i;:::-;5554:112;5675:54;5722:6;5717:3;5712;5675:54;:::i;:::-;5395:340;5312:423;;;;;:::o;5754:338::-;5809:5;5858:3;5851:4;5843:6;5839:17;5835:27;5825:122;;5866:79;;:::i;:::-;5825:122;5983:6;5970:20;6008:78;6082:3;6074:6;6067:4;6059:6;6055:17;6008:78;:::i;:::-;5999:87;;5815:277;5754:338;;;;:::o;6098:652::-;6175:6;6183;6232:2;6220:9;6211:7;6207:23;6203:32;6200:119;;;6238:79;;:::i;:::-;6200:119;6358:1;6383:53;6428:7;6419:6;6408:9;6404:22;6383:53;:::i;:::-;6373:63;;6329:117;6513:2;6502:9;6498:18;6485:32;6544:18;6536:6;6533:30;6530:117;;;6566:79;;:::i;:::-;6530:117;6671:62;6725:7;6716:6;6705:9;6701:22;6671:62;:::i;:::-;6661:72;;6456:287;6098:652;;;;;:::o;6756:118::-;6843:24;6861:5;6843:24;:::i;:::-;6838:3;6831:37;6756:118;;:::o;6880:222::-;6973:4;7011:2;7000:9;6996:18;6988:26;;7024:71;7092:1;7081:9;7077:17;7068:6;7024:71;:::i;:::-;6880:222;;;;:::o;7108:99::-;7160:6;7194:5;7188:12;7178:22;;7108:99;;;:::o;7213:169::-;7297:11;7331:6;7326:3;7319:19;7371:4;7366:3;7362:14;7347:29;;7213:169;;;;:::o;7388:139::-;7477:6;7472:3;7467;7461:23;7518:1;7509:6;7504:3;7500:16;7493:27;7388:139;;;:::o;7533:377::-;7621:3;7649:39;7682:5;7649:39;:::i;:::-;7704:71;7768:6;7763:3;7704:71;:::i;:::-;7697:78;;7784:65;7842:6;7837:3;7830:4;7823:5;7819:16;7784:65;:::i;:::-;7874:29;7896:6;7874:29;:::i;:::-;7869:3;7865:39;7858:46;;7625:285;7533:377;;;;:::o;7916:313::-;8029:4;8067:2;8056:9;8052:18;8044:26;;8116:9;8110:4;8106:20;8102:1;8091:9;8087:17;8080:47;8144:78;8217:4;8208:6;8144:78;:::i;:::-;8136:86;;7916:313;;;;:::o;8235:117::-;8344:1;8341;8334:12;8358:117;8467:1;8464;8457:12;8498:568;8571:8;8581:6;8631:3;8624:4;8616:6;8612:17;8608:27;8598:122;;8639:79;;:::i;:::-;8598:122;8752:6;8739:20;8729:30;;8782:18;8774:6;8771:30;8768:117;;;8804:79;;:::i;:::-;8768:117;8918:4;8910:6;8906:17;8894:29;;8972:3;8964:4;8956:6;8952:17;8942:8;8938:32;8935:41;8932:128;;;8979:79;;:::i;:::-;8932:128;8498:568;;;;;:::o;9088:567::-;9160:8;9170:6;9220:3;9213:4;9205:6;9201:17;9197:27;9187:122;;9228:79;;:::i;:::-;9187:122;9341:6;9328:20;9318:30;;9371:18;9363:6;9360:30;9357:117;;;9393:79;;:::i;:::-;9357:117;9507:4;9499:6;9495:17;9483:29;;9561:3;9553:4;9545:6;9541:17;9531:8;9527:32;9524:41;9521:128;;;9568:79;;:::i;:::-;9521:128;9088:567;;;;;:::o;9661:932::-;9782:6;9790;9798;9806;9855:2;9843:9;9834:7;9830:23;9826:32;9823:119;;;9861:79;;:::i;:::-;9823:119;10009:1;9998:9;9994:17;9981:31;10039:18;10031:6;10028:30;10025:117;;;10061:79;;:::i;:::-;10025:117;10174:80;10246:7;10237:6;10226:9;10222:22;10174:80;:::i;:::-;10156:98;;;;9952:312;10331:2;10320:9;10316:18;10303:32;10362:18;10354:6;10351:30;10348:117;;;10384:79;;:::i;:::-;10348:117;10497:79;10568:7;10559:6;10548:9;10544:22;10497:79;:::i;:::-;10479:97;;;;10274:312;9661:932;;;;;;;:::o;10599:165::-;10739:17;10735:1;10727:6;10723:14;10716:41;10599:165;:::o;10770:366::-;10912:3;10933:67;10997:2;10992:3;10933:67;:::i;:::-;10926:74;;11009:93;11098:3;11009:93;:::i;:::-;11127:2;11122:3;11118:12;11111:19;;10770:366;;;:::o;11142:419::-;11308:4;11346:2;11335:9;11331:18;11323:26;;11395:9;11389:4;11385:20;11381:1;11370:9;11366:17;11359:47;11423:131;11549:4;11423:131;:::i;:::-;11415:139;;11142:419;;;:::o;11567:116::-;11637:21;11652:5;11637:21;:::i;:::-;11630:5;11627:32;11617:60;;11673:1;11670;11663:12;11617:60;11567:116;:::o;11689:137::-;11743:5;11774:6;11768:13;11759:22;;11790:30;11814:5;11790:30;:::i;:::-;11689:137;;;;:::o;11832:345::-;11899:6;11948:2;11936:9;11927:7;11923:23;11919:32;11916:119;;;11954:79;;:::i;:::-;11916:119;12074:1;12099:61;12152:7;12143:6;12132:9;12128:22;12099:61;:::i;:::-;12089:71;;12045:125;11832:345;;;;:::o;12183:232::-;12323:34;12319:1;12311:6;12307:14;12300:58;12392:15;12387:2;12379:6;12375:15;12368:40;12183:232;:::o;12421:366::-;12563:3;12584:67;12648:2;12643:3;12584:67;:::i;:::-;12577:74;;12660:93;12749:3;12660:93;:::i;:::-;12778:2;12773:3;12769:12;12762:19;;12421:366;;;:::o;12793:419::-;12959:4;12997:2;12986:9;12982:18;12974:26;;13046:9;13040:4;13036:20;13032:1;13021:9;13017:17;13010:47;13074:131;13200:4;13074:131;:::i;:::-;13066:139;;12793:419;;;:::o;13218:85::-;13263:7;13292:5;13281:16;;13218:85;;;:::o;13309:101::-;13345:7;13385:18;13378:5;13374:30;13363:41;;13309:101;;;:::o;13416:60::-;13444:3;13465:5;13458:12;;13416:60;;;:::o;13482:156::-;13539:9;13572:60;13589:42;13598:32;13624:5;13598:32;:::i;:::-;13589:42;:::i;:::-;13572:60;:::i;:::-;13559:73;;13482:156;;;:::o;13644:145::-;13738:44;13776:5;13738:44;:::i;:::-;13733:3;13726:57;13644:145;;:::o;13795:236::-;13895:4;13933:2;13922:9;13918:18;13910:26;;13946:78;14021:1;14010:9;14006:17;13997:6;13946:78;:::i;:::-;13795:236;;;;:::o;14037:222::-;14177:34;14173:1;14165:6;14161:14;14154:58;14246:5;14241:2;14233:6;14229:15;14222:30;14037:222;:::o;14265:366::-;14407:3;14428:67;14492:2;14487:3;14428:67;:::i;:::-;14421:74;;14504:93;14593:3;14504:93;:::i;:::-;14622:2;14617:3;14613:12;14606:19;;14265:366;;;:::o;14637:419::-;14803:4;14841:2;14830:9;14826:18;14818:26;;14890:9;14884:4;14880:20;14876:1;14865:9;14861:17;14854:47;14918:131;15044:4;14918:131;:::i;:::-;14910:139;;14637:419;;;:::o;15062:229::-;15202:34;15198:1;15190:6;15186:14;15179:58;15271:12;15266:2;15258:6;15254:15;15247:37;15062:229;:::o;15297:366::-;15439:3;15460:67;15524:2;15519:3;15460:67;:::i;:::-;15453:74;;15536:93;15625:3;15536:93;:::i;:::-;15654:2;15649:3;15645:12;15638:19;;15297:366;;;:::o;15669:419::-;15835:4;15873:2;15862:9;15858:18;15850:26;;15922:9;15916:4;15912:20;15908:1;15897:9;15893:17;15886:47;15950:131;16076:4;15950:131;:::i;:::-;15942:139;;15669:419;;;:::o;16094:294::-;16234:34;16230:1;16222:6;16218:14;16211:58;16303:34;16298:2;16290:6;16286:15;16279:59;16372:8;16367:2;16359:6;16355:15;16348:33;16094:294;:::o;16394:366::-;16536:3;16557:67;16621:2;16616:3;16557:67;:::i;:::-;16550:74;;16633:93;16722:3;16633:93;:::i;:::-;16751:2;16746:3;16742:12;16735:19;;16394:366;;;:::o;16766:419::-;16932:4;16970:2;16959:9;16955:18;16947:26;;17019:9;17013:4;17009:20;17005:1;16994:9;16990:17;16983:47;17047:131;17173:4;17047:131;:::i;:::-;17039:139;;16766:419;;;:::o;17191:143::-;17248:5;17279:6;17273:13;17264:22;;17295:33;17322:5;17295:33;:::i;:::-;17191:143;;;;:::o;17340:351::-;17410:6;17459:2;17447:9;17438:7;17434:23;17430:32;17427:119;;;17465:79;;:::i;:::-;17427:119;17585:1;17610:64;17666:7;17657:6;17646:9;17642:22;17610:64;:::i;:::-;17600:74;;17556:128;17340:351;;;;:::o;17697:332::-;17818:4;17856:2;17845:9;17841:18;17833:26;;17869:71;17937:1;17926:9;17922:17;17913:6;17869:71;:::i;:::-;17950:72;18018:2;18007:9;18003:18;17994:6;17950:72;:::i;:::-;17697:332;;;;;:::o;18035:170::-;18175:22;18171:1;18163:6;18159:14;18152:46;18035:170;:::o;18211:366::-;18353:3;18374:67;18438:2;18433:3;18374:67;:::i;:::-;18367:74;;18450:93;18539:3;18450:93;:::i;:::-;18568:2;18563:3;18559:12;18552:19;;18211:366;;;:::o;18583:419::-;18749:4;18787:2;18776:9;18772:18;18764:26;;18836:9;18830:4;18826:20;18822:1;18811:9;18807:17;18800:47;18864:131;18990:4;18864:131;:::i;:::-;18856:139;;18583:419;;;:::o;19008:166::-;19148:18;19144:1;19136:6;19132:14;19125:42;19008:166;:::o;19180:366::-;19322:3;19343:67;19407:2;19402:3;19343:67;:::i;:::-;19336:74;;19419:93;19508:3;19419:93;:::i;:::-;19537:2;19532:3;19528:12;19521:19;;19180:366;;;:::o;19552:419::-;19718:4;19756:2;19745:9;19741:18;19733:26;;19805:9;19799:4;19795:20;19791:1;19780:9;19776:17;19769:47;19833:131;19959:4;19833:131;:::i;:::-;19825:139;;19552:419;;;:::o;19977:98::-;20028:6;20062:5;20056:12;20046:22;;19977:98;;;:::o;20081:147::-;20182:11;20219:3;20204:18;;20081:147;;;;:::o;20234:386::-;20338:3;20366:38;20398:5;20366:38;:::i;:::-;20420:88;20501:6;20496:3;20420:88;:::i;:::-;20413:95;;20517:65;20575:6;20570:3;20563:4;20556:5;20552:16;20517:65;:::i;:::-;20607:6;20602:3;20598:16;20591:23;;20342:278;20234:386;;;;:::o;20626:271::-;20756:3;20778:93;20867:3;20858:6;20778:93;:::i;:::-;20771:100;;20888:3;20881:10;;20626:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1950800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "374",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"contractInheritanceManagement()": "2575",
								"contractProofOfLife()": "2641",
								"createInheritance(address[],uint16[])": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3196",
								"initialize()": "infinite",
								"owner()": "2700",
								"pause()": "infinite",
								"paused()": "2584",
								"proxiableUUID()": "infinite",
								"renounceOwnership()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setNewContractInheritanceManagement(address)": "infinite",
								"setNewContractProofOfLife(address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateProofOfLife(address)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1075"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 733,
									"end": 3533,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204f39dd9baae92735f3928ad7837848bfc497b4b82094f482fe23e64f31f09b1b64736f6c634300081a0033",
									".code": [
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "710EEF7A"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "91D14854"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "A217FDDF"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "AD3CB1CC"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "D547741F"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "E7A84BC3"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "710EEF7A"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "75BA6F71"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "8129FC1C"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4BD39BDC"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4BD39BDC"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4D1BA077"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "4F1EF286"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "52D1902D"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "6AF70684"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "248A9CA3"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "2F2FF15D"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "36568ABE"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 733,
											"end": 3533,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1438,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1946,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1946,
											"end": 2147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3150,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3150,
											"end": 3531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 965,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 965,
											"end": 999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2153,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2153,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 915,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 915,
											"end": 959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1006,
											"end": 1254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1371,
											"end": 1432,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2375,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2375,
											"end": 3144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3566,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3626,
											"end": 3637,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 3602,
											"end": 3638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4843,
											"end": 4873,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4876,
											"end": 4900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 4876,
											"end": 4902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 4876,
											"end": 4902,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4902,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4920,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4932,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4912,
											"end": 4943,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6463,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 6463,
											"end": 6475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6463,
											"end": 6475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1438,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1486,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1486,
											"end": 1496,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1486,
											"end": 1496,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1486,
											"end": 1496,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1438,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2108,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2076,
											"end": 2105,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1946,
											"end": 2147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3244,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3223,
											"end": 3246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 3215,
											"end": 3266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3215,
											"end": 3266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3287,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3306,
											"end": 3335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3367,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3367,
											"name": "PUSH",
											"source": 0,
											"value": "88C650FC"
										},
										{
											"begin": 3368,
											"end": 3377,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3291,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 3291,
											"end": 3378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 3291,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3290,
											"end": 3378,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3276,
											"end": 3378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3396,
											"end": 3402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3388,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 3388,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3475,
											"end": 3494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3513,
											"name": "PUSH",
											"source": 0,
											"value": "4D1BA077"
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3462,
											"end": 3524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3462,
											"end": 3524,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3205,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3150,
											"end": 3531,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2655,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2655,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 2655,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4294,
											"end": 4311,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4276,
											"end": 4312,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4276,
											"end": 4312,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4344,
											"end": 4361,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4363,
											"end": 4367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4343,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 4322,
											"end": 4368,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4322,
											"end": 4368,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4161,
											"end": 4375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3777,
											"end": 3784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2926,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2926,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2926,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3796,
											"end": 3835,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3708,
											"end": 3842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1956,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1879,
											"end": 1963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 965,
											"end": 999,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 965,
											"end": 999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 965,
											"end": 999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2291,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2269,
											"end": 2288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2269,
											"end": 2313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 915,
											"end": 959,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 915,
											"end": 959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 915,
											"end": 959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1006,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 3,
											"value": "194"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 3,
											"value": "196"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 3,
											"value": "197"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 3,
											"value": "198"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 3,
											"value": "199"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 3,
											"value": "200"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1072,
											"end": 1082,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1071,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 1057,
											"end": 1083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1057,
											"end": 1083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 1057,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1130,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 1130,
											"end": 1154,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 1130,
											"end": 1154,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1164,
											"end": 1179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1164,
											"end": 1181,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1164,
											"end": 1181,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 1164,
											"end": 1181,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1191,
											"end": 1213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 1191,
											"end": 1215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1191,
											"end": 1215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1191,
											"end": 1215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1247,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1225,
											"end": 1245,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1225,
											"end": 1247,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1225,
											"end": 1247,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1225,
											"end": 1247,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 3,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "214"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 3,
											"value": "213"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 3,
											"value": "212"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1006,
											"end": 1254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1371,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1417,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1417,
											"end": 1423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 1417,
											"end": 1425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1417,
											"end": 1425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1417,
											"end": 1425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1371,
											"end": 1432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3825,
											"end": 3855,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3858,
											"end": 3882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3858,
											"end": 3884,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3858,
											"end": 3884,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3825,
											"end": 3884,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3902,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3909,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3910,
											"end": 3914,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3923,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3931,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2366,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 4,
											"value": "352E302E30000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2569,
											"end": 2578,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2583,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 2561,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2561,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2675,
											"end": 2676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2671,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2671,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2654,
											"end": 2676,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 2633,
											"end": 2744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 2633,
											"end": 2744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2796,
											"end": 2816,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2785,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2785,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2792,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2775,
											"end": 2816,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 2754,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 2754,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2938,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2941,
											"end": 2951,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2922,
											"end": 2951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 2973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2992,
											"end": 3021,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 3053,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3053,
											"name": "PUSH",
											"source": 0,
											"value": "88C650FC"
										},
										{
											"begin": 3054,
											"end": 3062,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2977,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2977,
											"end": 3063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2977,
											"end": 3063,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2976,
											"end": 3063,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3063,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3063,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 3073,
											"end": 3137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 3073,
											"end": 3137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2505,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2375,
											"end": 3144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "tag",
											"source": 8,
											"value": "130"
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1111,
											"end": 1115,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1145,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1134,
											"end": 1174,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1127,
											"end": 1174,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1181,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1035,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2845,
											"end": 2875,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2920,
											"end": 2948,
											"name": "PUSH",
											"source": 1,
											"value": "2DD7BC7DEC4DCEEDDA775E58DD541E08A116C6C53815C0BD028192F7B626800"
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2910,
											"end": 2948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2964,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4231,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 4231,
											"end": 4243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4231,
											"end": 4243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4148,
											"end": 4251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7363,
											"end": 7393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7396,
											"end": 7420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7396,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 7396,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7476,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 7488,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7498,
											"end": 7505,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 7559,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 7559,
											"end": 7571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7270,
											"end": 7657,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7972,
											"end": 7976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7988,
											"end": 8018,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8021,
											"end": 8045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 8021,
											"end": 8047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 8021,
											"end": 8047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7988,
											"end": 8047,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 8069,
											"end": 8073,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8075,
											"end": 8082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8061,
											"end": 8083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 8061,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8133,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8107,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8122,
											"end": 8129,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8130,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8138,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 8184,
											"end": 8194,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 8184,
											"end": 8196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 8184,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8175,
											"end": 8182,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8173,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8157,
											"end": 8197,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 8218,
											"end": 8222,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 8211,
											"end": 8222,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 8057,
											"end": 8276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8265,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7894,
											"end": 8282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2762,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2794,
											"end": 2804,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2794,
											"end": 2806,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2785,
											"end": 2807,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "282"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4578,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1075"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4658,
											"end": 4662,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4764,
											"end": 4770,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1075"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 4728,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 4728,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 4728,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4770,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 4650,
											"end": 4770,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4873,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 4633,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1260,
											"end": 1365,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 1260,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1260,
											"end": 1365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6149,
											"end": 6166,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6181,
											"name": "PUSH",
											"source": 4,
											"value": "52D1902D"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 6131,
											"end": 6183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 6131,
											"end": 6183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6535,
											"end": 6552,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 6493,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "tag",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6553,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 6127,
											"end": 6564,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 12,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6265,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6229,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6225,
											"end": 6265,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6321,
											"end": 6325,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "AA1D49A400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 6292,
											"end": 6326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6292,
											"end": 6326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 6221,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 6384,
											"end": 6401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6403,
											"end": 6407,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 6354,
											"end": 6408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 6354,
											"end": 6408,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6184,
											"end": 6419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6032,
											"end": 6570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 5007,
											"end": 5220,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5090,
											"end": 5096,
											"name": "PUSHIMMUTABLE",
											"source": 4,
											"value": "1075"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5073,
											"end": 5096,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "E07C8DBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5174,
											"end": 5203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 5069,
											"end": 5214,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5007,
											"end": 5220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 3,
											"value": "310"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "313"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 2970,
											"end": 3037,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "319"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2970,
											"end": 3037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "322"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1084,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1889,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "327"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1959,
											"end": 1991,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 1959,
											"end": 1993,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 1959,
											"end": 1993,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1889,
											"end": 2000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "332"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3231,
											"end": 3296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 5,
											"value": "335"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 2545,
											"end": 2555,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2545,
											"end": 2557,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "338"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 2538,
											"end": 2558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "339"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2450,
											"end": 2565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 2,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4554,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4560,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 4514,
											"end": 4561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 5,
											"value": "279"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 2275,
											"end": 2281,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2275,
											"end": 2283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "tag",
											"source": 5,
											"value": "347"
										},
										{
											"begin": 2275,
											"end": 2283,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "350"
										},
										{
											"begin": 2267,
											"end": 2308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 5,
											"value": "349"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "tag",
											"source": 5,
											"value": "348"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2209,
											"end": 2315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 12,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1546,
											"end": 1565,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1545,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1519,
											"end": 1566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 1519,
											"end": 1566,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1572,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1512,
											"end": 1572,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1441,
											"end": 1579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1441,
											"end": 1579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 2355,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 2355,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2425,
											"end": 2442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2407,
											"end": 2443,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2472,
											"end": 2473,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2469,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2458,
											"end": 2473,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2518,
											"end": 2535,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2537,
											"end": 2541,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 2489,
											"end": 2542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2489,
											"end": 2542,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2573,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 2573,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 2573,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 2454,
											"end": 2602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2264,
											"end": 2608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 3,
											"value": "311"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 3,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 3,
											"value": "365"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 2,
											"value": "317"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "375"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1267,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1267,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 2006,
											"end": 2115,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "314"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1808,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2086,
											"end": 2093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2086,
											"end": 2108,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 5,
											"value": "336"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2101,
											"end": 2107,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 2101,
											"end": 2109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "tag",
											"source": 5,
											"value": "381"
										},
										{
											"begin": 2101,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "384"
										},
										{
											"begin": 2092,
											"end": 2130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "383"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "tag",
											"source": 5,
											"value": "382"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2031,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "tag",
											"source": 16,
											"value": "353"
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 1981,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2046,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2032,
											"end": 2046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1899,
											"end": 2062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1781,
											"end": 1782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1748,
											"end": 1765,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1777,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 1748,
											"end": 1782,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1834,
											"end": 1851,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "4C9C8CE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1805,
											"end": 1852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1805,
											"end": 1852,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 1744,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1945,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 811,
											"end": 877,
											"name": "PUSH",
											"source": 12,
											"value": "360894A13BA1A3210667C828492DB98DCA3E2076CC3735A920A3CA505D382BBC"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1899,
											"end": 1918,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 1872,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 1872,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1872,
											"end": 1945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1952,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1671,
											"end": 1952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "tag",
											"source": 14,
											"value": "359"
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3999,
											"end": 4011,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4024,
											"end": 4036,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4065,
											"end": 4084,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4085,
											"end": 4089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "392"
										},
										{
											"begin": 4065,
											"end": 4090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "391"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "395"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "tag",
											"source": 14,
											"value": "394"
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4065,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4023,
											"end": 4090,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 4134,
											"end": 4140,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4142,
											"end": 4149,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4151,
											"end": 4161,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 4107,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "tag",
											"source": 14,
											"value": "396"
										},
										{
											"begin": 4107,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4100,
											"end": 4162,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3916,
											"end": 4169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 6113,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6175,
											"end": 6176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6172,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6163,
											"end": 6176,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "B398979F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6199,
											"end": 6218,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 6159,
											"end": 6229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6113,
											"end": 6235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "195"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 14,
											"value": "397"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4581,
											"end": 4593,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4610,
											"end": 4617,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4641,
											"end": 4651,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 4633,
											"end": 4652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "tag",
											"source": 14,
											"value": "404"
										},
										{
											"begin": 4633,
											"end": 4652,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 14,
											"value": "403"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4878,
											"end": 4879,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4857,
											"end": 4867,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4874,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4879,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4905,
											"end": 4906,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4883,
											"end": 4889,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4901,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 4883,
											"end": 4906,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "tag",
											"source": 14,
											"value": "407"
										},
										{
											"begin": 4857,
											"end": 4906,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4950,
											"end": 4956,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "79"
										},
										{
											"begin": 4933,
											"end": 4957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "tag",
											"source": 14,
											"value": "409"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4933,
											"end": 4957,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "tag",
											"source": 14,
											"value": "408"
										},
										{
											"begin": 4853,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4992,
											"end": 5002,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 4985,
											"end": 5002,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "tag",
											"source": 14,
											"value": "406"
										},
										{
											"begin": 4605,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "tag",
											"source": 14,
											"value": "402"
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4437,
											"end": 5019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "tag",
											"source": 14,
											"value": "405"
										},
										{
											"begin": 5559,
											"end": 6046,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5710,
											"end": 5711,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5690,
											"end": 5700,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5707,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5690,
											"end": 5711,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5887,
											"end": 5897,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5881,
											"end": 5898,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5943,
											"end": 5958,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5930,
											"end": 5940,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5926,
											"end": 5928,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5959,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "tag",
											"source": 14,
											"value": "411"
										},
										{
											"begin": 5686,
											"end": 6040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "D6BDA27500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6010,
											"end": 6029,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "416"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 18,
											"value": "479"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 18,
											"value": "480"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "417"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 18,
											"value": "482"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 18,
											"value": "485"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 18,
											"value": "484"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "418"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 18,
											"value": "486"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 18,
											"value": "489"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "420"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 18,
											"value": "491"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 18,
											"value": "494"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 18,
											"value": "495"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 18,
											"value": "497"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "421"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "tag",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2638,
											"end": 2680,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2631,
											"end": 2636,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2627,
											"end": 2681,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2616,
											"end": 2681,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2687,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2561,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "tag",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2730,
											"end": 2737,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 2777,
											"end": 2782,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "425"
										},
										{
											"begin": 2759,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "tag",
											"source": 18,
											"value": "508"
										},
										{
											"begin": 2759,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2748,
											"end": 2783,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2789,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2693,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "tag",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 2886,
											"end": 2891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 2868,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "tag",
											"source": 18,
											"value": "510"
										},
										{
											"begin": 2868,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2861,
											"end": 2866,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2858,
											"end": 2893,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2907,
											"end": 2908,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2904,
											"end": 2905,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2897,
											"end": 2909,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "tag",
											"source": 18,
											"value": "511"
										},
										{
											"begin": 2848,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2795,
											"end": 2917,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2795,
											"end": 2917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "tag",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2969,
											"end": 2974,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3013,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2994,
											"end": 3014,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2985,
											"end": 3014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 3050,
											"end": 3055,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "427"
										},
										{
											"begin": 3023,
											"end": 3056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 3023,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 3062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3136,
											"end": 3142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3144,
											"end": 3150,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3193,
											"end": 3195,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3181,
											"end": 3190,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3172,
											"end": 3179,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3168,
											"end": 3191,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3164,
											"end": 3196,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 3199,
											"end": 3278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "tag",
											"source": 18,
											"value": "516"
										},
										{
											"begin": 3199,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "tag",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 3161,
											"end": 3280,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3319,
											"end": 3320,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3380,
											"end": 3386,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3369,
											"end": 3378,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3365,
											"end": 3387,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "423"
										},
										{
											"begin": 3344,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "tag",
											"source": 18,
											"value": "517"
										},
										{
											"begin": 3344,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3334,
											"end": 3397,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3290,
											"end": 3407,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3446,
											"end": 3448,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3508,
											"end": 3514,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3497,
											"end": 3506,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3493,
											"end": 3515,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 3472,
											"end": 3525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "tag",
											"source": 18,
											"value": "518"
										},
										{
											"begin": 3472,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3535,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3068,
											"end": 3542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3607,
											"end": 3613,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3658,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3635,
											"end": 3642,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3631,
											"end": 3654,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3627,
											"end": 3659,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 3662,
											"end": 3741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "tag",
											"source": 18,
											"value": "521"
										},
										{
											"begin": 3662,
											"end": 3741,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "tag",
											"source": 18,
											"value": "520"
										},
										{
											"begin": 3624,
											"end": 3743,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 3852,
											"end": 3859,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3843,
											"end": 3849,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3832,
											"end": 3841,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3828,
											"end": 3850,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 3807,
											"end": 3860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "tag",
											"source": 18,
											"value": "522"
										},
										{
											"begin": 3807,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3797,
											"end": 3860,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3753,
											"end": 3870,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3548,
											"end": 3877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3883,
											"end": 4000,
											"name": "tag",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 3883,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3992,
											"end": 3993,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3990,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3982,
											"end": 3994,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4006,
											"end": 4123,
											"name": "tag",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 4006,
											"end": 4123,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4115,
											"end": 4116,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4113,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4105,
											"end": 4117,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4129,
											"end": 4231,
											"name": "tag",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 4129,
											"end": 4231,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4223,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4217,
											"end": 4224,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 4212,
											"end": 4214,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4205,
											"end": 4210,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4201,
											"end": 4215,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4197,
											"end": 4225,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4187,
											"end": 4225,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4187,
											"end": 4225,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4129,
											"end": 4231,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4129,
											"end": 4231,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4129,
											"end": 4231,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4129,
											"end": 4231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4237,
											"end": 4417,
											"name": "tag",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 4237,
											"end": 4417,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4285,
											"end": 4362,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4282,
											"end": 4283,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4363,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4382,
											"end": 4386,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 4379,
											"end": 4380,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4372,
											"end": 4387,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4406,
											"end": 4410,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 4403,
											"end": 4404,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4396,
											"end": 4411,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4704,
											"name": "tag",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 4423,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 4528,
											"end": 4532,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 4506,
											"end": 4533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4506,
											"end": 4533,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 4506,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4498,
											"end": 4504,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4494,
											"end": 4534,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4636,
											"end": 4642,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4624,
											"end": 4634,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4621,
											"end": 4643,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4600,
											"end": 4618,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4588,
											"end": 4598,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4585,
											"end": 4619,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4582,
											"end": 4644,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 4579,
											"end": 4667,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4579,
											"end": 4667,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 4579,
											"end": 4667,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 4647,
											"end": 4665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 4647,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4579,
											"end": 4667,
											"name": "tag",
											"source": 18,
											"value": "529"
										},
										{
											"begin": 4579,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4687,
											"end": 4697,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4683,
											"end": 4685,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4698,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4466,
											"end": 4704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4704,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4423,
											"end": 4704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4710,
											"end": 4839,
											"name": "tag",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 4710,
											"end": 4839,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4744,
											"end": 4750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "413"
										},
										{
											"begin": 4771,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4761,
											"end": 4791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4800,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 4828,
											"end": 4832,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4820,
											"end": 4826,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4800,
											"end": 4833,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "433"
										},
										{
											"begin": 4800,
											"end": 4833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4800,
											"end": 4833,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 4800,
											"end": 4833,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4710,
											"end": 4839,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4710,
											"end": 4839,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4710,
											"end": 4839,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4710,
											"end": 4839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4845,
											"end": 5152,
											"name": "tag",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 4845,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4906,
											"end": 4910,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4988,
											"end": 4994,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4985,
											"end": 5015,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4982,
											"end": 5038,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4982,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 4982,
											"end": 5038,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "432"
										},
										{
											"begin": 5018,
											"end": 5036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 5018,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4982,
											"end": 5038,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 4982,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5056,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5056,
											"end": 5085,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 5056,
											"end": 5085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5056,
											"end": 5085,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 5056,
											"end": 5085,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5048,
											"end": 5085,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5048,
											"end": 5085,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5140,
											"end": 5144,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5134,
											"end": 5138,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5130,
											"end": 5145,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5122,
											"end": 5145,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5122,
											"end": 5145,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4845,
											"end": 5152,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4845,
											"end": 5152,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4845,
											"end": 5152,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4845,
											"end": 5152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5306,
											"name": "tag",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 5158,
											"end": 5306,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5262,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5251,
											"end": 5254,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5233,
											"end": 5263,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 5297,
											"end": 5298,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5288,
											"end": 5294,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5283,
											"end": 5286,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5279,
											"end": 5295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5299,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5306,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5158,
											"end": 5306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "tag",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5389,
											"end": 5394,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 5430,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5430,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "435"
										},
										{
											"begin": 5430,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5430,
											"end": 5478,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 5430,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5414,
											"end": 5479,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "434"
										},
										{
											"begin": 5414,
											"end": 5479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5414,
											"end": 5479,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 5414,
											"end": 5479,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5405,
											"end": 5479,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5495,
											"end": 5500,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5509,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5540,
											"end": 5544,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5533,
											"end": 5538,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5529,
											"end": 5545,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5578,
											"end": 5581,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5569,
											"end": 5575,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5567,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5560,
											"end": 5576,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5557,
											"end": 5582,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5666,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 5554,
											"end": 5666,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 5585,
											"end": 5664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "430"
										},
										{
											"begin": 5585,
											"end": 5664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5585,
											"end": 5664,
											"name": "tag",
											"source": 18,
											"value": "543"
										},
										{
											"begin": 5585,
											"end": 5664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5554,
											"end": 5666,
											"name": "tag",
											"source": 18,
											"value": "542"
										},
										{
											"begin": 5554,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5675,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 5722,
											"end": 5728,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5717,
											"end": 5720,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5712,
											"end": 5715,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 5675,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "436"
										},
										{
											"begin": 5675,
											"end": 5729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5675,
											"end": 5729,
											"name": "tag",
											"source": 18,
											"value": "544"
										},
										{
											"begin": 5675,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5395,
											"end": 5735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5312,
											"end": 5735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "tag",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5809,
											"end": 5814,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5858,
											"end": 5861,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5851,
											"end": 5855,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 5843,
											"end": 5849,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5839,
											"end": 5856,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5835,
											"end": 5862,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5825,
											"end": 5947,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 5825,
											"end": 5947,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5866,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 5866,
											"end": 5945,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 5866,
											"end": 5945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5866,
											"end": 5945,
											"name": "tag",
											"source": 18,
											"value": "547"
										},
										{
											"begin": 5866,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5825,
											"end": 5947,
											"name": "tag",
											"source": 18,
											"value": "546"
										},
										{
											"begin": 5825,
											"end": 5947,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5983,
											"end": 5989,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5970,
											"end": 5990,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6008,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 6082,
											"end": 6085,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 6074,
											"end": 6080,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6059,
											"end": 6065,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6055,
											"end": 6072,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6008,
											"end": 6086,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "437"
										},
										{
											"begin": 6008,
											"end": 6086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6008,
											"end": 6086,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 6008,
											"end": 6086,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5999,
											"end": 6086,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5999,
											"end": 6086,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5815,
											"end": 6092,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5754,
											"end": 6092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6175,
											"end": 6181,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6183,
											"end": 6189,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6232,
											"end": 6234,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6220,
											"end": 6229,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6211,
											"end": 6218,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6207,
											"end": 6230,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 6203,
											"end": 6235,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 6200,
											"end": 6319,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6200,
											"end": 6319,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 6200,
											"end": 6319,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 6238,
											"end": 6317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "tag",
											"source": 18,
											"value": "551"
										},
										{
											"begin": 6238,
											"end": 6317,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6200,
											"end": 6319,
											"name": "tag",
											"source": 18,
											"value": "550"
										},
										{
											"begin": 6200,
											"end": 6319,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6358,
											"end": 6359,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6383,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 6428,
											"end": 6435,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6419,
											"end": 6425,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6408,
											"end": 6417,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6404,
											"end": 6426,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "428"
										},
										{
											"begin": 6383,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6383,
											"end": 6436,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 6383,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6373,
											"end": 6436,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6373,
											"end": 6436,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6329,
											"end": 6446,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6485,
											"end": 6517,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 6544,
											"end": 6562,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6533,
											"end": 6563,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6647,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 6530,
											"end": 6647,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 6566,
											"end": 6645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 6566,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6647,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 6530,
											"end": 6647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6671,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 6725,
											"end": 6732,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6705,
											"end": 6714,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 6701,
											"end": 6723,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6671,
											"end": 6733,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "438"
										},
										{
											"begin": 6671,
											"end": 6733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6671,
											"end": 6733,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 6671,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6661,
											"end": 6733,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6661,
											"end": 6733,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6456,
											"end": 6743,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6098,
											"end": 6750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6756,
											"end": 6874,
											"name": "tag",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 6756,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 6861,
											"end": 6866,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "426"
										},
										{
											"begin": 6843,
											"end": 6867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "tag",
											"source": 18,
											"value": "557"
										},
										{
											"begin": 6843,
											"end": 6867,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6838,
											"end": 6841,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6831,
											"end": 6868,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6756,
											"end": 6874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6756,
											"end": 6874,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6756,
											"end": 6874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6973,
											"end": 6977,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7013,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7000,
											"end": 7009,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6996,
											"end": 7014,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6988,
											"end": 7014,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6988,
											"end": 7014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7024,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7081,
											"end": 7090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7077,
											"end": 7094,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7068,
											"end": 7074,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7024,
											"end": 7095,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 7024,
											"end": 7095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7024,
											"end": 7095,
											"name": "tag",
											"source": 18,
											"value": "559"
										},
										{
											"begin": 7024,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 7102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7207,
											"name": "tag",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 7108,
											"end": 7207,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7160,
											"end": 7166,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7199,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7188,
											"end": 7200,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7178,
											"end": 7200,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7207,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7207,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7207,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7108,
											"end": 7207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "tag",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7297,
											"end": 7308,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7331,
											"end": 7337,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7326,
											"end": 7329,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7319,
											"end": 7338,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7371,
											"end": 7375,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7366,
											"end": 7369,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7362,
											"end": 7376,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7347,
											"end": 7376,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7347,
											"end": 7376,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7213,
											"end": 7382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7527,
											"name": "tag",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 7388,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7477,
											"end": 7483,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7472,
											"end": 7475,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7467,
											"end": 7470,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7461,
											"end": 7484,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 7518,
											"end": 7519,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7509,
											"end": 7515,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7504,
											"end": 7507,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7500,
											"end": 7516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7493,
											"end": 7520,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7388,
											"end": 7527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "tag",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7621,
											"end": 7624,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 7682,
											"end": 7687,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "440"
										},
										{
											"begin": 7649,
											"end": 7688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "tag",
											"source": 18,
											"value": "564"
										},
										{
											"begin": 7649,
											"end": 7688,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7763,
											"end": 7766,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 7704,
											"end": 7775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7704,
											"end": 7775,
											"name": "tag",
											"source": 18,
											"value": "565"
										},
										{
											"begin": 7704,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7697,
											"end": 7775,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 7697,
											"end": 7775,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 7842,
											"end": 7848,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7837,
											"end": 7840,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 7830,
											"end": 7834,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7828,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 7819,
											"end": 7835,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 7784,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7784,
											"end": 7849,
											"name": "tag",
											"source": 18,
											"value": "566"
										},
										{
											"begin": 7784,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 7896,
											"end": 7902,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "431"
										},
										{
											"begin": 7874,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 7874,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7869,
											"end": 7872,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7865,
											"end": 7904,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7858,
											"end": 7904,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7858,
											"end": 7904,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7625,
											"end": 7910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7533,
											"end": 7910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8067,
											"end": 8069,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8056,
											"end": 8065,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8052,
											"end": 8070,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8044,
											"end": 8070,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8116,
											"end": 8125,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8110,
											"end": 8114,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8106,
											"end": 8126,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8102,
											"end": 8103,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8100,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8087,
											"end": 8104,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8080,
											"end": 8127,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8144,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8208,
											"end": 8214,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8144,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "443"
										},
										{
											"begin": 8144,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8144,
											"end": 8222,
											"name": "tag",
											"source": 18,
											"value": "569"
										},
										{
											"begin": 8144,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8136,
											"end": 8222,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8136,
											"end": 8222,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 7916,
											"end": 8229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8235,
											"end": 8352,
											"name": "tag",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 8235,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8344,
											"end": 8345,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8341,
											"end": 8342,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8334,
											"end": 8346,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8358,
											"end": 8475,
											"name": "tag",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 8358,
											"end": 8475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8467,
											"end": 8468,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8464,
											"end": 8465,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8457,
											"end": 8469,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "tag",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8571,
											"end": 8579,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8581,
											"end": 8587,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8631,
											"end": 8634,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8624,
											"end": 8628,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 8616,
											"end": 8622,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 8612,
											"end": 8629,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8608,
											"end": 8635,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 8598,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 8598,
											"end": 8720,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8639,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 8639,
											"end": 8718,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 8639,
											"end": 8718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8639,
											"end": 8718,
											"name": "tag",
											"source": 18,
											"value": "574"
										},
										{
											"begin": 8639,
											"end": 8718,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8598,
											"end": 8720,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 8598,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8752,
											"end": 8758,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8739,
											"end": 8759,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 8729,
											"end": 8759,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8729,
											"end": 8759,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8782,
											"end": 8800,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8774,
											"end": 8780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8771,
											"end": 8801,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 8804,
											"end": 8883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "tag",
											"source": 18,
											"value": "576"
										},
										{
											"begin": 8804,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "tag",
											"source": 18,
											"value": "575"
										},
										{
											"begin": 8768,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8918,
											"end": 8922,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8906,
											"end": 8923,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8894,
											"end": 8923,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8894,
											"end": 8923,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8972,
											"end": 8975,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8964,
											"end": 8968,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8956,
											"end": 8962,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8952,
											"end": 8969,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 8942,
											"end": 8950,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 8938,
											"end": 8970,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8935,
											"end": 8976,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9060,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 8932,
											"end": 9060,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 8979,
											"end": 9058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "tag",
											"source": 18,
											"value": "578"
										},
										{
											"begin": 8979,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8932,
											"end": 9060,
											"name": "tag",
											"source": 18,
											"value": "577"
										},
										{
											"begin": 8932,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8498,
											"end": 9066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "tag",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9160,
											"end": 9168,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9170,
											"end": 9176,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9220,
											"end": 9223,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9213,
											"end": 9217,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 9205,
											"end": 9211,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9201,
											"end": 9218,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9197,
											"end": 9224,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9187,
											"end": 9309,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 9187,
											"end": 9309,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "429"
										},
										{
											"begin": 9228,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "tag",
											"source": 18,
											"value": "581"
										},
										{
											"begin": 9228,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9187,
											"end": 9309,
											"name": "tag",
											"source": 18,
											"value": "580"
										},
										{
											"begin": 9187,
											"end": 9309,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9341,
											"end": 9347,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9328,
											"end": 9348,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9318,
											"end": 9348,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9371,
											"end": 9389,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9360,
											"end": 9390,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9357,
											"end": 9474,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9357,
											"end": 9474,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 9357,
											"end": 9474,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9393,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 9393,
											"end": 9472,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "444"
										},
										{
											"begin": 9393,
											"end": 9472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9393,
											"end": 9472,
											"name": "tag",
											"source": 18,
											"value": "583"
										},
										{
											"begin": 9393,
											"end": 9472,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9357,
											"end": 9474,
											"name": "tag",
											"source": 18,
											"value": "582"
										},
										{
											"begin": 9357,
											"end": 9474,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9507,
											"end": 9511,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9499,
											"end": 9505,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9495,
											"end": 9512,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9483,
											"end": 9512,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9483,
											"end": 9512,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9561,
											"end": 9564,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9553,
											"end": 9557,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 9545,
											"end": 9551,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9541,
											"end": 9558,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9531,
											"end": 9539,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 9527,
											"end": 9559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9524,
											"end": 9565,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9521,
											"end": 9649,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9521,
											"end": 9649,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 9521,
											"end": 9649,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9568,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 9568,
											"end": 9647,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "445"
										},
										{
											"begin": 9568,
											"end": 9647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9568,
											"end": 9647,
											"name": "tag",
											"source": 18,
											"value": "585"
										},
										{
											"begin": 9568,
											"end": 9647,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9521,
											"end": 9649,
											"name": "tag",
											"source": 18,
											"value": "584"
										},
										{
											"begin": 9521,
											"end": 9649,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9088,
											"end": 9655,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9782,
											"end": 9788,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9790,
											"end": 9796,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9798,
											"end": 9804,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9806,
											"end": 9812,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9855,
											"end": 9857,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 9843,
											"end": 9852,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9834,
											"end": 9841,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 9830,
											"end": 9853,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 9826,
											"end": 9858,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 9823,
											"end": 9942,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9823,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 9823,
											"end": 9942,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9861,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 9861,
											"end": 9940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 9861,
											"end": 9940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9861,
											"end": 9940,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 9861,
											"end": 9940,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9823,
											"end": 9942,
											"name": "tag",
											"source": 18,
											"value": "587"
										},
										{
											"begin": 9823,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10009,
											"end": 10010,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 9994,
											"end": 10011,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9981,
											"end": 10012,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10039,
											"end": 10057,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10031,
											"end": 10037,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10028,
											"end": 10058,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10025,
											"end": 10142,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10025,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 10025,
											"end": 10142,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10061,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 10061,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 10061,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10061,
											"end": 10140,
											"name": "tag",
											"source": 18,
											"value": "590"
										},
										{
											"begin": 10061,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10025,
											"end": 10142,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 10025,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10174,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 10246,
											"end": 10253,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10237,
											"end": 10243,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10226,
											"end": 10235,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 10222,
											"end": 10244,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10174,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "446"
										},
										{
											"begin": 10174,
											"end": 10254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10174,
											"end": 10254,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 10174,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10156,
											"end": 10254,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10156,
											"end": 10254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10156,
											"end": 10254,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 10156,
											"end": 10254,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9952,
											"end": 10264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10331,
											"end": 10333,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10329,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10316,
											"end": 10334,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10303,
											"end": 10335,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 10362,
											"end": 10380,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10354,
											"end": 10360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10351,
											"end": 10381,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10465,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10465,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 10348,
											"end": 10465,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10384,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 10384,
											"end": 10463,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "415"
										},
										{
											"begin": 10384,
											"end": 10463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10384,
											"end": 10463,
											"name": "tag",
											"source": 18,
											"value": "593"
										},
										{
											"begin": 10384,
											"end": 10463,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10348,
											"end": 10465,
											"name": "tag",
											"source": 18,
											"value": "592"
										},
										{
											"begin": 10348,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 10568,
											"end": 10575,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 10559,
											"end": 10565,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10548,
											"end": 10557,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 10544,
											"end": 10566,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "447"
										},
										{
											"begin": 10497,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10497,
											"end": 10576,
											"name": "tag",
											"source": 18,
											"value": "594"
										},
										{
											"begin": 10497,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10479,
											"end": 10576,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10479,
											"end": 10576,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10479,
											"end": 10576,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 10479,
											"end": 10576,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10274,
											"end": 10586,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 9661,
											"end": 10593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10599,
											"end": 10764,
											"name": "tag",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 10599,
											"end": 10764,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10739,
											"end": 10756,
											"name": "PUSH",
											"source": 18,
											"value": "496E76616C696420616464726573730000000000000000000000000000000000"
										},
										{
											"begin": 10735,
											"end": 10736,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10727,
											"end": 10733,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10723,
											"end": 10737,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10716,
											"end": 10757,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10599,
											"end": 10764,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10599,
											"end": 10764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10770,
											"end": 11136,
											"name": "tag",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 10770,
											"end": 11136,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10912,
											"end": 10915,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10933,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 10997,
											"end": 10999,
											"name": "PUSH",
											"source": 18,
											"value": "F"
										},
										{
											"begin": 10992,
											"end": 10995,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 11000,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 10933,
											"end": 11000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10933,
											"end": 11000,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 10933,
											"end": 11000,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10926,
											"end": 11000,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10926,
											"end": 11000,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11009,
											"end": 11102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 11098,
											"end": 11101,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11009,
											"end": 11102,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "448"
										},
										{
											"begin": 11009,
											"end": 11102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11009,
											"end": 11102,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 11009,
											"end": 11102,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11127,
											"end": 11129,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11122,
											"end": 11125,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11118,
											"end": 11130,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11111,
											"end": 11130,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11111,
											"end": 11130,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10770,
											"end": 11136,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10770,
											"end": 11136,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10770,
											"end": 11136,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10770,
											"end": 11136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11142,
											"end": 11561,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 11142,
											"end": 11561,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11308,
											"end": 11312,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11346,
											"end": 11348,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11335,
											"end": 11344,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11331,
											"end": 11349,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11323,
											"end": 11349,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11323,
											"end": 11349,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11395,
											"end": 11404,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11389,
											"end": 11393,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11385,
											"end": 11405,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11381,
											"end": 11382,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11370,
											"end": 11379,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11366,
											"end": 11383,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11359,
											"end": 11406,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 11549,
											"end": 11553,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "449"
										},
										{
											"begin": 11423,
											"end": 11554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11554,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 11423,
											"end": 11554,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11554,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11415,
											"end": 11554,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11142,
											"end": 11561,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11142,
											"end": 11561,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11142,
											"end": 11561,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11142,
											"end": 11561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11567,
											"end": 11683,
											"name": "tag",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 11567,
											"end": 11683,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11637,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 11652,
											"end": 11657,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11637,
											"end": 11658,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "419"
										},
										{
											"begin": 11637,
											"end": 11658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11637,
											"end": 11658,
											"name": "tag",
											"source": 18,
											"value": "602"
										},
										{
											"begin": 11637,
											"end": 11658,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11630,
											"end": 11635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11627,
											"end": 11659,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11677,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 11617,
											"end": 11677,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11673,
											"end": 11674,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11670,
											"end": 11671,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11663,
											"end": 11675,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 11617,
											"end": 11677,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 11617,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11567,
											"end": 11683,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11567,
											"end": 11683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "tag",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11743,
											"end": 11748,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11768,
											"end": 11781,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 11759,
											"end": 11781,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11759,
											"end": 11781,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11790,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 11814,
											"end": 11819,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11790,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "450"
										},
										{
											"begin": 11790,
											"end": 11820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11790,
											"end": 11820,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 11790,
											"end": 11820,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11689,
											"end": 11826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11899,
											"end": 11905,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11948,
											"end": 11950,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11936,
											"end": 11945,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11927,
											"end": 11934,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11923,
											"end": 11946,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 11919,
											"end": 11951,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 11916,
											"end": 12035,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11916,
											"end": 12035,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 11916,
											"end": 12035,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 11954,
											"end": 12033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "tag",
											"source": 18,
											"value": "608"
										},
										{
											"begin": 11954,
											"end": 12033,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11916,
											"end": 12035,
											"name": "tag",
											"source": 18,
											"value": "607"
										},
										{
											"begin": 11916,
											"end": 12035,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12074,
											"end": 12075,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12099,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 12152,
											"end": 12159,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12143,
											"end": 12149,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12132,
											"end": 12141,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12128,
											"end": 12150,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12099,
											"end": 12160,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "451"
										},
										{
											"begin": 12099,
											"end": 12160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12099,
											"end": 12160,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 12099,
											"end": 12160,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12089,
											"end": 12160,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12089,
											"end": 12160,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12170,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11832,
											"end": 12177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12183,
											"end": 12415,
											"name": "tag",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 12183,
											"end": 12415,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12323,
											"end": 12357,
											"name": "PUSH",
											"source": 18,
											"value": "54657374616D656E746F206A61206578697374652E2055736520612066756E63"
										},
										{
											"begin": 12319,
											"end": 12320,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12307,
											"end": 12321,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12300,
											"end": 12358,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12392,
											"end": 12407,
											"name": "PUSH",
											"source": 18,
											"value": "616F2064652065646963616F2E00000000000000000000000000000000000000"
										},
										{
											"begin": 12387,
											"end": 12389,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12379,
											"end": 12385,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12375,
											"end": 12390,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12368,
											"end": 12408,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12183,
											"end": 12415,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12183,
											"end": 12415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12787,
											"name": "tag",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 12421,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12563,
											"end": 12566,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12584,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 12648,
											"end": 12650,
											"name": "PUSH",
											"source": 18,
											"value": "2D"
										},
										{
											"begin": 12643,
											"end": 12646,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12584,
											"end": 12651,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 12584,
											"end": 12651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12584,
											"end": 12651,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 12584,
											"end": 12651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12577,
											"end": 12651,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12577,
											"end": 12651,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12660,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 12749,
											"end": 12752,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12660,
											"end": 12753,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "452"
										},
										{
											"begin": 12660,
											"end": 12753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12660,
											"end": 12753,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 12660,
											"end": 12753,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12778,
											"end": 12780,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 12773,
											"end": 12776,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12769,
											"end": 12781,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12762,
											"end": 12781,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12762,
											"end": 12781,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12787,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12787,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12787,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12421,
											"end": 12787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12793,
											"end": 13212,
											"name": "tag",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 12793,
											"end": 13212,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12959,
											"end": 12963,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 12986,
											"end": 12995,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12974,
											"end": 13000,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12974,
											"end": 13000,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13046,
											"end": 13055,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13040,
											"end": 13044,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13036,
											"end": 13056,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 13032,
											"end": 13033,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13021,
											"end": 13030,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13017,
											"end": 13034,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13010,
											"end": 13057,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13074,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 13200,
											"end": 13204,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13074,
											"end": 13205,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "453"
										},
										{
											"begin": 13074,
											"end": 13205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13074,
											"end": 13205,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 13074,
											"end": 13205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13066,
											"end": 13205,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13066,
											"end": 13205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12793,
											"end": 13212,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 12793,
											"end": 13212,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12793,
											"end": 13212,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12793,
											"end": 13212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13218,
											"end": 13303,
											"name": "tag",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 13218,
											"end": 13303,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13263,
											"end": 13270,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13292,
											"end": 13297,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13297,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13281,
											"end": 13297,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13218,
											"end": 13303,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13218,
											"end": 13303,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13218,
											"end": 13303,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13218,
											"end": 13303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13309,
											"end": 13410,
											"name": "tag",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 13309,
											"end": 13410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13345,
											"end": 13352,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13385,
											"end": 13403,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13378,
											"end": 13383,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13374,
											"end": 13404,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13363,
											"end": 13404,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13363,
											"end": 13404,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13309,
											"end": 13410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13309,
											"end": 13410,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13309,
											"end": 13410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13309,
											"end": 13410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13416,
											"end": 13476,
											"name": "tag",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 13416,
											"end": 13476,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13444,
											"end": 13447,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13465,
											"end": 13470,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13458,
											"end": 13470,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13458,
											"end": 13470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13416,
											"end": 13476,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13416,
											"end": 13476,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13416,
											"end": 13476,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13416,
											"end": 13476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13638,
											"name": "tag",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 13482,
											"end": 13638,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13539,
											"end": 13548,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13572,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 13589,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 13598,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 13624,
											"end": 13629,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13598,
											"end": 13630,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "454"
										},
										{
											"begin": 13598,
											"end": 13630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13598,
											"end": 13630,
											"name": "tag",
											"source": 18,
											"value": "622"
										},
										{
											"begin": 13598,
											"end": 13630,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13589,
											"end": 13631,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "456"
										},
										{
											"begin": 13589,
											"end": 13631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13589,
											"end": 13631,
											"name": "tag",
											"source": 18,
											"value": "621"
										},
										{
											"begin": 13589,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13572,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "455"
										},
										{
											"begin": 13572,
											"end": 13632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13572,
											"end": 13632,
											"name": "tag",
											"source": 18,
											"value": "620"
										},
										{
											"begin": 13572,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13559,
											"end": 13632,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13559,
											"end": 13632,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13638,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13638,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13638,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13482,
											"end": 13638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13644,
											"end": 13789,
											"name": "tag",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 13644,
											"end": 13789,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13738,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 13776,
											"end": 13781,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13738,
											"end": 13782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "457"
										},
										{
											"begin": 13738,
											"end": 13782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13738,
											"end": 13782,
											"name": "tag",
											"source": 18,
											"value": "624"
										},
										{
											"begin": 13738,
											"end": 13782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13733,
											"end": 13736,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13726,
											"end": 13783,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13644,
											"end": 13789,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13644,
											"end": 13789,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13644,
											"end": 13789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "tag",
											"source": 18,
											"value": "214"
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13895,
											"end": 13899,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13933,
											"end": 13935,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13922,
											"end": 13931,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13918,
											"end": 13936,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13910,
											"end": 13936,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13910,
											"end": 13936,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13946,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 14021,
											"end": 14022,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14010,
											"end": 14019,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14006,
											"end": 14023,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13997,
											"end": 14003,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13946,
											"end": 14024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "458"
										},
										{
											"begin": 13946,
											"end": 14024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13946,
											"end": 14024,
											"name": "tag",
											"source": 18,
											"value": "626"
										},
										{
											"begin": 13946,
											"end": 14024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13795,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14037,
											"end": 14259,
											"name": "tag",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 14037,
											"end": 14259,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14177,
											"end": 14211,
											"name": "PUSH",
											"source": 18,
											"value": "637265617465496E6865726974616E636528292C2076616C6F7220696E76616C"
										},
										{
											"begin": 14173,
											"end": 14174,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14165,
											"end": 14171,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14161,
											"end": 14175,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14154,
											"end": 14212,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14246,
											"end": 14251,
											"name": "PUSH",
											"source": 18,
											"value": "69646F0000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14241,
											"end": 14243,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14233,
											"end": 14239,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14229,
											"end": 14244,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14222,
											"end": 14252,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14037,
											"end": 14259,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14037,
											"end": 14259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "tag",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14407,
											"end": 14410,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 14492,
											"end": 14494,
											"name": "PUSH",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 14487,
											"end": 14490,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 14428,
											"end": 14495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "tag",
											"source": 18,
											"value": "629"
										},
										{
											"begin": 14428,
											"end": 14495,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14421,
											"end": 14495,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 14593,
											"end": 14596,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "459"
										},
										{
											"begin": 14504,
											"end": 14597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "tag",
											"source": 18,
											"value": "630"
										},
										{
											"begin": 14504,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14622,
											"end": 14624,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 14617,
											"end": 14620,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14613,
											"end": 14625,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14265,
											"end": 14631,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14265,
											"end": 14631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "tag",
											"source": 18,
											"value": "233"
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14803,
											"end": 14807,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14841,
											"end": 14843,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14830,
											"end": 14839,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14826,
											"end": 14844,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14818,
											"end": 14844,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14890,
											"end": 14899,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14880,
											"end": 14900,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14876,
											"end": 14877,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14865,
											"end": 14874,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14861,
											"end": 14878,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14854,
											"end": 14901,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 15044,
											"end": 15048,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "460"
										},
										{
											"begin": 14918,
											"end": 15049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "tag",
											"source": 18,
											"value": "632"
										},
										{
											"begin": 14918,
											"end": 15049,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14910,
											"end": 15049,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 15056,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 14637,
											"end": 15056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15062,
											"end": 15291,
											"name": "tag",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 15062,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15202,
											"end": 15236,
											"name": "PUSH",
											"source": 18,
											"value": "637265617465496E6865726974616E636528292C2061646963696F6E65206F73"
										},
										{
											"begin": 15198,
											"end": 15199,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15190,
											"end": 15196,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15186,
											"end": 15200,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15179,
											"end": 15237,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15271,
											"end": 15283,
											"name": "PUSH",
											"source": 18,
											"value": "20686572646569726F7300000000000000000000000000000000000000000000"
										},
										{
											"begin": 15266,
											"end": 15268,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15258,
											"end": 15264,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15254,
											"end": 15269,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15247,
											"end": 15284,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15062,
											"end": 15291,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15062,
											"end": 15291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15297,
											"end": 15663,
											"name": "tag",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 15297,
											"end": 15663,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15439,
											"end": 15442,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15460,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 15524,
											"end": 15526,
											"name": "PUSH",
											"source": 18,
											"value": "2A"
										},
										{
											"begin": 15519,
											"end": 15522,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15460,
											"end": 15527,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 15460,
											"end": 15527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15460,
											"end": 15527,
											"name": "tag",
											"source": 18,
											"value": "635"
										},
										{
											"begin": 15460,
											"end": 15527,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15453,
											"end": 15527,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15453,
											"end": 15527,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15536,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 15625,
											"end": 15628,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15536,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "461"
										},
										{
											"begin": 15536,
											"end": 15629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15536,
											"end": 15629,
											"name": "tag",
											"source": 18,
											"value": "636"
										},
										{
											"begin": 15536,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15654,
											"end": 15656,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 15649,
											"end": 15652,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15645,
											"end": 15657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15638,
											"end": 15657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15638,
											"end": 15657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15297,
											"end": 15663,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15297,
											"end": 15663,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15297,
											"end": 15663,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15297,
											"end": 15663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15669,
											"end": 16088,
											"name": "tag",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 15669,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15835,
											"end": 15839,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15873,
											"end": 15875,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15862,
											"end": 15871,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15858,
											"end": 15876,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15850,
											"end": 15876,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15850,
											"end": 15876,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15922,
											"end": 15931,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15916,
											"end": 15920,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15912,
											"end": 15932,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 15908,
											"end": 15909,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15897,
											"end": 15906,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 15893,
											"end": 15910,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15886,
											"end": 15933,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15950,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 16076,
											"end": 16080,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 15950,
											"end": 16081,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "462"
										},
										{
											"begin": 15950,
											"end": 16081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15950,
											"end": 16081,
											"name": "tag",
											"source": 18,
											"value": "638"
										},
										{
											"begin": 15950,
											"end": 16081,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15942,
											"end": 16081,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15942,
											"end": 16081,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15669,
											"end": 16088,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15669,
											"end": 16088,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 15669,
											"end": 16088,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 15669,
											"end": 16088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16388,
											"name": "tag",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 16094,
											"end": 16388,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16234,
											"end": 16268,
											"name": "PUSH",
											"source": 18,
											"value": "637265617465496E6865726974616E636528292C207175616E74696461646520"
										},
										{
											"begin": 16230,
											"end": 16231,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16222,
											"end": 16228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16218,
											"end": 16232,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16211,
											"end": 16269,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16303,
											"end": 16337,
											"name": "PUSH",
											"source": 18,
											"value": "646520656E64657265636F73206520706F7263656E746167656E732064696665"
										},
										{
											"begin": 16298,
											"end": 16300,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16290,
											"end": 16296,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16286,
											"end": 16301,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16279,
											"end": 16338,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16372,
											"end": 16380,
											"name": "PUSH",
											"source": 18,
											"value": "72656E7465730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16367,
											"end": 16369,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 16359,
											"end": 16365,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16355,
											"end": 16370,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16348,
											"end": 16381,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16388,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16094,
											"end": 16388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16394,
											"end": 16760,
											"name": "tag",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 16394,
											"end": 16760,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16536,
											"end": 16539,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16557,
											"end": 16624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 16621,
											"end": 16623,
											"name": "PUSH",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 16616,
											"end": 16619,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16557,
											"end": 16624,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 16557,
											"end": 16624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16557,
											"end": 16624,
											"name": "tag",
											"source": 18,
											"value": "641"
										},
										{
											"begin": 16557,
											"end": 16624,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16550,
											"end": 16624,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16550,
											"end": 16624,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16633,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 16722,
											"end": 16725,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16633,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "463"
										},
										{
											"begin": 16633,
											"end": 16726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16633,
											"end": 16726,
											"name": "tag",
											"source": 18,
											"value": "642"
										},
										{
											"begin": 16633,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16751,
											"end": 16753,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 16746,
											"end": 16749,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16742,
											"end": 16754,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16735,
											"end": 16754,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16735,
											"end": 16754,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16394,
											"end": 16760,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16394,
											"end": 16760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16394,
											"end": 16760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16394,
											"end": 16760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 17185,
											"name": "tag",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 16766,
											"end": 17185,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 16932,
											"end": 16936,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16970,
											"end": 16972,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 16959,
											"end": 16968,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 16955,
											"end": 16973,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16947,
											"end": 16973,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16947,
											"end": 16973,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17019,
											"end": 17028,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17013,
											"end": 17017,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17009,
											"end": 17029,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17005,
											"end": 17006,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 16994,
											"end": 17003,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 16990,
											"end": 17007,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 16983,
											"end": 17030,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 17047,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 17173,
											"end": 17177,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17047,
											"end": 17178,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "464"
										},
										{
											"begin": 17047,
											"end": 17178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17047,
											"end": 17178,
											"name": "tag",
											"source": 18,
											"value": "644"
										},
										{
											"begin": 17047,
											"end": 17178,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17039,
											"end": 17178,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17039,
											"end": 17178,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 17185,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 17185,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 17185,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 16766,
											"end": 17185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "tag",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17248,
											"end": 17253,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17279,
											"end": 17285,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17273,
											"end": 17286,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 17264,
											"end": 17286,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17264,
											"end": 17286,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17295,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 17322,
											"end": 17327,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 17295,
											"end": 17328,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "422"
										},
										{
											"begin": 17295,
											"end": 17328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17295,
											"end": 17328,
											"name": "tag",
											"source": 18,
											"value": "646"
										},
										{
											"begin": 17295,
											"end": 17328,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17191,
											"end": 17334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "tag",
											"source": 18,
											"value": "294"
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17410,
											"end": 17416,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17459,
											"end": 17461,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 17447,
											"end": 17456,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17438,
											"end": 17445,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17434,
											"end": 17457,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 17430,
											"end": 17462,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 17427,
											"end": 17546,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 17427,
											"end": 17546,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 17427,
											"end": 17546,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 17465,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 17465,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "414"
										},
										{
											"begin": 17465,
											"end": 17544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17465,
											"end": 17544,
											"name": "tag",
											"source": 18,
											"value": "649"
										},
										{
											"begin": 17465,
											"end": 17544,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17427,
											"end": 17546,
											"name": "tag",
											"source": 18,
											"value": "648"
										},
										{
											"begin": 17427,
											"end": 17546,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17585,
											"end": 17586,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17610,
											"end": 17674,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 17666,
											"end": 17673,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17657,
											"end": 17663,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17646,
											"end": 17655,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17642,
											"end": 17664,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17610,
											"end": 17674,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "465"
										},
										{
											"begin": 17610,
											"end": 17674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17610,
											"end": 17674,
											"name": "tag",
											"source": 18,
											"value": "650"
										},
										{
											"begin": 17610,
											"end": 17674,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17600,
											"end": 17674,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17600,
											"end": 17674,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17556,
											"end": 17684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17340,
											"end": 17691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "tag",
											"source": 18,
											"value": "345"
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17818,
											"end": 17822,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17856,
											"end": 17858,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 17845,
											"end": 17854,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 17841,
											"end": 17859,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17859,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 17833,
											"end": 17859,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17869,
											"end": 17940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 17937,
											"end": 17938,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 17926,
											"end": 17935,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 17922,
											"end": 17939,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17913,
											"end": 17919,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 17869,
											"end": 17940,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "439"
										},
										{
											"begin": 17869,
											"end": 17940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17869,
											"end": 17940,
											"name": "tag",
											"source": 18,
											"value": "652"
										},
										{
											"begin": 17869,
											"end": 17940,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17950,
											"end": 18022,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 18018,
											"end": 18020,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18007,
											"end": 18016,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18003,
											"end": 18021,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 17994,
											"end": 18000,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 17950,
											"end": 18022,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "424"
										},
										{
											"begin": 17950,
											"end": 18022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 17950,
											"end": 18022,
											"name": "tag",
											"source": 18,
											"value": "653"
										},
										{
											"begin": 17950,
											"end": 18022,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 17697,
											"end": 18029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18035,
											"end": 18205,
											"name": "tag",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 18035,
											"end": 18205,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18175,
											"end": 18197,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 18171,
											"end": 18172,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18163,
											"end": 18169,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18159,
											"end": 18173,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18152,
											"end": 18198,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18035,
											"end": 18205,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18035,
											"end": 18205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18211,
											"end": 18577,
											"name": "tag",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 18211,
											"end": 18577,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18353,
											"end": 18356,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18374,
											"end": 18441,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 18438,
											"end": 18440,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 18433,
											"end": 18436,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18374,
											"end": 18441,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 18374,
											"end": 18441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18374,
											"end": 18441,
											"name": "tag",
											"source": 18,
											"value": "656"
										},
										{
											"begin": 18374,
											"end": 18441,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18367,
											"end": 18441,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18367,
											"end": 18441,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18450,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 18539,
											"end": 18542,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18450,
											"end": 18543,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "466"
										},
										{
											"begin": 18450,
											"end": 18543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18450,
											"end": 18543,
											"name": "tag",
											"source": 18,
											"value": "657"
										},
										{
											"begin": 18450,
											"end": 18543,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18568,
											"end": 18570,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18563,
											"end": 18566,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18559,
											"end": 18571,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18552,
											"end": 18571,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18552,
											"end": 18571,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18211,
											"end": 18577,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18211,
											"end": 18577,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18211,
											"end": 18577,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18211,
											"end": 18577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18583,
											"end": 19002,
											"name": "tag",
											"source": 18,
											"value": "350"
										},
										{
											"begin": 18583,
											"end": 19002,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18749,
											"end": 18753,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18787,
											"end": 18789,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 18776,
											"end": 18785,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 18772,
											"end": 18790,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18764,
											"end": 18790,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18764,
											"end": 18790,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18836,
											"end": 18845,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18830,
											"end": 18834,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18826,
											"end": 18846,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 18822,
											"end": 18823,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 18811,
											"end": 18820,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 18807,
											"end": 18824,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 18800,
											"end": 18847,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 18990,
											"end": 18994,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "467"
										},
										{
											"begin": 18864,
											"end": 18995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "tag",
											"source": 18,
											"value": "659"
										},
										{
											"begin": 18864,
											"end": 18995,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 18856,
											"end": 18995,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18856,
											"end": 18995,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18583,
											"end": 19002,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 18583,
											"end": 19002,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 18583,
											"end": 19002,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 18583,
											"end": 19002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19008,
											"end": 19174,
											"name": "tag",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 19008,
											"end": 19174,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19148,
											"end": 19166,
											"name": "PUSH",
											"source": 18,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 19144,
											"end": 19145,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19136,
											"end": 19142,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19132,
											"end": 19146,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19125,
											"end": 19167,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19008,
											"end": 19174,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19008,
											"end": 19174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19180,
											"end": 19546,
											"name": "tag",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 19180,
											"end": 19546,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19322,
											"end": 19325,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 19407,
											"end": 19409,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 19402,
											"end": 19405,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "441"
										},
										{
											"begin": 19343,
											"end": 19410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "tag",
											"source": 18,
											"value": "662"
										},
										{
											"begin": 19343,
											"end": 19410,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19336,
											"end": 19410,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19336,
											"end": 19410,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19419,
											"end": 19512,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 19508,
											"end": 19511,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19419,
											"end": 19512,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "468"
										},
										{
											"begin": 19419,
											"end": 19512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19419,
											"end": 19512,
											"name": "tag",
											"source": 18,
											"value": "663"
										},
										{
											"begin": 19419,
											"end": 19512,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19537,
											"end": 19539,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19532,
											"end": 19535,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19528,
											"end": 19540,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19540,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19521,
											"end": 19540,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19180,
											"end": 19546,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19180,
											"end": 19546,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19180,
											"end": 19546,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19180,
											"end": 19546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "tag",
											"source": 18,
											"value": "384"
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19718,
											"end": 19722,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19758,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 19745,
											"end": 19754,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 19741,
											"end": 19759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19733,
											"end": 19759,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19733,
											"end": 19759,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19805,
											"end": 19814,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19799,
											"end": 19803,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19795,
											"end": 19815,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 19791,
											"end": 19792,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 19780,
											"end": 19789,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 19776,
											"end": 19793,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 19769,
											"end": 19816,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 19959,
											"end": 19963,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "469"
										},
										{
											"begin": 19833,
											"end": 19964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "tag",
											"source": 18,
											"value": "665"
										},
										{
											"begin": 19833,
											"end": 19964,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 19825,
											"end": 19964,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19825,
											"end": 19964,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19971,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19552,
											"end": 19971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 19977,
											"end": 20075,
											"name": "tag",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 19977,
											"end": 20075,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20028,
											"end": 20034,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20062,
											"end": 20067,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20056,
											"end": 20068,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 20046,
											"end": 20068,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20046,
											"end": 20068,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19977,
											"end": 20075,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 19977,
											"end": 20075,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 19977,
											"end": 20075,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 19977,
											"end": 20075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "tag",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20182,
											"end": 20193,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20219,
											"end": 20222,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20204,
											"end": 20222,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20204,
											"end": 20222,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20081,
											"end": 20228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "tag",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20338,
											"end": 20341,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20366,
											"end": 20404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 20398,
											"end": 20403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20366,
											"end": 20404,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "470"
										},
										{
											"begin": 20366,
											"end": 20404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20366,
											"end": 20404,
											"name": "tag",
											"source": 18,
											"value": "669"
										},
										{
											"begin": 20366,
											"end": 20404,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20420,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 20501,
											"end": 20507,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20496,
											"end": 20499,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20420,
											"end": 20508,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "471"
										},
										{
											"begin": 20420,
											"end": 20508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20420,
											"end": 20508,
											"name": "tag",
											"source": 18,
											"value": "670"
										},
										{
											"begin": 20420,
											"end": 20508,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20413,
											"end": 20508,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 20413,
											"end": 20508,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20517,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 20575,
											"end": 20581,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20570,
											"end": 20573,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 20563,
											"end": 20567,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 20556,
											"end": 20561,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 20552,
											"end": 20568,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20517,
											"end": 20582,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "442"
										},
										{
											"begin": 20517,
											"end": 20582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20517,
											"end": 20582,
											"name": "tag",
											"source": 18,
											"value": "671"
										},
										{
											"begin": 20517,
											"end": 20582,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20607,
											"end": 20613,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 20602,
											"end": 20605,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20598,
											"end": 20614,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 20591,
											"end": 20614,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20591,
											"end": 20614,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20342,
											"end": 20620,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20234,
											"end": 20620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "tag",
											"source": 18,
											"value": "392"
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20756,
											"end": 20759,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 20778,
											"end": 20871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 20867,
											"end": 20870,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 20858,
											"end": 20864,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 20778,
											"end": 20871,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "472"
										},
										{
											"begin": 20778,
											"end": 20871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 20778,
											"end": 20871,
											"name": "tag",
											"source": 18,
											"value": "673"
										},
										{
											"begin": 20778,
											"end": 20871,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 20771,
											"end": 20871,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20771,
											"end": 20871,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20888,
											"end": 20891,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 20881,
											"end": 20891,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 20881,
											"end": 20891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 20626,
											"end": 20897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									]
								}
							},
							"sourceList": [
								".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"contractInheritanceManagement()": "75ba6f71",
							"contractProofOfLife()": "6af70684",
							"createInheritance(address[],uint16[])": "e7a84bc3",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize()": "8129fc1c",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setNewContractInheritanceManagement(address)": "4bd39bdc",
							"setNewContractProofOfLife(address)": "710eef7a",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateProofOfLife(address)": "4d1ba077",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractInheritanceManagement\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractProofOfLife\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_addresses\",\"type\":\"address[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_percentagens\",\"type\":\"uint16[]\"}],\"name\":\"createInheritance\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContractInheritanceManagement\",\"type\":\"address\"}],\"name\":\"setNewContractInheritanceManagement\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newContractProofOfLife\",\"type\":\"address\"}],\"name\":\"setNewContractProofOfLife\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"testament\",\"type\":\"address\"}],\"name\":\"updateProofOfLife\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":\"TestamentCore\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/studying-solidity/v0.1/Testament/TestamentCore.sol\":{\"keccak256\":\"0x9f325d6b37cac216f1da3157f5522a968db694f8eea0d23247829e46653bd908\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c065d08ae041789ce6618406176a1f9d3af6eb4fb18619d9983d86c9c8cc989\",\"dweb:/ipfs/QmfKeNDkwXQv2cejQcztxc8ya9mo9fo4Z57qJQYJ9stcqE\"]},\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1259,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1364,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 1380,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "_status",
								"offset": 0,
								"slot": "50",
								"type": "t_uint256"
							},
							{
								"astId": 1449,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "__gap",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 35,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "contractInheritanceManagement",
								"offset": 0,
								"slot": "100",
								"type": "t_address"
							},
							{
								"astId": 37,
								"contract": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol:TestamentCore",
								"label": "contractProofOfLife",
								"offset": 0,
								"slot": "101",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x0d4d7d19a052a2ef9d17b28450133631188b895e1755747fa8ad0280aadfb534\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://838551e10cc07e570b70aee1078e490658d3a0ab8f4adfd4f3f2a565200753da\",\"dweb:/ipfs/QmceT7R3Pqzywyxr3MSEA7VXU4axZAPS6BLy92iV97rGdG\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x574a7451e42724f7de29e2855c392a8a5020acd695169466a18459467d719d63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5bc189f63b639ee173dd7b6fecc39baf7113bf161776aea22b34c57fdd1872ec\",\"dweb:/ipfs/QmZAf2VtjDLRULqjJkde6LNsxAg12tUqpPqgUQQZbAjgtZ\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1259,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 1364,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ReentrancyGuardUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1380,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1449,
								"contract": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:ReentrancyGuardUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xc8ed8d2056934b7675b695dec032f2920c2f5c6cf33a17ca85650940675323ab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3c8ccc75d1cd792d192aa09e54dd49ea35fe85baa9fcd17486f29227d9f29b89\",\"dweb:/ipfs/QmbboSbFUEiM9tdEgBwuTRb7bykFoJXZ7dsSr1PSREJXMr\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f724110f7aeb6151af800ab8c12e6060b29bda9e013f0ccb331eb754d6a7cbf0\",\"dweb:/ipfs/QmUcjzCZpxtUPdEThtAzE1f9LvuJiUGZxTdH9N6bHrb5Cf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"IERC1967": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.",
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":496:6237  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0xB4 0x28 0xF 0x28 CALLCODE 0xE9 0xE5 0xC7 MULMOD PUSH25 0xB391E29239CB2DDB8DA64EB6C00253D7D5A286906564736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "496:5741:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 496,
									"end": 6237,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d5b4280f28f2e9e5c70978b391e29239cb2ddb8da64eb6c00253d7d5a286906564736f6c634300081a0033",
									".code": [
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 496,
											"end": 6237,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x8decfa54cec979c824b044b8128cd91d713f72c71fd7dfa54974624d8c949898\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://271f914261a19d87117a777e0924ada545c16191ef9b00cc40b0134fc14ebc70\",\"dweb:/ipfs/QmdvVNWHGHQrGGPonZJs5NuzTevTjZRM2zayKrDJf7WBA2\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6048  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x74DC4FF634ADBD05 0x28 0xB3 0xCB 0xE5 DIV SWAP9 MSTORE8 SDIV 0xB3 0x28 PUSH22 0x4B8ED3A8EDE8AE34ADCE94C864736F6C634300081A00 CALLER ",
							"sourceMap": "233:5815:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 233,
									"end": 6048,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206774dc4ff634adbd0528b3cbe504985305b328754b8ed3a8ede8ae34adce94c864736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 233,
											"end": 6048,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaaa1d17c1129b127a4a401db2fbd72960e2671474be3d08cae71ccdc42f7624c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb2f27cd3952aa667e198fba0d9b7bcec52fbb12c16f013c25fe6fb52b29cc0e\",\"dweb:/ipfs/QmeuohBFoeyDPZA9JNCTEDz3VBfBD4EABWuWXVhHAuEpKR\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1407:4181  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF 0xA7 SIGNEXTEND PUSH26 0xDDE3A68BE008AD909ECEB9714B0A021B843D5091DCC7DF482D70 PUSH17 0xC364736F6C634300081A00330000000000 ",
							"sourceMap": "1407:2774:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getInt256Slot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1407,
									"end": 4181,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220dfa70b79dde3a68be008ad909eceb9714b0a021b843d5091dcc7df482d7070c364736f6c634300081a0033",
									".code": [
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1407,
											"end": 4181,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1967.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/studying-solidity/v0.1/Testament/TestamentCore.sol": {
				"ast": {
					"absolutePath": ".deps/studying-solidity/v0.1/Testament/TestamentCore.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							592
						],
						"ContextUpgradeable": [
							1496
						],
						"ERC165Upgradeable": [
							1536
						],
						"ERC1967Utils": [
							1944
						],
						"IAccessControl": [
							1619
						],
						"IERC1822Proxiable": [
							1650
						],
						"IProofOfLife": [
							13
						],
						"ITestamentData": [
							21
						],
						"Initializable": [
							1055
						],
						"OwnableUpgradeable": [
							787
						],
						"PausableUpgradeable": [
							1365
						],
						"ReentrancyGuardUpgradeable": [
							1450
						],
						"TestamentCore": [
							229
						],
						"UUPSUpgradeable": [
							1237
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 1056,
							"src": "58:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 1238,
							"src": "134:77:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 788,
							"src": "212:75:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 1366,
							"src": "288:78:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 1451,
							"src": "367:85:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 593,
							"src": "453:81:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProofOfLife",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 13,
							"linearizedBaseContracts": [
								13
							],
							"name": "IProofOfLife",
							"nameLocation": "546:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "4d1ba077",
									"id": 12,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "updateProofOfLife",
									"nameLocation": "574:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "testament",
												"nameLocation": "600:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 12,
												"src": "592:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "591:19:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "619:0:0"
									},
									"scope": 13,
									"src": "565:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "536:86:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITestamentData",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "ITestamentData",
							"nameLocation": "634:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "88c650fc",
									"id": 20,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTestamentExist",
									"nameLocation": "664:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "testator",
												"nameLocation": "690:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "681:18:0"
									},
									"returnParameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "723:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "723:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:6:0"
									},
									"scope": 21,
									"src": "655:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "624:107:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 22,
										"name": "Initializable",
										"nameLocations": [
											"763:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "763:13:0"
									},
									"id": 23,
									"nodeType": "InheritanceSpecifier",
									"src": "763:13:0"
								},
								{
									"baseName": {
										"id": 24,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"782:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1237,
										"src": "782:15:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "782:15:0"
								},
								{
									"baseName": {
										"id": 26,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"803:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 787,
										"src": "803:18:0"
									},
									"id": 27,
									"nodeType": "InheritanceSpecifier",
									"src": "803:18:0"
								},
								{
									"baseName": {
										"id": 28,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"827:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1365,
										"src": "827:19:0"
									},
									"id": 29,
									"nodeType": "InheritanceSpecifier",
									"src": "827:19:0"
								},
								{
									"baseName": {
										"id": 30,
										"name": "ReentrancyGuardUpgradeable",
										"nameLocations": [
											"852:26:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1450,
										"src": "852:26:0"
									},
									"id": 31,
									"nodeType": "InheritanceSpecifier",
									"src": "852:26:0"
								},
								{
									"baseName": {
										"id": 32,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"884:24:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 592,
										"src": "884:24:0"
									},
									"id": 33,
									"nodeType": "InheritanceSpecifier",
									"src": "884:24:0"
								}
							],
							"canonicalName": "TestamentCore",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								592,
								1536,
								2372,
								1619,
								1450,
								1365,
								787,
								1496,
								1237,
								1650,
								1055
							],
							"name": "TestamentCore",
							"nameLocation": "742:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "75ba6f71",
									"id": 35,
									"mutability": "mutable",
									"name": "contractInheritanceManagement",
									"nameLocation": "930:29:0",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "915:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 34,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "915:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6af70684",
									"id": 37,
									"mutability": "mutable",
									"name": "contractProofOfLife",
									"nameLocation": "980:19:0",
									"nodeType": "VariableDeclaration",
									"scope": 229,
									"src": "965:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 36,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "965:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1047:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 43,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1072:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 44,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1076:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1072:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 42,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "1057:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1057:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "1057:26:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 47,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "1130:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1130:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1130:24:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 50,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "1164:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1164:17:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "__ReentrancyGuard_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "1191:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1191:24:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 56,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 293,
														"src": "1225:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1225:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1225:22:0"
											}
										]
									},
									"functionSelector": "8129fc1c",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 40,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 39,
												"name": "initializer",
												"nameLocations": [
													"1035:11:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 895,
												"src": "1035:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1035:11:0"
										}
									],
									"name": "initialize",
									"nameLocation": "1015:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1025:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1047:0:0"
									},
									"scope": 229,
									"src": "1006:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1191
									],
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "1363:2:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nameLocations": [
													"1349:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "1349:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1349:9:0"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "1269:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 64,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1332:8:0"
									},
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "newAddress",
												"nameLocation": "1295:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "1287:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1286:20:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1363:0:0"
									},
									"scope": 229,
									"src": "1260:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1407:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 74,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1343,
														"src": "1417:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "1417:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 78,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 72,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 71,
												"name": "onlyOwner",
												"nameLocations": [
													"1397:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "1397:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1397:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "1380:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1385:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1407:0:0"
									},
									"scope": 229,
									"src": "1371:61:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "1476:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 83,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1359,
														"src": "1486:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1486:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 87,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 81,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 80,
												"name": "onlyOwner",
												"nameLocations": [
													"1466:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "1466:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1466:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "1447:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1454:2:0"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1476:0:0"
									},
									"scope": 229,
									"src": "1438:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1566:152:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 93,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 90,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1597:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1601:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1597:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 92,
																"name": "contractInheritanceManagement",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "1611:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1597:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79204d616e616765722063616e2062652063616c6c656420627920436f7265",
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1654:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a84a17491b4ef209fa0ecc38782e6751908f6d69043df8782254890f55cb46f",
																"typeString": "literal_string \"Only Manager can be called by Core\""
															},
															"value": "Only Manager can be called by Core"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a84a17491b4ef209fa0ecc38782e6751908f6d69043df8782254890f55cb46f",
																"typeString": "literal_string \"Only Manager can be called by Core\""
															}
														],
														"id": 89,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1576:124:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1576:124:0"
											},
											{
												"id": 97,
												"nodeType": "PlaceholderStatement",
												"src": "1710:1:0"
											}
										]
									},
									"id": 99,
									"name": "onlyManager",
									"nameLocation": "1552:11:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1563:2:0"
									},
									"src": "1543:175:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1751:146:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 102,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1782:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1786:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1782:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 104,
																"name": "contractProofOfLife",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1796:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1782:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792050726f6f664f664c6966652063616e2062652063616c6c656420627920436f7265",
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1829:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cef2460e47d8e38ca95a3dd4851e51d8274bb7600813c542066c30bb65bf3243",
																"typeString": "literal_string \"Only ProofOfLife can be called by Core\""
															},
															"value": "Only ProofOfLife can be called by Core"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cef2460e47d8e38ca95a3dd4851e51d8274bb7600813c542066c30bb65bf3243",
																"typeString": "literal_string \"Only ProofOfLife can be called by Core\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1761:118:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1761:118:0"
											},
											{
												"id": 109,
												"nodeType": "PlaceholderStatement",
												"src": "1889:1:0"
											}
										]
									},
									"id": 111,
									"name": "onlyProofOfLife",
									"nameLocation": "1733:15:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1748:2:0"
									},
									"src": "1724:173:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "2066:81:0",
										"statements": [
											{
												"expression": {
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 118,
														"name": "contractInheritanceManagement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2076:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 119,
														"name": "newContractInheritanceManagement",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 113,
														"src": "2108:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:64:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 121,
												"nodeType": "ExpressionStatement",
												"src": "2076:64:0"
											}
										]
									},
									"functionSelector": "4bd39bdc",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 116,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 115,
												"name": "onlyOwner",
												"nameLocations": [
													"2056:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "2056:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2056:9:0"
										}
									],
									"name": "setNewContractInheritanceManagement",
									"nameLocation": "1955:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "newContractInheritanceManagement",
												"nameLocation": "2008:32:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2000:40:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:56:0"
									},
									"returnParameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2066:0:0"
									},
									"scope": 229,
									"src": "1946:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "2259:61:0",
										"statements": [
											{
												"expression": {
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 130,
														"name": "contractProofOfLife",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "2269:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 131,
														"name": "newContractProofOfLife",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "2291:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2269:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "2269:44:0"
											}
										]
									},
									"functionSelector": "710eef7a",
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 128,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 127,
												"name": "onlyOwner",
												"nameLocations": [
													"2245:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "2245:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2245:9:0"
										}
									],
									"name": "setNewContractProofOfLife",
									"nameLocation": "2162:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "newContractProofOfLife",
												"nameLocation": "2196:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "2188:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2187:32:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2259:0:0"
									},
									"scope": 229,
									"src": "2153:167:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "2505:639:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 145,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2569:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2573:5:0",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2569:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2582:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2569:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "637265617465496e6865726974616e636528292c2076616c6f7220696e76616c69646f",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2585:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04",
																"typeString": "literal_string \"createInheritance(), valor invalido\""
															},
															"value": "createInheritance(), valor invalido"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b3cbf925f416a287147857cb520b7b07461401db80d234135e4a2d904f86ce04",
																"typeString": "literal_string \"createInheritance(), valor invalido\""
															}
														],
														"id": 144,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2561:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2561:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2561:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 153,
																	"name": "_addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "2654:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2665:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2654:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2675:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2654:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "637265617465496e6865726974616e636528292c2061646963696f6e65206f7320686572646569726f73",
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2690:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97",
																"typeString": "literal_string \"createInheritance(), adicione os herdeiros\""
															},
															"value": "createInheritance(), adicione os herdeiros"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e6837f787f2b358e22ba3a7f569192f1e49e3b104638e374da9cb8c2cfacc97",
																"typeString": "literal_string \"createInheritance(), adicione os herdeiros\""
															}
														],
														"id": 152,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2633:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2633:111:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "2633:111:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 161,
																	"name": "_addresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 138,
																	"src": "2775:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2786:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2775:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 163,
																	"name": "_percentagens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "2796:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
																		"typeString": "uint16[] calldata"
																	}
																},
																"id": 164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2810:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2796:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2775:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "637265617465496e6865726974616e636528292c207175616e74696461646520646520656e64657265636f73206520706f7263656e746167656e73206469666572656e746573",
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2830:72:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35",
																"typeString": "literal_string \"createInheritance(), quantidade de enderecos e porcentagens diferentes\""
															},
															"value": "createInheritance(), quantidade de enderecos e porcentagens diferentes"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_186c9e3a4c553ad632569b0753433d70e220eb7e363ba527b7329b7078112c35",
																"typeString": "literal_string \"createInheritance(), quantidade de enderecos e porcentagens diferentes\""
															}
														],
														"id": 160,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2754:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 167,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:158:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 168,
												"nodeType": "ExpressionStatement",
												"src": "2754:158:0"
											},
											{
												"assignments": [
													170
												],
												"declarations": [
													{
														"constant": false,
														"id": 170,
														"mutability": "mutable",
														"name": "testator",
														"nameLocation": "2930:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 189,
														"src": "2922:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 169,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2922:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 173,
												"initialValue": {
													"expression": {
														"id": 171,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2941:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2945:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2941:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2922:29:0"
											},
											{
												"assignments": [
													175
												],
												"declarations": [
													{
														"constant": false,
														"id": 175,
														"mutability": "mutable",
														"name": "_exist",
														"nameLocation": "2967:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 189,
														"src": "2962:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 174,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2962:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2976:87:0",
													"subExpression": {
														"arguments": [
															{
																"id": 180,
																"name": "testator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "3054:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 177,
																		"name": "contractInheritanceManagement",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "2992:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 176,
																	"name": "ITestamentData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "2977:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ITestamentData_$21_$",
																		"typeString": "type(contract ITestamentData)"
																	}
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2977:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITestamentData_$21",
																	"typeString": "contract ITestamentData"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:17:0",
															"memberName": "getTestamentExist",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "2977:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 181,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2977:86:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2962:101:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "_exist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "3081:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54657374616d656e746f206a61206578697374652e2055736520612066756e63616f2064652065646963616f2e",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3089:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
																"typeString": "literal_string \"Testamento ja existe. Use a funcao de edicao.\""
															},
															"value": "Testamento ja existe. Use a funcao de edicao."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
																"typeString": "literal_string \"Testamento ja existe. Use a funcao de edicao.\""
															}
														],
														"id": 184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3073:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "3073:64:0"
											}
										]
									},
									"functionSelector": "e7a84bc3",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createInheritance",
									"nameLocation": "2384:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "_addresses",
												"nameLocation": "2430:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2411:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 136,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2411:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 137,
													"nodeType": "ArrayTypeName",
													"src": "2411:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "_percentagens",
												"nameLocation": "2468:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "2450:31:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint16_$dyn_calldata_ptr",
													"typeString": "uint16[]"
												},
												"typeName": {
													"baseType": {
														"id": 139,
														"name": "uint16",
														"nodeType": "ElementaryTypeName",
														"src": "2450:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"id": 140,
													"nodeType": "ArrayTypeName",
													"src": "2450:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$dyn_storage_ptr",
														"typeString": "uint16[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2401:86:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2505:0:0"
									},
									"scope": 229,
									"src": "2375:769:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "3205:326:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "testament",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "3223:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3244:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3236:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 197,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3236:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3236:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3223:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3248:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3215:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "3215:51:0"
											},
											{
												"assignments": [
													206
												],
												"declarations": [
													{
														"constant": false,
														"id": 206,
														"mutability": "mutable",
														"name": "_exist",
														"nameLocation": "3281:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "3276:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 205,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3290:88:0",
													"subExpression": {
														"arguments": [
															{
																"id": 211,
																"name": "testament",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "3368:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 208,
																		"name": "contractInheritanceManagement",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 35,
																		"src": "3306:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 207,
																	"name": "ITestamentData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "3291:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ITestamentData_$21_$",
																		"typeString": "type(contract ITestamentData)"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3291:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITestamentData_$21",
																	"typeString": "contract ITestamentData"
																}
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3350:17:0",
															"memberName": "getTestamentExist",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 20,
															"src": "3291:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view external returns (bool)"
															}
														},
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3291:87:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3276:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 216,
															"name": "_exist",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 206,
															"src": "3396:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54657374616d656e746f206a61206578697374652e2055736520612066756e63616f2064652065646963616f2e",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3404:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
																"typeString": "literal_string \"Testamento ja existe. Use a funcao de edicao.\""
															},
															"value": "Testamento ja existe. Use a funcao de edicao."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f3b7c19f045361443b1616ee4417721c13926c34af7d0f9fbe1339551a71ea6",
																"typeString": "literal_string \"Testamento ja existe. Use a funcao de edicao.\""
															}
														],
														"id": 215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3388:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3388:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "3388:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 224,
															"name": "testament",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "3514:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 221,
																	"name": "contractProofOfLife",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "3475:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 220,
																"name": "IProofOfLife",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "3462:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IProofOfLife_$13_$",
																	"typeString": "type(contract IProofOfLife)"
																}
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3462:33:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IProofOfLife_$13",
																"typeString": "contract IProofOfLife"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3496:17:0",
														"memberName": "updateProofOfLife",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 12,
														"src": "3462:51:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 226,
												"nodeType": "ExpressionStatement",
												"src": "3462:62:0"
											}
										]
									},
									"functionSelector": "4d1ba077",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateProofOfLife",
									"nameLocation": "3159:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "testament",
												"nameLocation": "3185:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "3177:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:19:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3205:0:0"
									},
									"scope": 229,
									"src": "3150:381:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "733:2800:0",
							"usedErrors": [
								623,
								628,
								804,
								807,
								1082,
								1087,
								1546,
								1549,
								1670,
								1683,
								1964,
								2227
							],
							"usedEvents": [
								634,
								812,
								1252,
								1257,
								1558,
								1567,
								1576,
								1627
							]
						}
					],
					"src": "32:3502:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							592
						],
						"ContextUpgradeable": [
							1496
						],
						"ERC165Upgradeable": [
							1536
						],
						"IAccessControl": [
							1619
						],
						"Initializable": [
							1055
						]
					},
					"id": 593,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 593,
							"sourceUnit": 1620,
							"src": "134:81:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1619,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 235,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 593,
							"sourceUnit": 1497,
							"src": "216:67:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 234,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1496,
										"src": "224:18:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 593,
							"sourceUnit": 1537,
							"src": "284:79:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1536,
										"src": "292:17:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 593,
							"sourceUnit": 1056,
							"src": "364:63:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 238,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "372:13:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 241,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "2136:13:1"
									},
									"id": 242,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:1"
								},
								{
									"baseName": {
										"id": 243,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "2151:18:1"
									},
									"id": 244,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:1"
								},
								{
									"baseName": {
										"id": 245,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1619,
										"src": "2171:14:1"
									},
									"id": 246,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:1"
								},
								{
									"baseName": {
										"id": 247,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1536,
										"src": "2187:17:1"
									},
									"id": 248,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:1"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 592,
							"linearizedBaseContracts": [
								592,
								1536,
								2372,
								1619,
								1496,
								1055
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 255,
									"members": [
										{
											"constant": false,
											"id": 252,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 255,
											"src": "2237:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 251,
												"keyName": "account",
												"keyNameLocation": "2253:7:1",
												"keyType": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 250,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 254,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 255,
											"src": "2287:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 253,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:1",
									"nodeType": "StructDefinition",
									"scope": 592,
									"src": "2211:100:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 258,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 592,
									"src": "2317:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 256,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 257,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:1",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 265,
									"members": [
										{
											"constant": false,
											"id": 264,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:1",
											"nodeType": "VariableDeclaration",
											"scope": 265,
											"src": "2488:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 263,
												"keyName": "role",
												"keyNameLocation": "2504:4:1",
												"keyType": {
													"id": 260,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 262,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 261,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 255,
														"src": "2512:8:1"
													},
													"referencedDeclaration": 255,
													"src": "2512:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$255_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:1",
									"nodeType": "StructDefinition",
									"scope": 592,
									"src": "2450:85:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 268,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:1",
									"nodeType": "VariableDeclaration",
									"scope": 592,
									"src": "2658:122:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 266,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 275,
										"nodeType": "Block",
										"src": "2877:87:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:1",
													"nodeType": "YulBlock",
													"src": "2896:62:1",
													"statements": [
														{
															"nativeSrc": "2910:38:1",
															"nodeType": "YulAssignment",
															"src": "2910:38:1",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:1",
																"nodeType": "YulIdentifier",
																"src": "2920:28:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 272,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 268,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:1",
														"valueSize": 1
													}
												],
												"id": 274,
												"nodeType": "InlineAssembly",
												"src": "2887:71:1"
											}
										]
									},
									"id": 276,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "2845:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 270,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 265,
														"src": "2845:20:1"
													},
													"referencedDeclaration": 265,
													"src": "2845:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:1"
									},
									"scope": 592,
									"src": "2787:177:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "3181:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 282,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 279,
															"src": "3202:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 281,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															359,
															380
														],
														"referencedDeclaration": 359,
														"src": "3191:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:1"
											},
											{
												"id": 285,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:1"
											}
										]
									},
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 287,
									"name": "onlyRole",
									"nameLocation": "3158:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "3167:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 278,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:1"
									},
									"src": "3149:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "3289:7:1",
										"statements": []
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 290,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 289,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "3272:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:1"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:1"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:1"
									},
									"scope": 592,
									"src": "3231:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "3370:7:1",
										"statements": []
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 296,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 295,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "3353:16:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:1"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:1"
									},
									"scope": 592,
									"src": "3302:75:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1535
									],
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "3534:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 308,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "3551:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 310,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1619,
																		"src": "3571:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1619_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1619_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 309,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1619",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 316,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 302,
																"src": "3626:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 314,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$592_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1535,
															"src": "3602:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 317,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 307,
												"id": 319,
												"nodeType": "Return",
												"src": "3544:94:1"
											}
										]
									},
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:1",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 304,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:1"
									},
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3470:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 301,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "3528:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:1"
									},
									"scope": 592,
									"src": "3443:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1586
									],
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "3815:124:1",
										"statements": [
											{
												"assignments": [
													333
												],
												"declarations": [
													{
														"constant": false,
														"id": 333,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "3825:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 332,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 331,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 265,
																"src": "3825:20:1"
															},
															"referencedDeclaration": 265,
															"src": "3825:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 336,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 334,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "3858:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$265_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:1"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 337,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 333,
																	"src": "3901:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 338,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:1",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 264,
																"src": "3901:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 340,
															"indexExpression": {
																"id": 339,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 324,
																"src": "3910:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$255_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 341,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 252,
														"src": "3901:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 343,
													"indexExpression": {
														"id": 342,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "3924:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 330,
												"id": 344,
												"nodeType": "Return",
												"src": "3894:38:1"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3749:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 323,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3763:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "3809:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 328,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:1"
									},
									"scope": 592,
									"src": "3732:207:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "4204:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 353,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "4225:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 354,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "4231:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 352,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															359,
															380
														],
														"referencedDeclaration": 380,
														"src": "4214:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:1"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "4168:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:1"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:1"
									},
									"scope": 592,
									"src": "4148:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "4454:124:1",
										"statements": [
											{
												"condition": {
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 368,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "4477:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 369,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 364,
																"src": "4483:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 367,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4469:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 370,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 378,
												"nodeType": "IfStatement",
												"src": "4464:108:1",
												"trueBody": {
													"id": 377,
													"nodeType": "Block",
													"src": "4493:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 373,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 364,
																		"src": "4547:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 374,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 362,
																		"src": "4556:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 372,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1546,
																	"src": "4514:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 375,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 376,
															"nodeType": "RevertStatement",
															"src": "4507:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4401:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "4415:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:1"
									},
									"scope": 592,
									"src": "4381:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1594
									],
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "4833:117:1",
										"statements": [
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "4843:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 389,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 388,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 265,
																"src": "4843:20:1"
															},
															"referencedDeclaration": 265,
															"src": "4843:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 393,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 391,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "4876:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$265_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:1"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 394,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "4919:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:1",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 264,
															"src": "4919:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 397,
														"indexExpression": {
															"id": 396,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "4928:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$255_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 254,
													"src": "4919:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 387,
												"id": 399,
												"nodeType": "Return",
												"src": "4912:31:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4781:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "4824:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 385,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:1"
									},
									"scope": 592,
									"src": "4759:191:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1602
									],
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "5340:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5361:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 416,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5367:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 414,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "5350:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:1"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 410,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5333:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 409,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "5320:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 412,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 408,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 287,
												"src": "5311:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5265:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 403,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "5279:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:1"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:1"
									},
									"scope": 592,
									"src": "5246:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1610
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "5757:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 434,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5779:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 435,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "5785:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 433,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "5767:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 436,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 437,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:1"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 429,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5750:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 428,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "5737:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 431,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 427,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 287,
												"src": "5728:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5682:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "5696:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:1"
									},
									"scope": 592,
									"src": "5662:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1618
									],
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "6427:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "6441:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 448,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "6463:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 449,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "6437:102:1",
												"trueBody": {
													"id": 454,
													"nodeType": "Block",
													"src": "6477:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 451,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "6498:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 453,
															"nodeType": "RevertStatement",
															"src": "6491:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 457,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "6561:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 458,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "6567:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 456,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 591,
														"src": "6549:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 460,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:1"
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "6370:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "6384:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:1"
									},
									"scope": 592,
									"src": "6348:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "6791:245:1",
										"statements": [
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "6801:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 471,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 470,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 265,
																"src": "6801:20:1"
															},
															"referencedDeclaration": 265,
															"src": "6801:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 475,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 473,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "6834:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$265_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:1"
											},
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "6870:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 476,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 481,
												"initialValue": {
													"arguments": [
														{
															"id": 479,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6911:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 478,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "6898:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:1"
											},
											{
												"expression": {
													"id": 489,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 482,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 472,
																	"src": "6926:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:1",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 264,
																"src": "6926:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 486,
															"indexExpression": {
																"id": 484,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 465,
																"src": "6935:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$255_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 487,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 254,
														"src": "6926:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 488,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 467,
														"src": "6953:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 490,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 492,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 465,
															"src": "6994:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 493,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "7000:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 494,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "7019:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 491,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1558,
														"src": "6977:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "EmitStatement",
												"src": "6972:57:1"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "6741:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 464,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "6755:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 466,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:1"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:1"
									},
									"scope": 592,
									"src": "6718:318:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "7353:304:1",
										"statements": [
											{
												"assignments": [
													510
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 544,
														"src": "7363:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 509,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 508,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 265,
																"src": "7363:20:1"
															},
															"referencedDeclaration": 265,
															"src": "7363:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 513,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 511,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "7396:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$265_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:1"
											},
											{
												"condition": {
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 515,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "7445:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 516,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "7451:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 514,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "7437:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 542,
													"nodeType": "Block",
													"src": "7614:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 507,
															"id": 541,
															"nodeType": "Return",
															"src": "7628:12:1"
														}
													]
												},
												"id": 543,
												"nodeType": "IfStatement",
												"src": "7432:219:1",
												"trueBody": {
													"id": 539,
													"nodeType": "Block",
													"src": "7461:147:1",
													"statements": [
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 519,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 510,
																					"src": "7475:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 522,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:1",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 264,
																				"src": "7475:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 523,
																			"indexExpression": {
																				"id": 521,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 501,
																				"src": "7484:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$255_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 524,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 252,
																		"src": "7475:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 526,
																	"indexExpression": {
																		"id": 525,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "7498:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 531,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 501,
																		"src": "7544:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 532,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 503,
																		"src": "7550:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 533,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "7559:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 530,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "7532:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 536,
															"nodeType": "EmitStatement",
															"src": "7527:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 507,
															"id": 538,
															"nodeType": "Return",
															"src": "7586:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 499,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7290:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 500,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7304:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:1"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "7347:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:1"
									},
									"scope": 592,
									"src": "7270:387:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "7978:304:1",
										"statements": [
											{
												"assignments": [
													557
												],
												"declarations": [
													{
														"constant": false,
														"id": 557,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8017:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 590,
														"src": "7988:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 556,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 555,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7988:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 265,
																"src": "7988:20:1"
															},
															"referencedDeclaration": 265,
															"src": "7988:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 560,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 558,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "8021:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$265_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 559,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8021:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7988:59:1"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 562,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "8069:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 563,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "8075:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 561,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "8061:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8061:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 588,
													"nodeType": "Block",
													"src": "8239:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8260:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 554,
															"id": 587,
															"nodeType": "Return",
															"src": "8253:12:1"
														}
													]
												},
												"id": 589,
												"nodeType": "IfStatement",
												"src": "8057:219:1",
												"trueBody": {
													"id": 585,
													"nodeType": "Block",
													"src": "8085:148:1",
													"statements": [
														{
															"expression": {
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 565,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 557,
																					"src": "8099:1:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$265_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 568,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8101:6:1",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 264,
																				"src": "8099:8:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$255_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 567,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 548,
																				"src": "8108:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8099:14:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$255_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 570,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8114:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 252,
																		"src": "8099:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 572,
																	"indexExpression": {
																		"id": 571,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "8122:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8099:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8133:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8099:39:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 575,
															"nodeType": "ExpressionStatement",
															"src": "8099:39:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 577,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 548,
																		"src": "8169:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 578,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "8175:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 579,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "8184:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 580,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8184:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 576,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1576,
																	"src": "8157:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8157:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 582,
															"nodeType": "EmitStatement",
															"src": "8152:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 583,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8218:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 554,
															"id": 584,
															"nodeType": "Return",
															"src": "8211:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "7663:226:1",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7903:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7923:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "7915:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 547,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7915:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7937:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "7929:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7929:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7914:31:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "7972:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 552,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7972:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7971:6:1"
									},
									"scope": 592,
									"src": "7894:388:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 593,
							"src": "2090:6194:1",
							"usedErrors": [
								804,
								807,
								1546,
								1549
							],
							"usedEvents": [
								812,
								1558,
								1567,
								1576
							]
						}
					],
					"src": "108:8177:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1496
						],
						"Initializable": [
							1055
						],
						"OwnableUpgradeable": [
							787
						]
					},
					"id": 788,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 594,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 596,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 788,
							"sourceUnit": 1497,
							"src": "128:67:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 595,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1496,
										"src": "136:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 598,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 788,
							"sourceUnit": 1056,
							"src": "196:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 597,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "204:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 600,
										"name": "Initializable",
										"nameLocations": [
											"789:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "789:13:2"
									},
									"id": 601,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:2"
								},
								{
									"baseName": {
										"id": 602,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "804:18:2"
									},
									"id": 603,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:2"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 599,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 787,
							"linearizedBaseContracts": [
								787,
								1496,
								1055
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 607,
									"members": [
										{
											"constant": false,
											"id": 606,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 607,
											"src": "931:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 605,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:2",
									"nodeType": "StructDefinition",
									"scope": 787,
									"src": "899:53:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 610,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:2",
									"nodeType": "VariableDeclaration",
									"scope": 787,
									"src": "1069:116:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 608,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 609,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 617,
										"nodeType": "Block",
										"src": "1270:81:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:2",
													"nodeType": "YulBlock",
													"src": "1289:56:2",
													"statements": [
														{
															"nativeSrc": "1303:32:2",
															"nodeType": "YulAssignment",
															"src": "1303:32:2",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:2",
																"nodeType": "YulIdentifier",
																"src": "1313:22:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 614,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 610,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:2",
														"valueSize": 1
													}
												],
												"id": 616,
												"nodeType": "InlineAssembly",
												"src": "1280:65:2"
											}
										]
									},
									"id": 618,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:2"
									},
									"returnParameters": {
										"id": 615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "1244:24:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 613,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 612,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 607,
														"src": "1244:14:2"
													},
													"referencedDeclaration": 607,
													"src": "1244:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:2"
									},
									"scope": 787,
									"src": "1192:159:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:2",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 623,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "1480:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:2"
									},
									"src": "1447:50:2"
								},
								{
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:2",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 628,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "1616:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:2"
									},
									"src": "1590:41:2"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 634,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1664:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1695:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:2"
									},
									"src": "1637:84:2"
								},
								{
									"body": {
										"id": 646,
										"nodeType": "Block",
										"src": "1919:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "1954:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 642,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 674,
														"src": "1929:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:2"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:2",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 647,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 640,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 639,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "1902:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:2"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1871:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:2"
									},
									"returnParameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:2"
									},
									"scope": 787,
									"src": "1847:127:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 673,
										"nodeType": "Block",
										"src": "2062:153:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 654,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 649,
														"src": "2076:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 655,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 668,
												"nodeType": "IfStatement",
												"src": "2072:95:2",
												"trueBody": {
													"id": 667,
													"nodeType": "Block",
													"src": "2104:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 663,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 661,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 660,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "2125:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 666,
															"nodeType": "RevertStatement",
															"src": "2118:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 670,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "2195:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 669,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2176:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:2"
											}
										]
									},
									"id": 674,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 651,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "2045:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:2"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "2014:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:2"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:2"
									},
									"scope": 787,
									"src": "1980:235:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 681,
										"nodeType": "Block",
										"src": "2324:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 677,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "2334:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 679,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:2"
											},
											{
												"id": 680,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:2"
											}
										]
									},
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 682,
									"name": "onlyOwner",
									"nameLocation": "2312:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:2"
									},
									"src": "2303:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 697,
										"nodeType": "Block",
										"src": "2496:89:2",
										"statements": [
											{
												"assignments": [
													690
												],
												"declarations": [
													{
														"constant": false,
														"id": 690,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 697,
														"src": "2506:24:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 689,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 688,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 607,
																"src": "2506:14:2"
															},
															"referencedDeclaration": 607,
															"src": "2506:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 693,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 691,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "2533:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$607_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:2"
											},
											{
												"expression": {
													"expression": {
														"id": 694,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2570:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 695,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:2",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 606,
													"src": "2570:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 687,
												"id": 696,
												"nodeType": "Return",
												"src": "2563:15:2"
											}
										]
									},
									"documentation": {
										"id": 683,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 698,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:2"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 698,
												"src": "2487:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:2"
									},
									"scope": 787,
									"src": "2441:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "2703:117:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 702,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "2717:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 703,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 704,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "2728:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "2713:101:2",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "2742:72:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 708,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "2790:10:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 707,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 623,
																	"src": "2763:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 711,
															"nodeType": "RevertStatement",
															"src": "2756:47:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 699,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:2"
									},
									"scope": 787,
									"src": "2658:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "3209:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 722,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 721,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "3219:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:2"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 718,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "3199:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:2"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:2"
									},
									"scope": 787,
									"src": "3155:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "3475:145:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 737,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "3489:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 739,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 738,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 741,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 751,
												"nodeType": "IfStatement",
												"src": "3485:91:2",
												"trueBody": {
													"id": 750,
													"nodeType": "Block",
													"src": "3513:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 746,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 744,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 743,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "3534:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 749,
															"nodeType": "RevertStatement",
															"src": "3527:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 753,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "3604:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 752,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "3585:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 755,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:2"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 735,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 734,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 682,
												"src": "3465:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "3432:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:2"
									},
									"returnParameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:2"
									},
									"scope": 787,
									"src": "3405:215:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "3837:185:2",
										"statements": [
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "3847:24:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 764,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 763,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 607,
																"src": "3847:14:2"
															},
															"referencedDeclaration": 607,
															"src": "3847:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 766,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "3874:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$607_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:2"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 785,
														"src": "3904:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 769,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 773,
												"initialValue": {
													"expression": {
														"id": 771,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 765,
														"src": "3923:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 772,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:2",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 606,
													"src": "3923:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:2"
											},
											{
												"expression": {
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 774,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 765,
															"src": "3941:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$607_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:2",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 606,
														"src": "3941:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 777,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 760,
														"src": "3952:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 779,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 781,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3996:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "4006:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 780,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 634,
														"src": "3975:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "EmitStatement",
												"src": "3970:45:2"
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "3802:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:2"
									},
									"scope": 787,
									"src": "3774:248:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 788,
							"src": "749:3275:2",
							"usedErrors": [
								623,
								628,
								804,
								807
							],
							"usedEvents": [
								634,
								812
							]
						}
					],
					"src": "102:3923:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							1055
						]
					},
					"id": 1056,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 789,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 790,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:3",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 1055,
							"linearizedBaseContracts": [
								1055
							],
							"name": "Initializable",
							"nameLocation": "2367:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:3",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 798,
									"members": [
										{
											"constant": false,
											"id": 794,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:3",
											"nodeType": "VariableDeclaration",
											"scope": 798,
											"src": "2813:19:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 793,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 797,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:3",
											"nodeType": "VariableDeclaration",
											"scope": 798,
											"src": "2950:18:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 796,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:3",
									"nodeType": "StructDefinition",
									"scope": 1055,
									"src": "2685:290:3",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 801,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:3",
									"nodeType": "VariableDeclaration",
									"scope": 1055,
									"src": "3098:115:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 799,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 800,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:3",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 804,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:3"
									},
									"src": "3285:30:3"
								},
								{
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:3",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 807,
									"name": "NotInitializing",
									"nameLocation": "3389:15:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:3"
									},
									"src": "3383:24:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:3",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 812,
									"name": "Initialized",
									"nameLocation": "3514:11:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "3526:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 809,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:3"
									},
									"src": "3508:34:3"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "4092:1079:3",
										"statements": [
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "4158:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 816,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 815,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 798,
																"src": "4158:20:3"
															},
															"referencedDeclaration": 798,
															"src": "4158:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 820,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 818,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "4191:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$798_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:3"
											},
											{
												"assignments": [
													822
												],
												"declarations": [
													{
														"constant": false,
														"id": 822,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:3",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "4279:19:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 821,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 826,
												"initialValue": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:3",
													"subExpression": {
														"expression": {
															"id": 823,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4302:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "4302:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:3"
											},
											{
												"assignments": [
													828
												],
												"declarations": [
													{
														"constant": false,
														"id": 828,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:3",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "4327:18:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 827,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 831,
												"initialValue": {
													"expression": {
														"id": 829,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 817,
														"src": "4348:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:3",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "4348:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:3"
											},
											{
												"assignments": [
													833
												],
												"declarations": [
													{
														"constant": false,
														"id": 833,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "4704:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 832,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 839,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 834,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "4724:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 837,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "4744:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:3"
											},
											{
												"assignments": [
													841
												],
												"declarations": [
													{
														"constant": false,
														"id": 841,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:3",
														"nodeType": "VariableDeclaration",
														"scope": 894,
														"src": "4768:17:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 840,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 854,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 842,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "4788:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 852,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 847,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$1055",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$1055",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 845,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:3",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:3",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:3",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:3",
														"subExpression": {
															"id": 855,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "4854:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 858,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:3",
														"subExpression": {
															"id": 857,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "4871:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 864,
												"nodeType": "IfStatement",
												"src": "4849:91:3",
												"trueBody": {
													"id": 863,
													"nodeType": "Block",
													"src": "4885:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 860,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "4906:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 862,
															"nodeType": "RevertStatement",
															"src": "4899:30:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 865,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "4949:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 867,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "4949:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 870,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:3"
											},
											{
												"condition": {
													"id": 871,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "4981:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 879,
												"nodeType": "IfStatement",
												"src": "4977:67:3",
												"trueBody": {
													"id": 878,
													"nodeType": "Block",
													"src": "4997:47:3",
													"statements": [
														{
															"expression": {
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 872,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "5011:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 874,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:3",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 797,
																	"src": "5011:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 877,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:3"
														}
													]
												}
											},
											{
												"id": 880,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:3"
											},
											{
												"condition": {
													"id": 881,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 822,
													"src": "5068:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 893,
												"nodeType": "IfStatement",
												"src": "5064:101:3",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "5084:81:3",
													"statements": [
														{
															"expression": {
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 882,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "5098:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 884,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:3",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 797,
																	"src": "5098:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 887,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 888,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "5140:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "EmitStatement",
															"src": "5135:19:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:3",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 895,
									"name": "initializer",
									"nameLocation": "4078:11:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:3"
									},
									"src": "4069:1102:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "6289:392:3",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 941,
														"src": "6355:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 901,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 900,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 798,
																"src": "6355:20:3"
															},
															"referencedDeclaration": 798,
															"src": "6355:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 905,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 903,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "6388:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$798_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:3"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 906,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6429:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 907,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "6429:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 908,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 902,
																"src": "6448:1:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 909,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:3",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 794,
															"src": "6448:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 910,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "6466:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 917,
												"nodeType": "IfStatement",
												"src": "6425:105:3",
												"trueBody": {
													"id": 916,
													"nodeType": "Block",
													"src": "6475:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 913,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "6496:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 915,
															"nodeType": "RevertStatement",
															"src": "6489:30:3"
														}
													]
												}
											},
											{
												"expression": {
													"id": 922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 918,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6539:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 920,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "6539:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 921,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "6556:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 923,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:3"
											},
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 924,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6573:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "6573:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:3"
											},
											{
												"id": 930,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:3"
											},
											{
												"expression": {
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 931,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "6616:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:3",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 797,
														"src": "6616:15:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 938,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "6666:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 937,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6654:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 940,
												"nodeType": "EmitStatement",
												"src": "6649:25:3"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:3",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 942,
									"name": "reinitializer",
									"nameLocation": "6259:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "6273:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 897,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:3"
									},
									"src": "6250:431:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "6919:48:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 945,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "6929:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 947,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:3"
											},
											{
												"id": 948,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:3"
											}
										]
									},
									"documentation": {
										"id": 943,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:3",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 950,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:3"
									},
									"src": "6891:76:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "7134:89:3",
										"statements": [
											{
												"condition": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:3",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 954,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "7149:15:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 961,
												"nodeType": "IfStatement",
												"src": "7144:73:3",
												"trueBody": {
													"id": 960,
													"nodeType": "Block",
													"src": "7168:49:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 957,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 807,
																	"src": "7189:15:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 959,
															"nodeType": "RevertStatement",
															"src": "7182:24:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:3",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:3"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:3"
									},
									"scope": 1055,
									"src": "7082:141:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "7758:373:3",
										"statements": [
											{
												"assignments": [
													969
												],
												"declarations": [
													{
														"constant": false,
														"id": 969,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:3",
														"nodeType": "VariableDeclaration",
														"scope": 1008,
														"src": "7824:30:3",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 968,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 967,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:3"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 798,
																"src": "7824:20:3"
															},
															"referencedDeclaration": 798,
															"src": "7824:20:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 972,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 970,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "7857:24:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$798_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:3"
											},
											{
												"condition": {
													"expression": {
														"id": 973,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "7898:1:3",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 974,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:3",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 797,
													"src": "7898:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 979,
												"nodeType": "IfStatement",
												"src": "7894:76:3",
												"trueBody": {
													"id": 978,
													"nodeType": "Block",
													"src": "7915:55:3",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 975,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "7936:21:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 977,
															"nodeType": "RevertStatement",
															"src": "7929:30:3"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 980,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "7983:1:3",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:3",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 794,
														"src": "7983:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 984,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 983,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:3",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 982,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:3",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1007,
												"nodeType": "IfStatement",
												"src": "7979:146:3",
												"trueBody": {
													"id": 1006,
													"nodeType": "Block",
													"src": "8019:106:3",
													"statements": [
														{
															"expression": {
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 988,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "8033:1:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:3",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 794,
																	"src": "8033:14:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 992,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:3",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 991,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 994,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:3",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 995,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:3",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:3"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1001,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 1000,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:3",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 999,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:3",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 998,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "8085:11:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "EmitStatement",
															"src": "8080:34:3"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:3",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:3"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:3"
									},
									"scope": 1055,
									"src": "7709:422:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "8306:63:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1015,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "8323:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$798_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 1016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:3",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 794,
													"src": "8323:39:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 1014,
												"id": 1018,
												"nodeType": "Return",
												"src": "8316:46:3"
											}
										]
									},
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:3",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:3"
									},
									"returnParameters": {
										"id": 1014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "8298:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 1012,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:3"
									},
									"scope": 1055,
									"src": "8241:128:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1030,
										"nodeType": "Block",
										"src": "8541:64:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1026,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "8558:24:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$798_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:3",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 1028,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:3",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 797,
													"src": "8558:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1025,
												"id": 1029,
												"nodeType": "Return",
												"src": "8551:47:3"
											}
										]
									},
									"documentation": {
										"id": 1021,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:3",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 1031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:3"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "8535:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:3"
									},
									"scope": 1055,
									"src": "8485:120:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1039,
										"nodeType": "Block",
										"src": "8896:45:3",
										"statements": [
											{
												"expression": {
													"id": 1037,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 801,
													"src": "8913:21:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1038,
												"nodeType": "Return",
												"src": "8906:28:3"
											}
										]
									},
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:3",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 1040,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:3"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "8887:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:3"
									},
									"scope": 1055,
									"src": "8819:122:3",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "9161:115:3",
										"statements": [
											{
												"assignments": [
													1048
												],
												"declarations": [
													{
														"constant": false,
														"id": 1048,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "9171:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1047,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1051,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1049,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "9186:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:3"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:3",
													"nodeType": "YulBlock",
													"src": "9232:38:3",
													"statements": [
														{
															"nativeSrc": "9246:14:3",
															"nodeType": "YulAssignment",
															"src": "9246:14:3",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:3",
																"nodeType": "YulIdentifier",
																"src": "9256:4:3"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:3"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:3",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1048,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:3",
														"valueSize": 1
													}
												],
												"id": 1052,
												"nodeType": "InlineAssembly",
												"src": "9223:47:3"
											}
										]
									},
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:3",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:3"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "9129:30:3",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 1044,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1043,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:3"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 798,
														"src": "9129:20:3"
													},
													"referencedDeclaration": 798,
													"src": "9129:20:3",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$798_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:3"
									},
									"scope": 1055,
									"src": "9071:205:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1056,
							"src": "2349:6929:3",
							"usedErrors": [
								804,
								807
							],
							"usedEvents": [
								812
							]
						}
					],
					"src": "113:9166:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1944
						],
						"IERC1822Proxiable": [
							1650
						],
						"Initializable": [
							1055
						],
						"UUPSUpgradeable": [
							1237
						]
					},
					"id": 1238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1057,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 1059,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 1651,
							"src": "141:88:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1058,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1650,
										"src": "149:17:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 1061,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 1945,
							"src": "230:84:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1060,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1944,
										"src": "238:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 1063,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1238,
							"sourceUnit": 1056,
							"src": "315:50:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1062,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "323:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1065,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "1023:13:4"
									},
									"id": 1066,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:4"
								},
								{
									"baseName": {
										"id": 1067,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1650,
										"src": "1038:17:4"
									},
									"id": 1068,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:4"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1064,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:4",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 1237,
							"linearizedBaseContracts": [
								1237,
								1650,
								1055
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 1069,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:4",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 1075,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:4",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "1128:48:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1070,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 1073,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 1072,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1071,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:4",
												"typeDescriptions": {}
											}
										},
										"id": 1074,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:4",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:4",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 1079,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:4",
									"nodeType": "VariableDeclaration",
									"scope": 1237,
									"src": "1819:58:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 1077,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 1078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1080,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:4",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 1082,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:4"
									},
									"src": "1954:36:4"
								},
								{
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:4",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 1087,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2104:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:4"
									},
									"src": "2069:49:4"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "2645:41:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1090,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "2655:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2655:13:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "2655:13:4"
											},
											{
												"id": 1093,
												"nodeType": "PlaceholderStatement",
												"src": "2678:1:4"
											}
										]
									},
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "2124:495:4",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 1095,
									"name": "onlyProxy",
									"nameLocation": "2633:9:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2642:2:4"
									},
									"src": "2624:62:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1102,
										"nodeType": "Block",
										"src": "2916:48:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1098,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "2926:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2926:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2926:20:4"
											},
											{
												"id": 1101,
												"nodeType": "PlaceholderStatement",
												"src": "2956:1:4"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "2692:195:4",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 1103,
									"name": "notDelegated",
									"nameLocation": "2901:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2913:2:4"
									},
									"src": "2892:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1108,
										"nodeType": "Block",
										"src": "3030:7:4",
										"statements": []
									},
									"id": 1109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyInitializing",
												"nameLocations": [
													"3013:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "3013:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3013:16:4"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2979:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:2:4"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3030:0:4"
									},
									"scope": 1237,
									"src": "2970:67:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1114,
										"nodeType": "Block",
										"src": "3113:7:4",
										"statements": []
									},
									"id": 1115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1112,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1111,
												"name": "onlyInitializing",
												"nameLocations": [
													"3096:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "3096:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3096:16:4"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3052:32:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3084:2:4"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3113:0:4"
									},
									"scope": 1237,
									"src": "3043:77:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1649
									],
									"body": {
										"id": 1126,
										"nodeType": "Block",
										"src": "3786:56:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1123,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1944,
														"src": "3803:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1944_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3816:19:4",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1665,
													"src": "3803:32:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1122,
												"id": 1125,
												"nodeType": "Return",
												"src": "3796:39:4"
											}
										]
									},
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "3125:578:4",
										"text": " @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 1127,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1119,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1118,
												"name": "notDelegated",
												"nameLocations": [
													"3755:12:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1103,
												"src": "3755:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3755:12:4"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3717:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3730:2:4"
									},
									"returnParameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1127,
												"src": "3777:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3776:9:4"
									},
									"scope": 1237,
									"src": "3708:134:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1146,
										"nodeType": "Block",
										"src": "4266:109:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1138,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "4294:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1137,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1191,
														"src": "4276:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1140,
												"nodeType": "ExpressionStatement",
												"src": "4276:36:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1142,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1130,
															"src": "4344:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1143,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "4363:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1141,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "4322:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 1144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4322:46:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1145,
												"nodeType": "ExpressionStatement",
												"src": "4322:46:4"
											}
										]
									},
									"documentation": {
										"id": 1128,
										"nodeType": "StructuredDocumentation",
										"src": "3848:308:4",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 1147,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1135,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1134,
												"name": "onlyProxy",
												"nameLocations": [
													"4256:9:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1095,
												"src": "4256:9:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "4256:9:4"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4170:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4195:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4187:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4227:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "4214:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1131,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4214:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4186:46:4"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4266:0:4"
									},
									"scope": 1237,
									"src": "4161:214:4",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "4623:267:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1153,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4658:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 1152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4650:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1151,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4650:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4650:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1155,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4667:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4650:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1157,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1944,
																	"src": "4728:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1944_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4741:17:4",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1696,
																"src": "4728:30:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4728:32:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1160,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1075,
															"src": "4764:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4728:42:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4650:120:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1167,
												"nodeType": "IfStatement",
												"src": "4633:251:4",
												"trueBody": {
													"id": 1166,
													"nodeType": "Block",
													"src": "4823:61:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1163,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "4844:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1164,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4844:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1165,
															"nodeType": "RevertStatement",
															"src": "4837:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "4381:192:4",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4587:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4598:2:4"
									},
									"returnParameters": {
										"id": 1150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:4"
									},
									"scope": 1237,
									"src": "4578:312:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1184,
										"nodeType": "Block",
										"src": "5059:161:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1175,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5081:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$1237",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 1174,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5073:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1173,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5073:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5073:13:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 1177,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1075,
														"src": "5090:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5073:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1183,
												"nodeType": "IfStatement",
												"src": "5069:145:4",
												"trueBody": {
													"id": 1182,
													"nodeType": "Block",
													"src": "5098:116:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1179,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "5174:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5174:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1181,
															"nodeType": "RevertStatement",
															"src": "5167:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "4896:106:4",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 1185,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5016:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5034:2:4"
									},
									"returnParameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5059:0:4"
									},
									"scope": 1237,
									"src": "5007:213:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1186,
										"nodeType": "StructuredDocumentation",
										"src": "5226:372:4",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 1191,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5612:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5638:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1191,
												"src": "5630:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5630:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5629:27:4"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5673:0:4"
									},
									"scope": 1237,
									"src": "5603:71:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1235,
										"nodeType": "Block",
										"src": "6117:453:4",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1224,
															"nodeType": "Block",
															"src": "6207:212:4",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1207,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "6225:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 1208,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "6233:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1944_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6246:19:4",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1665,
																			"src": "6233:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6225:40:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1216,
																	"nodeType": "IfStatement",
																	"src": "6221:120:4",
																	"trueBody": {
																		"id": 1215,
																		"nodeType": "Block",
																		"src": "6267:74:4",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 1212,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1205,
																							"src": "6321:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 1211,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1087,
																						"src": "6292:28:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 1213,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6292:34:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 1214,
																				"nodeType": "RevertStatement",
																				"src": "6285:41:4"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1220,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1194,
																				"src": "6384:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1221,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1196,
																				"src": "6403:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 1217,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "6354:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1944_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6367:16:4",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1759,
																			"src": "6354:29:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 1222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6354:54:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1223,
																	"nodeType": "ExpressionStatement",
																	"src": "6354:54:4"
																}
															]
														},
														"errorName": "",
														"id": 1225,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1206,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1205,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6201:4:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1225,
																	"src": "6193:12:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1204,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6193:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6192:14:4"
														},
														"src": "6184:235:4"
													},
													{
														"block": {
															"id": 1232,
															"nodeType": "Block",
															"src": "6426:138:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 1229,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1194,
																				"src": "6535:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1226,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1944,
																				"src": "6493:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1944_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6506:28:4",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1670,
																			"src": "6493:41:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6493:60:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1231,
																	"nodeType": "RevertStatement",
																	"src": "6486:67:4"
																}
															]
														},
														"errorName": "",
														"id": 1233,
														"nodeType": "TryCatchClause",
														"src": "6420:144:4"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1200,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "6149:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1199,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1650,
																"src": "6131:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1650_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6131:36:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1650",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 1202,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6168:13:4",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1649,
														"src": "6131:50:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6131:52:4",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1234,
												"nodeType": "TryStatement",
												"src": "6127:437:4"
											}
										]
									},
									"documentation": {
										"id": 1192,
										"nodeType": "StructuredDocumentation",
										"src": "5680:347:4",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6041:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6071:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "6063:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6063:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6103:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1236,
												"src": "6090:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6090:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6062:46:4"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:4"
									},
									"scope": 1237,
									"src": "6032:538:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1238,
							"src": "986:5586:4",
							"usedErrors": [
								804,
								807,
								1082,
								1087,
								1670,
								1683,
								1964,
								2227
							],
							"usedEvents": [
								812,
								1627
							]
						}
					],
					"src": "115:6458:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1496
						],
						"Initializable": [
							1055
						],
						"PausableUpgradeable": [
							1365
						]
					},
					"id": 1366,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1240,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1366,
							"sourceUnit": 1497,
							"src": "130:41:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1242,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1366,
							"sourceUnit": 1056,
							"src": "172:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1241,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "180:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1244,
										"name": "Initializable",
										"nameLocations": [
											"718:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "718:13:5"
									},
									"id": 1245,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:5"
								},
								{
									"baseName": {
										"id": 1246,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "733:18:5"
									},
									"id": 1247,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:5"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1243,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1365,
							"linearizedBaseContracts": [
								1365,
								1496,
								1055
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1252,
									"name": "Paused",
									"nameLocation": "842:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "849:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:5"
									},
									"src": "836:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1257,
									"name": "Unpaused",
									"nameLocation": "953:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1257,
												"src": "962:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:5"
									},
									"src": "947:32:5"
								},
								{
									"constant": false,
									"id": 1259,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "985:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1258,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "1137:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1265,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "1147:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:5"
											}
										]
									},
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1263,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1262,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "1120:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:5"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:5"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:5"
									},
									"scope": 1365,
									"src": "1084:97:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1250:32:5",
										"statements": [
											{
												"expression": {
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1274,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1260:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:5"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1272,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1271,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "1233:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:5"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:5"
									},
									"returnParameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:5"
									},
									"scope": 1365,
									"src": "1187:95:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1493:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1282,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1316,
														"src": "1503:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:5"
											},
											{
												"id": 1285,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:5"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1287,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:5"
									},
									"src": "1468:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "1740:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1290,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1327,
														"src": "1750:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1292,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:5"
											},
											{
												"id": 1293,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:5"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1295,
									"name": "whenPaused",
									"nameLocation": "1727:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:5"
									},
									"src": "1718:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1303,
										"nodeType": "Block",
										"src": "1932:31:5",
										"statements": [
											{
												"expression": {
													"id": 1301,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1259,
													"src": "1949:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1300,
												"id": 1302,
												"nodeType": "Return",
												"src": "1942:14:5"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:5"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1304,
												"src": "1926:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1298,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:5"
									},
									"scope": 1365,
									"src": "1879:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1315,
										"nodeType": "Block",
										"src": "2082:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1309,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1304,
																	"src": "2101:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 1312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 1308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1314,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:5"
											}
										]
									},
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1316,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:5"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:5"
									},
									"scope": 1365,
									"src": "2031:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "2257:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1321,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1304,
																"src": "2275:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 1320,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:5"
											}
										]
									},
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:5"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:5"
									},
									"scope": 1365,
									"src": "2209:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1342,
										"nodeType": "Block",
										"src": "2499:66:5",
										"statements": [
											{
												"expression": {
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1333,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "2509:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1336,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1338,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "2545:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1337,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1252,
														"src": "2538:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "EmitStatement",
												"src": "2533:25:5"
											}
										]
									},
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1343,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1331,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1330,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1287,
												"src": "2485:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:5"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:5"
									},
									"scope": 1365,
									"src": "2450:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "2745:69:5",
										"statements": [
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1349,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "2755:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1354,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "2794:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1353,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "2785:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "EmitStatement",
												"src": "2780:27:5"
											}
										]
									},
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1295,
												"src": "2734:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:5"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:5"
									},
									"scope": 1365,
									"src": "2697:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:5",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1364,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:5",
									"nodeType": "VariableDeclaration",
									"scope": 1365,
									"src": "3079:25:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1361,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:5",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1363,
										"length": {
											"hexValue": "3439",
											"id": 1362,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:5",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:5",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1366,
							"src": "677:2430:5",
							"usedErrors": [
								804,
								807
							],
							"usedEvents": [
								812,
								1252,
								1257
							]
						}
					],
					"src": "105:3003:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol",
					"exportedSymbols": {
						"Initializable": [
							1055
						],
						"ReentrancyGuardUpgradeable": [
							1450
						]
					},
					"id": 1451,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1367,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1369,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1451,
							"sourceUnit": 1056,
							"src": "136:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1368,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "144:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1371,
										"name": "Initializable",
										"nameLocations": [
											"1000:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "1000:13:6"
									},
									"id": 1372,
									"nodeType": "InheritanceSpecifier",
									"src": "1000:13:6"
								}
							],
							"canonicalName": "ReentrancyGuardUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1370,
								"nodeType": "StructuredDocumentation",
								"src": "201:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1450,
							"linearizedBaseContracts": [
								1450,
								1055
							],
							"name": "ReentrancyGuardUpgradeable",
							"nameLocation": "970:26:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1375,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1793:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 1450,
									"src": "1768:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1373,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1768:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1374,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1808:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1378,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1840:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1450,
									"src": "1815:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1376,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1815:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1377,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1851:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1380,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1875:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1450,
									"src": "1859:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1379,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1859:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1388,
										"nodeType": "Block",
										"src": "1949:51:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1385,
														"name": "__ReentrancyGuard_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1399,
														"src": "1959:32:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1959:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "1959:34:6"
											}
										]
									},
									"id": 1389,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1382,
												"name": "onlyInitializing",
												"nameLocations": [
													"1932:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "1932:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1932:16:6"
										}
									],
									"name": "__ReentrancyGuard_init",
									"nameLocation": "1898:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:6"
									},
									"returnParameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1949:0:6"
									},
									"scope": 1450,
									"src": "1889:111:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1398,
										"nodeType": "Block",
										"src": "2076:39:6",
										"statements": [
											{
												"expression": {
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1394,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "2086:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1395,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "2096:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2086:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1397,
												"nodeType": "ExpressionStatement",
												"src": "2086:22:6"
											}
										]
									},
									"id": 1399,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1392,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1391,
												"name": "onlyInitializing",
												"nameLocations": [
													"2059:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "2059:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "2059:16:6"
										}
									],
									"name": "__ReentrancyGuard_init_unchained",
									"nameLocation": "2015:32:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2047:2:6"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2076:0:6"
									},
									"scope": 1450,
									"src": "2006:109:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2516:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1402,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1425,
														"src": "2526:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2526:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "2526:21:6"
											},
											{
												"id": 1405,
												"nodeType": "PlaceholderStatement",
												"src": "2557:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1406,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "2568:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2568:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2568:20:6"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "2121:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1410,
									"name": "nonReentrant",
									"nameLocation": "2501:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2513:2:6"
									},
									"src": "2492:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1424,
										"nodeType": "Block",
										"src": "2640:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1414,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1380,
																"src": "2733:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1415,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1378,
																"src": "2744:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2733:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2754:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1413,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2725:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2725:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1419,
												"nodeType": "ExpressionStatement",
												"src": "2725:63:6"
											},
											{
												"expression": {
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1420,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "2863:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1421,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "2873:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2863:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1423,
												"nodeType": "ExpressionStatement",
												"src": "2863:18:6"
											}
										]
									},
									"id": 1425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2610:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2629:2:6"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:0:6"
									},
									"scope": 1450,
									"src": "2601:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1432,
										"nodeType": "Block",
										"src": "2932:171:6",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1428,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "3074:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1375,
														"src": "3084:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3074:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "3074:22:6"
											}
										]
									},
									"id": 1433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2903:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2921:2:6"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2932:0:6"
									},
									"scope": 1450,
									"src": "2894:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1443,
										"nodeType": "Block",
										"src": "3346:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1439,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "3363:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1440,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1378,
														"src": "3374:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3363:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1438,
												"id": 1442,
												"nodeType": "Return",
												"src": "3356:26:6"
											}
										]
									},
									"documentation": {
										"id": 1434,
										"nodeType": "StructuredDocumentation",
										"src": "3109:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3291:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3314:2:6"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1444,
												"src": "3340:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1436,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3340:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:6:6"
									},
									"scope": 1450,
									"src": "3282:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 1445,
										"nodeType": "StructuredDocumentation",
										"src": "3395:254:6",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 1449,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3674:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1450,
									"src": "3654:25:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 1446,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3654:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1448,
										"length": {
											"hexValue": "3439",
											"id": 1447,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3662:2:6",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3654:11:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 1451,
							"src": "952:2730:6",
							"usedErrors": [
								804,
								807
							],
							"usedEvents": [
								812
							]
						}
					],
					"src": "112:3571:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1496
						],
						"Initializable": [
							1055
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1452,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1454,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1497,
							"sourceUnit": 1056,
							"src": "126:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1453,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "134:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1456,
										"name": "Initializable",
										"nameLocations": [
											"728:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "728:13:7"
									},
									"id": 1457,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1455,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496,
								1055
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "800:7:7",
										"statements": []
									},
									"id": 1463,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1460,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1459,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "783:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:7"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:7"
									},
									"scope": 1496,
									"src": "748:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1468,
										"nodeType": "Block",
										"src": "875:7:7",
										"statements": []
									},
									"id": 1469,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1465,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "858:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:7"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:7"
									},
									"scope": 1496,
									"src": "813:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "949:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1476,
												"nodeType": "Return",
												"src": "959:17:7"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:7"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "940:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:7"
									},
									"scope": 1496,
									"src": "887:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "1056:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "1066:15:7"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:7"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"scope": 1496,
									"src": "989:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "1166:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1491,
												"id": 1493,
												"nodeType": "Return",
												"src": "1176:8:7"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:7"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "1157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:7"
									},
									"scope": 1496,
									"src": "1094:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1497,
							"src": "688:505:7",
							"usedErrors": [
								804,
								807
							],
							"usedEvents": [
								812
							]
						}
					],
					"src": "101:1093:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1536
						],
						"IERC165": [
							2372
						],
						"Initializable": [
							1055
						]
					},
					"id": 1537,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1537,
							"sourceUnit": 2373,
							"src": "140:80:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1499,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2372,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1537,
							"sourceUnit": 1056,
							"src": "221:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1501,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1055,
										"src": "229:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1504,
										"name": "Initializable",
										"nameLocations": [
											"808:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1055,
										"src": "808:13:8"
									},
									"id": 1505,
									"nodeType": "InheritanceSpecifier",
									"src": "808:13:8"
								},
								{
									"baseName": {
										"id": 1506,
										"name": "IERC165",
										"nameLocations": [
											"823:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2372,
										"src": "823:7:8"
									},
									"id": 1507,
									"nodeType": "InheritanceSpecifier",
									"src": "823:7:8"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "289:479:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1536,
							"linearizedBaseContracts": [
								1536,
								2372,
								1055
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "787:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "888:7:8",
										"statements": []
									},
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "onlyInitializing",
												"nameLocations": [
													"871:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "871:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "871:16:8"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "846:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:8"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "888:0:8"
									},
									"scope": 1536,
									"src": "837:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "962:7:8",
										"statements": []
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1516,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1515,
												"name": "onlyInitializing",
												"nameLocations": [
													"945:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 950,
												"src": "945:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "945:16:8"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "910:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "933:2:8"
									},
									"returnParameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "962:0:8"
									},
									"scope": 1536,
									"src": "901:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2371
									],
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "1117:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1527,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "1134:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1529,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2372,
																	"src": "1154:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2372_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2372_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1528,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1149:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1149:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2372",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1163:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1149:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1134:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1533,
												"nodeType": "Return",
												"src": "1127:47:8"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "974:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1044:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1069:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1062:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1062:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1061:20:8"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "1111:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1111:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:6:8"
									},
									"scope": 1536,
									"src": "1035:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1537,
							"src": "769:414:8",
							"usedErrors": [
								804,
								807
							],
							"usedEvents": [
								812
							]
						}
					],
					"src": "114:1070:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1619
						]
					},
					"id": 1620,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1538,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1539,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:9",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 1619,
							"linearizedBaseContracts": [
								1619
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:9",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1546,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "357:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "374:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:9"
									},
									"src": "318:76:9"
								},
								{
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:9",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1549,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:9"
									},
									"src": "553:37:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1550,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:9",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1558,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1552,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "878:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1551,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "900:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1553,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1556,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "935:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1555,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:9"
									},
									"src": "855:110:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:9",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1567,
									"name": "RoleGranted",
									"nameLocation": "1277:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1289:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1560,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1563,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1311:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1567,
												"src": "1336:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:9"
									},
									"src": "1271:89:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1568,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:9",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1576,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1664:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1569,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1572,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1686:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1576,
												"src": "1711:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:9"
									},
									"src": "1646:89:9"
								},
								{
									"documentation": {
										"id": 1577,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:9",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1839:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1578,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1853:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:9"
									},
									"returnParameters": {
										"id": 1585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "1893:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1583,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:9"
									},
									"scope": 1619,
									"src": "1822:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:9",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2116:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1588,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:9"
									},
									"returnParameters": {
										"id": 1593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1594,
												"src": "2153:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1591,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:9"
									},
									"scope": 1619,
									"src": "2094:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1595,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:9",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2431:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1596,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "2445:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:9"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:9"
									},
									"scope": 1619,
									"src": "2412:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:9",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1610,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2725:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "2739:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:9"
									},
									"returnParameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:9"
									},
									"scope": 1619,
									"src": "2705:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:9",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "3289:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1612,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "3303:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:9"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:9"
									},
									"scope": 1619,
									"src": "3267:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1620,
							"src": "226:3116:9",
							"usedErrors": [
								1546,
								1549
							],
							"usedEvents": [
								1558,
								1567,
								1576
							]
						}
					],
					"src": "109:3234:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/IERC1967.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
					"exportedSymbols": {
						"IERC1967": [
							1640
						]
					},
					"id": 1641,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1621,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1967",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1622,
								"nodeType": "StructuredDocumentation",
								"src": "133:101:10",
								"text": " @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."
							},
							"fullyImplemented": true,
							"id": 1640,
							"linearizedBaseContracts": [
								1640
							],
							"name": "IERC1967",
							"nameLocation": "245:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1623,
										"nodeType": "StructuredDocumentation",
										"src": "260:68:10",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1627,
									"name": "Upgraded",
									"nameLocation": "339:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1625,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "364:14:10",
												"nodeType": "VariableDeclaration",
												"scope": 1627,
												"src": "348:30:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "347:32:10"
									},
									"src": "333:47:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1628,
										"nodeType": "StructuredDocumentation",
										"src": "386:67:10",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1634,
									"name": "AdminChanged",
									"nameLocation": "464:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "485:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "477:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1632,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "508:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1634,
												"src": "500:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "500:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:41:10"
									},
									"src": "458:60:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1635,
										"nodeType": "StructuredDocumentation",
										"src": "524:59:10",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1639,
									"name": "BeaconUpgraded",
									"nameLocation": "594:14:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "625:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "609:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "609:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "608:24:10"
									},
									"src": "588:45:10"
								}
							],
							"scope": 1641,
							"src": "235:400:10",
							"usedErrors": [],
							"usedEvents": [
								1627,
								1634,
								1639
							]
						}
					],
					"src": "107:529:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1650
						]
					},
					"id": 1651,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1642,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1643,
								"nodeType": "StructuredDocumentation",
								"src": "139:204:11",
								"text": " @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1650,
							"linearizedBaseContracts": [
								1650
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "354:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1644,
										"nodeType": "StructuredDocumentation",
										"src": "378:438:11",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "830:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "843:2:11"
									},
									"returnParameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "869:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1646,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "869:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "868:9:11"
									},
									"scope": 1650,
									"src": "821:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1651,
							"src": "344:536:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:768:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							2214
						],
						"ERC1967Utils": [
							1944
						],
						"IBeacon": [
							1954
						],
						"IERC1967": [
							1640
						],
						"StorageSlot": [
							2360
						]
					},
					"id": 1945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1652,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1654,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 1955,
							"src": "140:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1653,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1954,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1967.sol",
							"file": "../../interfaces/IERC1967.sol",
							"id": 1656,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 1641,
							"src": "187:55:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1655,
										"name": "IERC1967",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1640,
										"src": "195:8:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1658,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 2215,
							"src": "243:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1657,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2214,
										"src": "251:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1660,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 2361,
							"src": "292:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1659,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2360,
										"src": "300:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1661,
								"nodeType": "StructuredDocumentation",
								"src": "350:145:12",
								"text": " @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."
							},
							"fullyImplemented": true,
							"id": 1944,
							"linearizedBaseContracts": [
								1944
							],
							"name": "ERC1967Utils",
							"nameLocation": "504:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "523:170:12",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1665,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "789:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "763:114:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1663,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "763:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1664,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "811:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "884:69:12",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1670,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "964:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1001:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "993:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "993:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "992:24:12"
									},
									"src": "958:59:12"
								},
								{
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "1023:60:12",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1675,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1094:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1122:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "1114:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1113:15:12"
									},
									"src": "1088:41:12"
								},
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "1135:61:12",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1680,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1207:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1236:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "1228:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:16:12"
									},
									"src": "1201:43:12"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "1250:82:12",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1683,
									"name": "ERC1967NonPayable",
									"nameLocation": "1343:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1360:2:12"
									},
									"src": "1337:26:12"
								},
								{
									"body": {
										"id": 1695,
										"nodeType": "Block",
										"src": "1502:77:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1691,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1665,
																"src": "1546:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1689,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "1519:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1531:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2271,
															"src": "1519:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1519:47:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1567:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2241,
													"src": "1519:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1694,
												"nodeType": "Return",
												"src": "1512:60:12"
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "1369:67:12",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1450:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1467:2:12"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "1493:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1492:9:12"
									},
									"scope": 1944,
									"src": "1441:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1722,
										"nodeType": "Block",
										"src": "1734:218:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1702,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1699,
																"src": "1748:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1766:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1748:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1704,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1771:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1748:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1781:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1748:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1712,
												"nodeType": "IfStatement",
												"src": "1744:119:12",
												"trueBody": {
													"id": 1711,
													"nodeType": "Block",
													"src": "1784:79:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1708,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1699,
																		"src": "1834:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1707,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "1805:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1805:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1710,
															"nodeType": "RevertStatement",
															"src": "1798:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1716,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1665,
																	"src": "1899:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1713,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "1872:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1884:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2271,
																"src": "1872:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1872:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1718,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1920:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2241,
														"src": "1872:53:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1719,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1699,
														"src": "1928:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1872:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1721,
												"nodeType": "ExpressionStatement",
												"src": "1872:73:12"
											}
										]
									},
									"documentation": {
										"id": 1697,
										"nodeType": "StructuredDocumentation",
										"src": "1585:81:12",
										"text": " @dev Stores a new address in the ERC-1967 implementation slot."
									},
									"id": 1723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "1680:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "1707:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "1699:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:27:12"
									},
									"returnParameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1734:0:12"
									},
									"scope": 1944,
									"src": "1671:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1758,
										"nodeType": "Block",
										"src": "2345:263:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1732,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "2374:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1731,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1723,
														"src": "2355:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2355:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1734,
												"nodeType": "ExpressionStatement",
												"src": "2355:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1738,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1726,
															"src": "2425:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1735,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "2407:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1640_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2416:8:12",
														"memberName": "Upgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1627,
														"src": "2407:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2407:36:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1740,
												"nodeType": "EmitStatement",
												"src": "2402:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1728,
															"src": "2458:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2463:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2458:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2472:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2458:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1756,
													"nodeType": "Block",
													"src": "2559:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1753,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "2573:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2573:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1755,
															"nodeType": "ExpressionStatement",
															"src": "2573:18:12"
														}
													]
												},
												"id": 1757,
												"nodeType": "IfStatement",
												"src": "2454:148:12",
												"trueBody": {
													"id": 1752,
													"nodeType": "Block",
													"src": "2475:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1748,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1726,
																		"src": "2518:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1749,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1728,
																		"src": "2537:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1745,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "2489:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2214_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2497:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2131,
																	"src": "2489:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2489:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1751,
															"nodeType": "ExpressionStatement",
															"src": "2489:53:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1724,
										"nodeType": "StructuredDocumentation",
										"src": "1958:301:12",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2273:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2298:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2290:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2290:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2330:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "2317:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2317:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2289:46:12"
									},
									"returnParameters": {
										"id": 1730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2345:0:12"
									},
									"scope": 1944,
									"src": "2264:344:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "2614:145:12",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1763,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "2855:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "2829:105:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1761,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2829:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1762,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2868:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1775,
										"nodeType": "Block",
										"src": "3339:68:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1771,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "3383:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1769,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "3356:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1770,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3368:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2271,
															"src": "3356:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1772,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3356:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1773,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3395:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2241,
													"src": "3356:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1768,
												"id": 1774,
												"nodeType": "Return",
												"src": "3349:51:12"
											}
										]
									},
									"documentation": {
										"id": 1764,
										"nodeType": "StructuredDocumentation",
										"src": "2941:341:12",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3296:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3304:2:12"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1776,
												"src": "3330:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1766,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3329:9:12"
									},
									"scope": 1944,
									"src": "3287:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1806,
										"nodeType": "Block",
										"src": "3535:172:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1782,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "3549:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3569:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3561:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1783,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3561:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3561:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3549:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1796,
												"nodeType": "IfStatement",
												"src": "3545:91:12",
												"trueBody": {
													"id": 1795,
													"nodeType": "Block",
													"src": "3573:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3622:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1790,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3614:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1789,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3614:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3614:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1788,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1675,
																	"src": "3594:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3594:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1794,
															"nodeType": "RevertStatement",
															"src": "3587:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1800,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1763,
																	"src": "3672:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1797,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "3645:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3657:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2271,
																"src": "3645:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3645:38:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1802,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3684:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2241,
														"src": "3645:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1803,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1779,
														"src": "3692:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3645:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1805,
												"nodeType": "ExpressionStatement",
												"src": "3645:55:12"
											}
										]
									},
									"documentation": {
										"id": 1777,
										"nodeType": "StructuredDocumentation",
										"src": "3413:72:12",
										"text": " @dev Stores a new address in the ERC-1967 admin slot."
									},
									"id": 1807,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "3499:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3517:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1807,
												"src": "3509:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:18:12"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3535:0:12"
									},
									"scope": 1944,
									"src": "3490:217:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1825,
										"nodeType": "Block",
										"src": "3875:94:12",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1816,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "3912:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3912:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1818,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3924:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1813,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "3890:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1640_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3899:12:12",
														"memberName": "AdminChanged",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1634,
														"src": "3890:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "EmitStatement",
												"src": "3885:48:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1822,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1810,
															"src": "3953:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1821,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1807,
														"src": "3943:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3943:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1824,
												"nodeType": "ExpressionStatement",
												"src": "3943:19:12"
											}
										]
									},
									"documentation": {
										"id": 1808,
										"nodeType": "StructuredDocumentation",
										"src": "3713:109:12",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "3836:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "3856:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1826,
												"src": "3848:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3848:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3847:18:12"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3875:0:12"
									},
									"scope": 1944,
									"src": "3827:142:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1827,
										"nodeType": "StructuredDocumentation",
										"src": "3975:201:12",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1830,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4272:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "4246:106:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1828,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4246:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1829,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4286:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "4468:69:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1838,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1830,
																"src": "4512:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1836,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2360,
																"src": "4485:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4497:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2271,
															"src": "4485:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1839,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4485:39:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4525:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2241,
													"src": "4485:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1835,
												"id": 1841,
												"nodeType": "Return",
												"src": "4478:52:12"
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "4359:51:12",
										"text": " @dev Returns the current beacon."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4424:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4433:2:12"
									},
									"returnParameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "4459:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4459:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4458:9:12"
									},
									"scope": 1944,
									"src": "4415:122:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "4667:390:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1849,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1846,
																"src": "4681:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4691:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4681:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4696:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4681:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1852,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4706:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4681:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1859,
												"nodeType": "IfStatement",
												"src": "4677:95:12",
												"trueBody": {
													"id": 1858,
													"nodeType": "Block",
													"src": "4709:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1855,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1846,
																		"src": "4751:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1854,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "4730:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4730:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1857,
															"nodeType": "RevertStatement",
															"src": "4723:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1863,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1830,
																	"src": "4809:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1860,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2360,
																	"src": "4782:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2360_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4794:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2271,
																"src": "4782:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2242_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4782:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1865,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4822:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2241,
														"src": "4782:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1866,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "4830:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4782:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1868,
												"nodeType": "ExpressionStatement",
												"src": "4782:57:12"
											},
											{
												"assignments": [
													1870
												],
												"declarations": [
													{
														"constant": false,
														"id": 1870,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "4858:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 1888,
														"src": "4850:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1869,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4850:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1876,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1872,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1846,
																	"src": "4889:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1871,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1954,
																"src": "4881:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1954_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4881:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1954",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4900:14:12",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1953,
														"src": "4881:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4850:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1877,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1870,
																"src": "4930:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4951:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "4930:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4956:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4930:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4930:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1887,
												"nodeType": "IfStatement",
												"src": "4926:125:12",
												"trueBody": {
													"id": 1886,
													"nodeType": "Block",
													"src": "4969:82:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1883,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "5019:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1882,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "4990:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1884,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4990:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1885,
															"nodeType": "RevertStatement",
															"src": "4983:57:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "4543:72:12",
										"text": " @dev Stores a new beacon in the ERC-1967 beacon slot."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "4629:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "4648:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "4640:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4640:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4639:19:12"
									},
									"returnParameters": {
										"id": 1848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4667:0:12"
									},
									"scope": 1944,
									"src": "4620:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1928,
										"nodeType": "Block",
										"src": "5661:263:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1898,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "5682:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1897,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1889,
														"src": "5671:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5671:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1900,
												"nodeType": "ExpressionStatement",
												"src": "5671:21:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1904,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1892,
															"src": "5731:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1901,
															"name": "IERC1967",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "5707:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC1967_$1640_$",
																"typeString": "type(contract IERC1967)"
															}
														},
														"id": 1903,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5716:14:12",
														"memberName": "BeaconUpgraded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1639,
														"src": "5707:23:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5707:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1906,
												"nodeType": "EmitStatement",
												"src": "5702:39:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1907,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1894,
															"src": "5756:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1908,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5761:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5756:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5770:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5756:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1926,
													"nodeType": "Block",
													"src": "5875:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1923,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1943,
																	"src": "5889:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5889:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1925,
															"nodeType": "ExpressionStatement",
															"src": "5889:18:12"
														}
													]
												},
												"id": 1927,
												"nodeType": "IfStatement",
												"src": "5752:166:12",
												"trueBody": {
													"id": 1922,
													"nodeType": "Block",
													"src": "5773:96:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1915,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1892,
																						"src": "5824:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1914,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1954,
																					"src": "5816:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1954_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5816:18:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1954",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5835:14:12",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1953,
																			"src": "5816:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5816:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1919,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "5853:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1911,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "5787:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$2214_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5795:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2131,
																	"src": "5787:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1920,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5787:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1921,
															"nodeType": "ExpressionStatement",
															"src": "5787:71:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "5063:514:12",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "5591:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5622:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "5614:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1891,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5646:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1929,
												"src": "5633:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5633:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:12"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5661:0:12"
									},
									"scope": 1944,
									"src": "5582:342:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "6149:86:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1933,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6163:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1934,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6167:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6163:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1935,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6175:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6163:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1941,
												"nodeType": "IfStatement",
												"src": "6159:70:12",
												"trueBody": {
													"id": 1940,
													"nodeType": "Block",
													"src": "6178:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1937,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1683,
																	"src": "6199:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6199:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1939,
															"nodeType": "RevertStatement",
															"src": "6192:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1930,
										"nodeType": "StructuredDocumentation",
										"src": "5930:178:12",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6122:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6138:2:12"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6149:0:12"
									},
									"scope": 1944,
									"src": "6113:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1945,
							"src": "496:5741:12",
							"usedErrors": [
								1670,
								1675,
								1680,
								1683
							],
							"usedEvents": []
						}
					],
					"src": "114:6124:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1954
						]
					},
					"id": 1955,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1946,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1947,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:13",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1954,
							"linearizedBaseContracts": [
								1954
							],
							"name": "IBeacon",
							"nameLocation": "224:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:13",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:13"
									},
									"returnParameters": {
										"id": 1952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1953,
												"src": "460:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:13"
									},
									"scope": 1954,
									"src": "411:58:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1955,
							"src": "214:257:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							2214
						],
						"Errors": [
							2236
						]
					},
					"id": 2215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1956,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 1958,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2215,
							"sourceUnit": 2237,
							"src": "127:36:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1957,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2236,
										"src": "135:6:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1959,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 2214,
							"linearizedBaseContracts": [
								2214
							],
							"name": "Address",
							"nameLocation": "241:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1960,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1964,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "358:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:14"
									},
									"src": "335:39:14"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "1361:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1974,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2214",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2214",
																		"typeString": "library Address"
																	}
																],
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1972,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1977,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "1399:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1991,
												"nodeType": "IfStatement",
												"src": "1371:125:14",
												"trueBody": {
													"id": 1990,
													"nodeType": "Block",
													"src": "1407:89:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1984,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2214",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2214",
																						"typeString": "library Address"
																					}
																				],
																				"id": 1983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1982,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1985,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 1986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1987,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1969,
																		"src": "1478:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1979,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "1428:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2236_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 1981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2224,
																	"src": "1428:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1988,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1989,
															"nodeType": "RevertStatement",
															"src": "1421:64:14"
														}
													]
												}
											},
											{
												"assignments": [
													1993,
													1995
												],
												"declarations": [
													{
														"constant": false,
														"id": 1993,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "1507:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1992,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1995,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "1534:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2011,
														"src": "1521:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1994,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1521:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2002,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1578:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1996,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1967,
																"src": "1548:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1558:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1548:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1999,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1998,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1969,
																"src": "1570:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1548:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1548:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:75:14"
											},
											{
												"condition": {
													"id": 2004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1595:8:14",
													"subExpression": {
														"id": 2003,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "1596:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2010,
												"nodeType": "IfStatement",
												"src": "1591:58:14",
												"trueBody": {
													"id": 2009,
													"nodeType": "Block",
													"src": "1605:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2006,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "1627:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2005,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "1619:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1619:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2008,
															"nodeType": "ExpressionStatement",
															"src": "1619:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1965,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1309:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "1336:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:14"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:14"
									},
									"scope": 2214,
									"src": "1290:365:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2028,
										"nodeType": "Block",
										"src": "2589:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2023,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "2628:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2017,
															"src": "2636:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 2025,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2642:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 2022,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2079,
														"src": "2606:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2606:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2021,
												"id": 2027,
												"nodeType": "Return",
												"src": "2599:45:14"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "1661:834:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 2029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2509:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2530:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2522:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2522:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2017,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2551:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2538:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2016,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2538:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2521:35:14"
									},
									"returnParameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2029,
												"src": "2575:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2019,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2575:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2574:14:14"
									},
									"scope": 2214,
									"src": "2500:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2078,
										"nodeType": "Block",
										"src": "3088:294:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2043,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3110:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$2214",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$2214",
																		"typeString": "library Address"
																	}
																],
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3102:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3102:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3102:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3116:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3102:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2046,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "3126:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3102:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2060,
												"nodeType": "IfStatement",
												"src": "3098:123:14",
												"trueBody": {
													"id": 2059,
													"nodeType": "Block",
													"src": "3133:88:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2053,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3189:4:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$2214",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$2214",
																						"typeString": "library Address"
																					}
																				],
																				"id": 2052,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3181:7:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 2051,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3181:7:14",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2054,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3181:13:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3195:7:14",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3181:21:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2056,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2036,
																		"src": "3204:5:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2048,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "3154:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2236_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3161:19:14",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2224,
																	"src": "3154:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 2057,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3154:56:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2058,
															"nodeType": "RevertStatement",
															"src": "3147:63:14"
														}
													]
												}
											},
											{
												"assignments": [
													2062,
													2064
												],
												"declarations": [
													{
														"constant": false,
														"id": 2062,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3236:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "3231:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2061,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3231:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2064,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3258:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2078,
														"src": "3245:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2063,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3245:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2071,
												"initialValue": {
													"arguments": [
														{
															"id": 2069,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2034,
															"src": "3298:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 2065,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2032,
																"src": "3272:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2066,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3279:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3272:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 2067,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "3291:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3272:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3230:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2073,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "3347:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2074,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2062,
															"src": "3355:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2075,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2064,
															"src": "3364:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2072,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "3320:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3320:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2040,
												"id": 2077,
												"nodeType": "Return",
												"src": "3313:62:14"
											}
										]
									},
									"documentation": {
										"id": 2030,
										"nodeType": "StructuredDocumentation",
										"src": "2657:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 2079,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2984:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3014:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "3006:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3006:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3035:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "3022:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3022:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3049:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "3041:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3041:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3005:50:14"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2039,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2079,
												"src": "3074:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2038,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3074:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3073:14:14"
									},
									"scope": 2214,
									"src": "2975:407:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2104,
										"nodeType": "Block",
										"src": "3621:154:14",
										"statements": [
											{
												"assignments": [
													2090,
													2092
												],
												"declarations": [
													{
														"constant": false,
														"id": 2090,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3637:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2104,
														"src": "3632:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2089,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3632:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2092,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3659:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2104,
														"src": "3646:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2091,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3646:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2097,
												"initialValue": {
													"arguments": [
														{
															"id": 2095,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "3691:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2093,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "3673:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3673:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3673:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3631:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2099,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2082,
															"src": "3740:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2100,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2090,
															"src": "3748:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2101,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2092,
															"src": "3757:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2098,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "3713:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3713:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2088,
												"id": 2103,
												"nodeType": "Return",
												"src": "3706:62:14"
											}
										]
									},
									"documentation": {
										"id": 2080,
										"nodeType": "StructuredDocumentation",
										"src": "3388:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 2105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3530:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3557:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "3549:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3549:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3578:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "3565:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3565:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3548:35:14"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2105,
												"src": "3607:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2086,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3607:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3606:14:14"
									},
									"scope": 2214,
									"src": "3521:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2130,
										"nodeType": "Block",
										"src": "4013:156:14",
										"statements": [
											{
												"assignments": [
													2116,
													2118
												],
												"declarations": [
													{
														"constant": false,
														"id": 2116,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4029:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "4024:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2115,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4024:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2118,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4051:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 2130,
														"src": "4038:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 2117,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4038:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2123,
												"initialValue": {
													"arguments": [
														{
															"id": 2121,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "4085:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2119,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "4065:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 2120,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4072:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4065:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 2122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4023:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2125,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2108,
															"src": "4134:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2126,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2116,
															"src": "4142:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2127,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2118,
															"src": "4151:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2124,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2171,
														"src": "4107:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4107:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 2114,
												"id": 2129,
												"nodeType": "Return",
												"src": "4100:62:14"
											}
										]
									},
									"documentation": {
										"id": 2106,
										"nodeType": "StructuredDocumentation",
										"src": "3781:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 2131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3925:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3954:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "3946:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3946:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3975:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "3962:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3962:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3945:35:14"
									},
									"returnParameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2131,
												"src": "3999:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3999:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3998:14:14"
									},
									"scope": 2214,
									"src": "3916:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2170,
										"nodeType": "Block",
										"src": "4595:424:14",
										"statements": [
											{
												"condition": {
													"id": 2144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4609:8:14",
													"subExpression": {
														"id": 2143,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2136,
														"src": "4610:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2168,
													"nodeType": "Block",
													"src": "4669:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2150,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2138,
																			"src": "4857:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2151,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4868:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4857:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2152,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4878:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4857:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 2154,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2134,
																				"src": "4883:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 2155,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4890:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4883:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4895:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4883:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4905:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4883:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4857:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2165,
															"nodeType": "IfStatement",
															"src": "4853:119:14",
															"trueBody": {
																"id": 2164,
																"nodeType": "Block",
																"src": "4908:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 2161,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2134,
																					"src": "4950:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2160,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1964,
																				"src": "4933:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4933:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 2163,
																		"nodeType": "RevertStatement",
																		"src": "4926:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2166,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2138,
																"src": "4992:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2142,
															"id": 2167,
															"nodeType": "Return",
															"src": "4985:17:14"
														}
													]
												},
												"id": 2169,
												"nodeType": "IfStatement",
												"src": "4605:408:14",
												"trueBody": {
													"id": 2149,
													"nodeType": "Block",
													"src": "4619:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2146,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2138,
																		"src": "4641:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2145,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "4633:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4633:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2148,
															"nodeType": "ExpressionStatement",
															"src": "4633:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2132,
										"nodeType": "StructuredDocumentation",
										"src": "4175:257:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 2171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4446:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2134,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4490:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "4482:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4511:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "4506:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4506:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4541:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "4528:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4528:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4472:85:14"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2141,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "4581:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2140,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4581:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4580:14:14"
									},
									"scope": 2214,
									"src": "4437:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2192,
										"nodeType": "Block",
										"src": "5323:122:14",
										"statements": [
											{
												"condition": {
													"id": 2182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5337:8:14",
													"subExpression": {
														"id": 2181,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "5338:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2190,
													"nodeType": "Block",
													"src": "5397:42:14",
													"statements": [
														{
															"expression": {
																"id": 2188,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "5418:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 2180,
															"id": 2189,
															"nodeType": "Return",
															"src": "5411:17:14"
														}
													]
												},
												"id": 2191,
												"nodeType": "IfStatement",
												"src": "5333:106:14",
												"trueBody": {
													"id": 2187,
													"nodeType": "Block",
													"src": "5347:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2184,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2176,
																		"src": "5369:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 2183,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2213,
																	"src": "5361:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 2185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5361:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2186,
															"nodeType": "ExpressionStatement",
															"src": "5361:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2172,
										"nodeType": "StructuredDocumentation",
										"src": "5025:191:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 2193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5230:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5252:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5247:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2173,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5247:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5274:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5261:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5261:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:39:14"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "5309:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5309:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5308:14:14"
									},
									"scope": 2214,
									"src": "5221:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2212,
										"nodeType": "Block",
										"src": "5614:432:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2199,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "5690:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5701:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5690:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5710:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5690:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2210,
													"nodeType": "Block",
													"src": "5989:51:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2205,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2236,
																		"src": "6010:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$2236_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 2207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6017:10:14",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2227,
																	"src": "6010:17:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6010:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2209,
															"nodeType": "RevertStatement",
															"src": "6003:26:14"
														}
													]
												},
												"id": 2211,
												"nodeType": "IfStatement",
												"src": "5686:354:14",
												"trueBody": {
													"id": 2204,
													"nodeType": "Block",
													"src": "5713:270:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5840:133:14",
																"nodeType": "YulBlock",
																"src": "5840:133:14",
																"statements": [
																	{
																		"nativeSrc": "5858:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5858:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5887:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "5887:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5881:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5881:5:14"
																			},
																			"nativeSrc": "5881:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5881:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5862:15:14",
																				"nodeType": "YulTypedName",
																				"src": "5862:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5926:2:14",
																							"nodeType": "YulLiteral",
																							"src": "5926:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5930:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "5930:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5922:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5922:3:14"
																					},
																					"nativeSrc": "5922:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "5922:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5943:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "5943:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5915:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5915:6:14"
																			},
																			"nativeSrc": "5915:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5915:44:14"
																		},
																		"nativeSrc": "5915:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5915:44:14"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 2196,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5887:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 2196,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5930:10:14",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 2203,
															"nodeType": "InlineAssembly",
															"src": "5815:158:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2194,
										"nodeType": "StructuredDocumentation",
										"src": "5451:103:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 2213,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5568:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2196,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5589:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 2213,
												"src": "5576:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2195,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5576:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5575:25:14"
									},
									"returnParameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5614:0:14"
									},
									"scope": 2214,
									"src": "5559:487:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2215,
							"src": "233:5815:14",
							"usedErrors": [
								1964
							],
							"usedEvents": []
						}
					],
					"src": "101:5948:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							2236
						]
					},
					"id": 2237,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2217,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:15",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 2236,
							"linearizedBaseContracts": [
								2236
							],
							"name": "Errors",
							"nameLocation": "419:6:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2218,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:15",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 2224,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2220,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "557:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "574:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:15"
									},
									"src": "531:59:15"
								},
								{
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:15",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 2227,
									"name": "FailedCall",
									"nameLocation": "696:10:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:15"
									},
									"src": "690:19:15"
								},
								{
									"documentation": {
										"id": 2228,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:15",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 2230,
									"name": "FailedDeployment",
									"nameLocation": "772:16:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:15"
									},
									"src": "766:25:15"
								},
								{
									"documentation": {
										"id": 2231,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:15",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 2235,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:15",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2235,
												"src": "884:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:15"
									},
									"src": "860:33:15"
								}
							],
							"scope": 2237,
							"src": "411:484:15",
							"usedErrors": [
								2224,
								2227,
								2230,
								2235
							],
							"usedEvents": []
						}
					],
					"src": "100:796:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2360
						]
					},
					"id": 2361,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2238,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2239,
								"nodeType": "StructuredDocumentation",
								"src": "219:1187:16",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."
							},
							"fullyImplemented": true,
							"id": 2360,
							"linearizedBaseContracts": [
								2360
							],
							"name": "StorageSlot",
							"nameLocation": "1415:11:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2242,
									"members": [
										{
											"constant": false,
											"id": 2241,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2242,
											"src": "1462:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2240,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:16",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1440:11:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1433:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2245,
									"members": [
										{
											"constant": false,
											"id": 2244,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1522:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2245,
											"src": "1517:10:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2243,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1517:4:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1495:11:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1488:46:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2248,
									"members": [
										{
											"constant": false,
											"id": 2247,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1577:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2248,
											"src": "1569:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2246,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1569:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1547:11:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1540:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2251,
									"members": [
										{
											"constant": false,
											"id": 2250,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1632:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2251,
											"src": "1624:13:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2249,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1624:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1602:11:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1595:49:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Int256Slot",
									"id": 2254,
									"members": [
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1685:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "1678:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											},
											"typeName": {
												"id": 2252,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "1678:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Int256Slot",
									"nameLocation": "1657:10:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1650:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2257,
									"members": [
										{
											"constant": false,
											"id": 2256,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1738:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2257,
											"src": "1731:12:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2255,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1731:6:16",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1710:10:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1703:47:16",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2260,
									"members": [
										{
											"constant": false,
											"id": 2259,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1789:5:16",
											"nodeType": "VariableDeclaration",
											"scope": 2260,
											"src": "1783:11:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2258,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1783:5:16",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1763:9:16",
									"nodeType": "StructDefinition",
									"scope": 2360,
									"src": "1756:45:16",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2270,
										"nodeType": "Block",
										"src": "1983:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2018:38:16",
													"nodeType": "YulBlock",
													"src": "2018:38:16",
													"statements": [
														{
															"nativeSrc": "2032:14:16",
															"nodeType": "YulAssignment",
															"src": "2032:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2042:4:16",
																"nodeType": "YulIdentifier",
																"src": "2042:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2032:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2032:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2267,
														"isOffset": false,
														"isSlot": true,
														"src": "2032:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2263,
														"isOffset": false,
														"isSlot": false,
														"src": "2042:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2269,
												"nodeType": "InlineAssembly",
												"src": "1993:63:16"
											}
										]
									},
									"documentation": {
										"id": 2261,
										"nodeType": "StructuredDocumentation",
										"src": "1807:87:16",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1908:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2263,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1931:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "1923:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2262,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:14:16"
									},
									"returnParameters": {
										"id": 2268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2267,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1980:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2271,
												"src": "1960:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2266,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2265,
														"name": "AddressSlot",
														"nameLocations": [
															"1960:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2242,
														"src": "1960:11:16"
													},
													"referencedDeclaration": 2242,
													"src": "1960:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2242_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1959:23:16"
									},
									"scope": 2360,
									"src": "1899:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2281,
										"nodeType": "Block",
										"src": "2243:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2278:38:16",
													"nodeType": "YulBlock",
													"src": "2278:38:16",
													"statements": [
														{
															"nativeSrc": "2292:14:16",
															"nodeType": "YulAssignment",
															"src": "2292:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2302:4:16",
																"nodeType": "YulIdentifier",
																"src": "2302:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2292:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2292:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2278,
														"isOffset": false,
														"isSlot": true,
														"src": "2292:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "2302:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2280,
												"nodeType": "InlineAssembly",
												"src": "2253:63:16"
											}
										]
									},
									"documentation": {
										"id": 2272,
										"nodeType": "StructuredDocumentation",
										"src": "2068:86:16",
										"text": " @dev Returns a `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "2168:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2274,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2191:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2183:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2183:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:14:16"
									},
									"returnParameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2240:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2282,
												"src": "2220:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2245_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2277,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2276,
														"name": "BooleanSlot",
														"nameLocations": [
															"2220:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2245,
														"src": "2220:11:16"
													},
													"referencedDeclaration": 2245,
													"src": "2220:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2245_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:23:16"
									},
									"scope": 2360,
									"src": "2159:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2292,
										"nodeType": "Block",
										"src": "2503:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2538:38:16",
													"nodeType": "YulBlock",
													"src": "2538:38:16",
													"statements": [
														{
															"nativeSrc": "2552:14:16",
															"nodeType": "YulAssignment",
															"src": "2552:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2562:4:16",
																"nodeType": "YulIdentifier",
																"src": "2562:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2552:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2289,
														"isOffset": false,
														"isSlot": true,
														"src": "2552:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2285,
														"isOffset": false,
														"isSlot": false,
														"src": "2562:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2291,
												"nodeType": "InlineAssembly",
												"src": "2513:63:16"
											}
										]
									},
									"documentation": {
										"id": 2283,
										"nodeType": "StructuredDocumentation",
										"src": "2328:86:16",
										"text": " @dev Returns a `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2428:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2451:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "2443:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2284,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2443:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2442:14:16"
									},
									"returnParameters": {
										"id": 2290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2500:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2293,
												"src": "2480:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2248_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2288,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2287,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2480:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2248,
														"src": "2480:11:16"
													},
													"referencedDeclaration": 2248,
													"src": "2480:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2248_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2479:23:16"
									},
									"scope": 2360,
									"src": "2419:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2303,
										"nodeType": "Block",
										"src": "2763:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2798:38:16",
													"nodeType": "YulBlock",
													"src": "2798:38:16",
													"statements": [
														{
															"nativeSrc": "2812:14:16",
															"nodeType": "YulAssignment",
															"src": "2812:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "2822:4:16",
																"nodeType": "YulIdentifier",
																"src": "2822:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2812:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2300,
														"isOffset": false,
														"isSlot": true,
														"src": "2812:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2296,
														"isOffset": false,
														"isSlot": false,
														"src": "2822:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2302,
												"nodeType": "InlineAssembly",
												"src": "2773:63:16"
											}
										]
									},
									"documentation": {
										"id": 2294,
										"nodeType": "StructuredDocumentation",
										"src": "2588:86:16",
										"text": " @dev Returns a `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2688:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2711:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2703:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2295,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2702:14:16"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2760:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2304,
												"src": "2740:21:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2251_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2299,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2298,
														"name": "Uint256Slot",
														"nameLocations": [
															"2740:11:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2251,
														"src": "2740:11:16"
													},
													"referencedDeclaration": 2251,
													"src": "2740:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2251_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:23:16"
									},
									"scope": 2360,
									"src": "2679:163:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "3020:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3055:38:16",
													"nodeType": "YulBlock",
													"src": "3055:38:16",
													"statements": [
														{
															"nativeSrc": "3069:14:16",
															"nodeType": "YulAssignment",
															"src": "3069:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3079:4:16",
																"nodeType": "YulIdentifier",
																"src": "3079:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3069:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3069:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2311,
														"isOffset": false,
														"isSlot": true,
														"src": "3069:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2307,
														"isOffset": false,
														"isSlot": false,
														"src": "3079:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2313,
												"nodeType": "InlineAssembly",
												"src": "3030:63:16"
											}
										]
									},
									"documentation": {
										"id": 2305,
										"nodeType": "StructuredDocumentation",
										"src": "2848:85:16",
										"text": " @dev Returns a `Int256Slot` with member `value` located at `slot`."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getInt256Slot",
									"nameLocation": "2947:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2969:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2961:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2306,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2961:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2960:14:16"
									},
									"returnParameters": {
										"id": 2312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3017:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2998:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Int256Slot_$2254_storage_ptr",
													"typeString": "struct StorageSlot.Int256Slot"
												},
												"typeName": {
													"id": 2310,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2309,
														"name": "Int256Slot",
														"nameLocations": [
															"2998:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2254,
														"src": "2998:10:16"
													},
													"referencedDeclaration": 2254,
													"src": "2998:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Int256Slot_$2254_storage_ptr",
														"typeString": "struct StorageSlot.Int256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2997:22:16"
									},
									"scope": 2360,
									"src": "2938:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2325,
										"nodeType": "Block",
										"src": "3277:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3312:38:16",
													"nodeType": "YulBlock",
													"src": "3312:38:16",
													"statements": [
														{
															"nativeSrc": "3326:14:16",
															"nodeType": "YulAssignment",
															"src": "3326:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3336:4:16",
																"nodeType": "YulIdentifier",
																"src": "3336:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3326:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3326:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2322,
														"isOffset": false,
														"isSlot": true,
														"src": "3326:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2318,
														"isOffset": false,
														"isSlot": false,
														"src": "3336:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2324,
												"nodeType": "InlineAssembly",
												"src": "3287:63:16"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "3105:85:16",
										"text": " @dev Returns a `StringSlot` with member `value` located at `slot`."
									},
									"id": 2326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3204:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3226:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "3218:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3218:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3217:14:16"
									},
									"returnParameters": {
										"id": 2323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2322,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3274:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2326,
												"src": "3255:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2257_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2321,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2320,
														"name": "StringSlot",
														"nameLocations": [
															"3255:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2257,
														"src": "3255:10:16"
													},
													"referencedDeclaration": 2257,
													"src": "3255:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2257_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3254:22:16"
									},
									"scope": 2360,
									"src": "3195:161:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2336,
										"nodeType": "Block",
										"src": "3558:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3593:44:16",
													"nodeType": "YulBlock",
													"src": "3593:44:16",
													"statements": [
														{
															"nativeSrc": "3607:20:16",
															"nodeType": "YulAssignment",
															"src": "3607:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3617:10:16",
																"nodeType": "YulIdentifier",
																"src": "3617:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3607:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3607:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2333,
														"isOffset": false,
														"isSlot": true,
														"src": "3607:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2329,
														"isOffset": false,
														"isSlot": true,
														"src": "3617:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2335,
												"nodeType": "InlineAssembly",
												"src": "3568:69:16"
											}
										]
									},
									"documentation": {
										"id": 2327,
										"nodeType": "StructuredDocumentation",
										"src": "3362:101:16",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3477:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3506:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "3491:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2328,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3491:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:22:16"
									},
									"returnParameters": {
										"id": 2334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3555:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "3536:20:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2257_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2332,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2331,
														"name": "StringSlot",
														"nameLocations": [
															"3536:10:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2257,
														"src": "3536:10:16"
													},
													"referencedDeclaration": 2257,
													"src": "3536:10:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2257_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:22:16"
									},
									"scope": 2360,
									"src": "3468:175:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2347,
										"nodeType": "Block",
										"src": "3818:79:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3853:38:16",
													"nodeType": "YulBlock",
													"src": "3853:38:16",
													"statements": [
														{
															"nativeSrc": "3867:14:16",
															"nodeType": "YulAssignment",
															"src": "3867:14:16",
															"value": {
																"name": "slot",
																"nativeSrc": "3877:4:16",
																"nodeType": "YulIdentifier",
																"src": "3877:4:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3867:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3867:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2344,
														"isOffset": false,
														"isSlot": true,
														"src": "3867:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2340,
														"isOffset": false,
														"isSlot": false,
														"src": "3877:4:16",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2346,
												"nodeType": "InlineAssembly",
												"src": "3828:63:16"
											}
										]
									},
									"documentation": {
										"id": 2338,
										"nodeType": "StructuredDocumentation",
										"src": "3649:84:16",
										"text": " @dev Returns a `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3747:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2340,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3768:4:16",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "3760:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2339,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:14:16"
									},
									"returnParameters": {
										"id": 2345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3815:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2348,
												"src": "3797:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2260_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2343,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2342,
														"name": "BytesSlot",
														"nameLocations": [
															"3797:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2260,
														"src": "3797:9:16"
													},
													"referencedDeclaration": 2260,
													"src": "3797:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2260_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:21:16"
									},
									"scope": 2360,
									"src": "3738:159:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2358,
										"nodeType": "Block",
										"src": "4094:85:16",
										"statements": [
											{
												"AST": {
													"nativeSrc": "4129:44:16",
													"nodeType": "YulBlock",
													"src": "4129:44:16",
													"statements": [
														{
															"nativeSrc": "4143:20:16",
															"nodeType": "YulAssignment",
															"src": "4143:20:16",
															"value": {
																"name": "store.slot",
																"nativeSrc": "4153:10:16",
																"nodeType": "YulIdentifier",
																"src": "4153:10:16"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "4143:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4143:6:16"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2355,
														"isOffset": false,
														"isSlot": true,
														"src": "4143:6:16",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2351,
														"isOffset": false,
														"isSlot": true,
														"src": "4153:10:16",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 2357,
												"nodeType": "InlineAssembly",
												"src": "4104:69:16"
											}
										]
									},
									"documentation": {
										"id": 2349,
										"nodeType": "StructuredDocumentation",
										"src": "3903:99:16",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "4016:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "4043:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2359,
												"src": "4029:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2350,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4029:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4028:21:16"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "4091:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2359,
												"src": "4073:19:16",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2260_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2354,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2353,
														"name": "BytesSlot",
														"nameLocations": [
															"4073:9:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2260,
														"src": "4073:9:16"
													},
													"referencedDeclaration": 2260,
													"src": "4073:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2260_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4072:21:16"
									},
									"scope": 2360,
									"src": "4007:172:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2361,
							"src": "1407:2774:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3989:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2372
						]
					},
					"id": 2373,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2362,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2363,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:17",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2372,
							"linearizedBaseContracts": [
								2372
							],
							"name": "IERC165",
							"nameLocation": "432:7:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2364,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:17",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2366,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:17",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "818:18:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2365,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:17"
									},
									"returnParameters": {
										"id": 2370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2371,
												"src": "861:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2368,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:17"
									},
									"scope": 2372,
									"src": "791:76:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2373,
							"src": "422:447:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:17"
				},
				"id": 17
			}
		}
	}
}